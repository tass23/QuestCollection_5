<library>
<!-- Weapons, based on UO, complete with magical properties. Incorporated into the Save/Load system which creates hash codes for Items to be Copy/Pasted to a text file to save it. Weapon Room contains ALL available weapons. Default images loaded for each weapon and weapon types are defined. NOTE: Additional properties have been added for Game Rooms, Mobs and Player, including Status attributes.

Properties for the Game
Scripts ->
not_set
set (player, "mp", GetRandomInt(50,80))
set (player, "stam", GetRandomInt(75,110))
set (player, "Pluck", GetRandomInt(75,90))

Else
set (player, "mp", GetRandomInt(50,120))
set (player, "stam", GetRandomInt(55,75))
set (player, "Pluck", GetRandomInt(45,65))

reg_resist
set (player, "mp", GetRandomInt(50,120))
set (player, "stam", GetRandomInt(55,75))
set (player, "Pluck", GetRandomInt(75,90))

reg_dam
set (player, "mp", GetRandomInt(50,80))
set (player, "stam", GetRandomInt(75,110))
set (player, "Pluck", GetRandomInt(45,65))

Status Attributes from Player ->
mp		"Mana: !"
stam 	"Stamina: !"
Pluck	"Luck: !"

Properties for Rooms
Call function targets() everytime the player enters the room.

Properties for Mobs
Add direct (for DirectDamage)

Properties for Player
Add mp, stam (mana and stamina) and pluck (Player Luck)

Status Attributes for Game ->
mp		"Mana: !"
stam	"Stamina: !"
Pluck	"Luck: !"


-->
	<command name="delete">
		<pattern>delete #object#</pattern>
		<script>
			RemoveObject (object)
		</script>
	</command>
	<command name="export">
    <pattern>export #object#</pattern>
    <script>
      if (GetInt(object, "saveable") = 1) {
        Ask ("Would you like to save this?") {
          if ((result)) {
            SaveObject (This())
          }
          else {
            msg ("Saving aborted...")
          }
        }
      }
      else {
        msg ("This item cannot be saved. Saving aborted...")
      }
    </script>
    </command>
    <command name="import">
	<pattern>import</pattern>
	<script><![CDATA[
	  msg ("Follow the instructions below to load your Saved Item:")
	  msg ("Note: When asked to give the item a name, it must be typed exactly as you named it when you Saved it.<br>")
	  msg ("<iframe src=\"http://www.uoexpanse.com/quests/index3.html\" width=\"75%\" height=\"auto\"></iframe>")
	  get input {
		data = (result)
		LoadObject (data)
	  }
	]]></script>
    </command>
	<command name="sell">
    <pattern>sell #object#</pattern>
    <unresolved>You want to sell what?</unresolved>
    <scope>inventory</scope>
    <script>
      if (not HasAttribute(game.pov.parent, "supply1")) {
        msg ("You can't sell stuff here.")
      }
      else if (not object.parent = game.pov) {
        msg ("You're not carrying " + object.article + ".")
      }
      else {
        player.gold = player.gold + SellingPrice(object)
        if (GetBoolean(object, "cloneme")) {
          RemoveObject (object)
        }
        else {
          object.parent = game.pov.parent.supply1
          SetupMerch (object)
        }
        msg ("You sell " + object.article + " for " + SellingPrice(object) + ".")
      }
    </script>
    </command>
	<command name="wear">
    <pattern>put #object# on; wear #object#; put on #object#; don #object#; wear #object#</pattern>
    <scope>inventory</scope>
    <multipleobjects type="script">
      game.pov.currentcommandpendingobjectscope = ScopeInventory()
    </multipleobjects>
    <script>
      if (multiple and ListCount(object) = 0) {
        msg ("You've nothing to wear.")
      }
      else {
        foreach (obj, object) {
          f = _DoWear(obj)
        }
        UpdateArmour
      }
    </script>
    </command>
    <command name="remove">
    <pattern>take #object# off; remove #object#; take off #object#; doff #object#</pattern>
    <scope>inventory</scope>
    <multipleobjects type="script">
      game.pov.currentcommandpendingobjectscope = ScopeInventory()
    </multipleobjects>
    <script>
      if (multiple and ListCount(object) = 0) {
        msg ("You've nothing to take off.")
      }
      else {
        foreach (obj, object) {
          f = _DoRemove(obj)
        }
      }
      UpdateArmour
    </script>
    </command>
	<command name="Weapon Attack">
    <pattern>attack #object#</pattern>
    <unresolved>You cannot attack that.</unresolved>
    <script><![CDATA[
      ShowRoomDescription
      if (game.pov.stam > game.pov.dam) {
        loc = game.pov.parent
        object = DictionaryItem(game.pov.currentcommandresolvedelements, "object")
        weapon = object
        if (loc.mlist <> null) {
          ShowMenu ("Attack?", loc.mlist, true) {
            object = DictionaryItem(game.pov.currentcommandresolvedelements, "object")
            weapon = object
            target = getObjectExt(result)
            weapondam = ToInt(ToString((combat_damage(weapon,target))))
            rnd = GetRandomInt(1,5)
            pdam = ToInt(ToString((weapondam)+(rnd)))
            game.pov.stam = (game.pov.stam) - ((weapon.volume)*2)
            if (target.current_hp < (weapon.dam)) {
              PrintCentered ("The " + target.alias + " is crushed by your powerful blow.<br>")
              IncScore ("Killed " + target.alias + " with " +weapon.alias+".", 5)
              Gen_Loot (target)
			  set (target, "status", "Passed beyond the Veil.")
              set (target, "alive", false)
              set (target, "current_hp", 0)
              list remove (game.pov.parent.mlist, target.name)
            }
            else if (target.current_hp > (weapon.dam)) {
              target.current_hp = (target.current_hp - pdam)
              PrintCentered ("Your "+weapon.alias+" collides with " + target.alias + " and has done " + pdam + " damage! (random value of: " +rnd+"")
              if (target.current_hp < 1) {
                PrintCentered ("You have killed " + target.alias + "!<br>")
                Gen_Loot (target)
				set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                IncScore ("Killed " + target.alias + " with " +weapon.alias+".", 5)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("But " + target.alias + " has only been injured and has " + target.current_hp + " health remaining!<br>")
              }
            }
          }
        }
        else {
          msg ("There is nothing to attack.")
        }
      }
      else {
        PrintCentered ("You attempt to wield your weapon in a menacing manner, but you are too weak!")
      }
    ]]></script>
  </command>
  <command name="Resists">
    <pattern>resists</pattern>
    <script>
      resists_table
    </script>
  </command>
    <object name="supply1">
    <inherit name="editor_room" />
    <alias>Supply Shop</alias>
    <descprefix>You are in the</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
	<map><![CDATA[<img src=''>]]></map>
    <attr name="map_zoom"><![CDATA[<img src=''>]]></attr>
	<mlist type="stringlist" />
    <dropdestination type="object">supply1</dropdestination>
    <description type="script"><![CDATA[
      msg ("Welcome to the " +this.alias+ "!<br>")
      msg ("Here are the items for sale:<br>")
      PrintCentered (game.pov.slist)
    ]]></description>
    <beforefirstenter type="script"><![CDATA[
      ShopList
      PrintCentered ("Supply Shop created and stocked...")
      foreach (obj, AllObjects()) {
        if (GetInt(obj, "saveable") = 1) {
          if (obj.wtype > 0) {
            CloneObjectAndMoveHere (obj)
          }
        }
      }
    ]]></beforefirstenter>
	<exitslistprefix>You can</exitslistprefix>
  </object>
	<object name="weap_room">
    <inherit name="editor_room" />
    <alias>wroom</alias>
	<mlist type="stringlist" />
    <dropdestination type="object">weap_room</dropdestination>
	<object name="spellbook2">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <alias>Spellbook</alias>
      <inroomdescription>A thick, spined leather-bound, tome.</inroomdescription>
      <uses type="int">150</uses>
      <alt type="stringlist">
      </alt>
      <listalias>Spellbook</listalias>
      <take />
      <takemsg>Knowing it would not be wise to leave such a powerful tool behind, you tuck the spellbook back into your pouch.</takemsg>
      <dropmsg>You cast aside the most powerful tool you have been given, as if it were a peanut shell.</dropmsg>
      <volume type="int">3</volume>
      <feature_usegive />
      <use type="boolean">false</use>
      <pic></pic>
      <usedefaultprefix />
      <prefix type="string"></prefix>
      <look type="script">
        msg ("a thick, spined leather-bound tome with " + spellbook2.uses + " Charges remaining.")
        picture ("sp_book1.png")
      </look>
      <ontake type="script">
        MoveObject (spellbook1, player)
      </ontake>
      <selfuseanything type="script">
        PrintCentered ("That will not work.")
      </selfuseanything>
    </object>
    <object name="assassinspike1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">4</volume>
      <feature_startscript />
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Wear</value>
        <value>Export</value>
        <value>Delete</value>
        <value>Drop</value>
      </inventoryverbs>
      <attr name="s_name" type="string"></attr>
      <alias>Assassin Spike</alias>
      <listalias>Assassin Spike</listalias>
      <pic type="string"></pic>
      <img>aspike_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">2</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">15</AosStrReq>
      <AosMinDam type="int">10</AosMinDam>
      <AosMaxDam type="int">12</AosMaxDam>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <Cold type="int">0</Cold>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Energy type="int">0</Energy>
      <Fire type="int">0</Fire>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <LowerManaCost type="int">0</LowerManaCost>
      <Luck type="int">0</Luck>
      <MageWeapon type="int">0</MageWeapon>
      <NightSight type="int">0</NightSight>
      <Physical type="int">0</Physical>
      <Poison type="int">0</Poison>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellChanneling type="int">0</SpellChanneling>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <AttackChance2 type="string"></AttackChance2>
      <BonusDex2 type="string"></BonusDex2>
      <BonusHits2 type="string"></BonusHits2>
      <BonusInt2 type="string"></BonusInt2>
      <BonusMana2 type="string"></BonusMana2>
      <BonusStam2 type="string"></BonusStam2>
      <BonusStr2 type="string"></BonusStr2>
      <Chaos2 type="string"></Chaos2>
      <Cold2 type="string"></Cold2>
      <DefendChance2 type="string"></DefendChance2>
      <Direct2 type="string"></Direct2>
      <Energy2 type="string"></Energy2>
      <Fire2 type="string"></Fire2>
      <HitColdArea2 type="string"></HitColdArea2>
      <HitDispel2 type="string"></HitDispel2>
      <HitEnergyArea2 type="string"></HitEnergyArea2>
      <HitFireArea2 type="string"></HitFireArea2>
      <HitFireball2 type="string"></HitFireball2>
      <HitHarm2 type="string"></HitHarm2>
      <HitLeechHits2 type="string"></HitLeechHits2>
      <HitLeechMana2 type="string"></HitLeechMana2>
      <HitLeechStam2 type="string"></HitLeechStam2>
      <HitLightning2 type="string"></HitLightning2>
      <HitLowerAttack2 type="string"></HitLowerAttack2>
      <HitLowerDefend2 type="string"></HitLowerDefend2>
      <HitMagicArrow2 type="string"></HitMagicArrow2>
      <HitPhysicalArea2 type="string"></HitPhysicalArea2>
      <LowerManaCost2 type="string"></LowerManaCost2>
      <Luck2 type="string"></Luck2>
      <MageWeapon2 type="string"></MageWeapon2>
      <NightSight2 type="string"></NightSight2>
      <Physical2 type="string"></Physical2>
      <Poison2 type="string"></Poison2>
      <ReflectPhysical2 type="string"></ReflectPhysical2>
      <RegenHits2 type="string"></RegenHits2>
      <RegenMana2 type="string"></RegenMana2>
      <RegenStam2 type="string"></RegenStam2>
      <ResistColdBonus2 type="string"></ResistColdBonus2>
      <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
      <ResistFireBonus2 type="string"></ResistFireBonus2>
      <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
      <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
      <SpellChanneling2 type="string"></SpellChanneling2>
      <SpellDamage2 type="string"></SpellDamage2>
      <WeaponDamage2 type="string"></WeaponDamage2>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <look type="script"><![CDATA[
        obj = this
        if (not Got(obj)) {
          msg ("You see the " + obj.alias + " waiting for you to pick it up.")
        }
        else if (Got(obj)) {
          if (obj.wtype = 1) {
            a = ("Axe")
          }
          else if (obj.wtype = 2) {
            a = ("Knife")
          }
          else if (obj.wtype = 3) {
            a = ("Mace")
          }
          else if (obj.wtype = 4) {
            a = ("Polearm")
          }
          else if (obj.wtype = 5) {
            a = ("Ranged")
          }
          else if (obj.wtype = 6) {
            a = ("Spear")
          }
          else if (obj.wtype = 7) {
            a = ("Fork")
          }
          else if (obj.wtype = 8) {
            a = ("Staff")
          }
          else if (obj.wtype = 9) {
            a = ("Sword")
          }
          else {
            a = ("Unknown")
          }
          if (GetInt(obj, "saveable") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saveable") = 0) {
            if (GetInt(obj, "saved") = 1) {
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
            else if (GetInt(obj, "saved") = 0) {
              set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
              set (obj, "saved", 1)
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
          }
          else {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
      ]]></look>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
      <onafterwear type="script"><![CDATA[
        obj = this
        player.physical = player.physical+obj.Physical
        player.fire = player.fire+obj.Fire
        player.cold = player.cold+obj.Cold
        player.poison = player.poison+obj.Poison
        player.energy = player.energy+obj.Energy
        player.HitColdArea = player.HitColdArea+obj.HitColdArea
        player.HitDispel = player.HitDispel+obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea+obj.HitFireArea
        player.HitFireball = player.HitFireball+obj.HitFireball
        player.HitHarm = player.HitHarm+obj.HitHarm
        player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
        player.HitLightning = player.HitLightning+obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
        player.AttackChance = player.AttackChance+obj.AttackChance
        player.dex = player.dex+obj.BonusDex
        game.pov.health = game.pov.health+obj.BonusHits
        player.int = player.int+obj.BonusInt
        player.mp = player.mp+obj.BonusMana
        player.stam = player.stam+obj.BonusStam
        player.str = player.str+obj.BonusStr
        player.DefendChance = player.DefendChance+obj.DefendChance
        player.SpellDamage = player.SpellDamage+obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
        player.RegenHits = player.RegenHits+obj.RegenHits
        player.RegenMana = player.RegenMana+obj.RegenMana
        player.RegenStam = player.RegenStam+obj.RegenStam
        player.Pluck = player.Pluck+obj.Luck
        player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
        player.weapon = obj.alias
        resists_table
        if (player.RegenHits > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (hp_regen1)
        }
        if (player.RegenMana > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (mp_regen1)
        }
        if (player.RegenStam > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (stam_regen1)
        }
      ]]>
      </onafterwear>
      <onafterremove type="script"><![CDATA[
        obj = this
        player.physical = player.physical-obj.Physical
        player.fire = player.fire-obj.Fire
        player.cold = player.cold-obj.Cold
        player.poison = player.poison-obj.Poison
        player.energy = player.energy-obj.Energy
        player.HitColdArea = player.HitColdArea-obj.HitColdArea
        player.HitDispel = player.HitDispel-obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea-obj.HitFireArea
        player.HitFireball = player.HitFireball-obj.HitFireball
        player.HitHarm = player.HitHarm-obj.HitHarm
        player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
        player.HitLightning = player.HitLightning-obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
        player.AttackChance = player.AttackChance-obj.AttackChance
        player.dex = player.dex-obj.BonusDex
        game.pov.health = game.pov.health-obj.BonusHits
        player.int = player.int-obj.BonusInt
        player.mp = player.mp-obj.BonusMana
        player.stam = player.stam-obj.BonusStam
        player.str = player.str-obj.BonusStr
        player.DefendChance = player.DefendChance-obj.DefendChance
        player.SpellDamage = player.SpellDamage-obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
        player.RegenHits = player.RegenHits-obj.RegenHits
        player.RegenMana = player.RegenMana-obj.RegenMana
        player.RegenStam = player.RegenStam-obj.RegenStam
        player.Pluck = player.Pluck-obj.Luck
        player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
        player.weapon = ""
        resists_table
        if (player.RegenHits < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (hp_regen1)
        }
        if (player.RegenMana < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (mp_regen1)
        }
        if (player.RegenStam < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (stam_regen1)
        }
      ]]></onafterremove>
      <attack type="script"><![CDATA[
        mlist = targets()
        ShowMenu ("Attack what?", mlist, false) {
          mob = (result)
          if (GetInt(mob, "current_hp") > 0) {
            msg (CommandLink("Attack", "Attack"))
          }
          else {
            PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
          }
        }
      ]]></attack>
      <m_props2 type="scriptdictionary" />
    </object>
    <object name="axe1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">4</volume>
      <feature_startscript />
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Wear</value>
        <value>Export</value>
        <value>Delete</value>
        <value>Drop</value>
      </inventoryverbs>
      <attr name="s_name" type="string"></attr>
      <alias>Axe</alias>
      <listalias>Axe</listalias>
      <pic type="string"></pic>
      <img>axe_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">1</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">35</AosStrReq>
      <AosMinDam type="int">14</AosMinDam>
      <AosMaxDam type="int">16</AosMaxDam>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <Cold type="int">0</Cold>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Energy type="int">0</Energy>
      <Fire type="int">0</Fire>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <LowerManaCost type="int">0</LowerManaCost>
      <Luck type="int">0</Luck>
      <MageWeapon type="int">0</MageWeapon>
      <NightSight type="int">0</NightSight>
      <Physical type="int">0</Physical>
      <Poison type="int">0</Poison>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellChanneling type="int">0</SpellChanneling>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <AttackChance2 type="string"></AttackChance2>
      <BonusDex2 type="string"></BonusDex2>
      <BonusHits2 type="string"></BonusHits2>
      <BonusInt2 type="string"></BonusInt2>
      <BonusMana2 type="string"></BonusMana2>
      <BonusStam2 type="string"></BonusStam2>
      <BonusStr2 type="string"></BonusStr2>
      <Chaos2 type="string"></Chaos2>
      <Cold2 type="string"></Cold2>
      <DefendChance2 type="string"></DefendChance2>
      <Direct2 type="string"></Direct2>
      <Energy2 type="string"></Energy2>
      <Fire2 type="string"></Fire2>
      <HitColdArea2 type="string"></HitColdArea2>
      <HitDispel2 type="string"></HitDispel2>
      <HitEnergyArea2 type="string"></HitEnergyArea2>
      <HitFireArea2 type="string"></HitFireArea2>
      <HitFireball2 type="string"></HitFireball2>
      <HitHarm2 type="string"></HitHarm2>
      <HitLeechHits2 type="string"></HitLeechHits2>
      <HitLeechMana2 type="string"></HitLeechMana2>
      <HitLeechStam2 type="string"></HitLeechStam2>
      <HitLightning2 type="string"></HitLightning2>
      <HitLowerAttack2 type="string"></HitLowerAttack2>
      <HitLowerDefend2 type="string"></HitLowerDefend2>
      <HitMagicArrow2 type="string"></HitMagicArrow2>
      <HitPhysicalArea2 type="string"></HitPhysicalArea2>
      <LowerManaCost2 type="string"></LowerManaCost2>
      <Luck2 type="string"></Luck2>
      <MageWeapon2 type="string"></MageWeapon2>
      <NightSight2 type="string"></NightSight2>
      <Physical2 type="string"></Physical2>
      <Poison2 type="string"></Poison2>
      <ReflectPhysical2 type="string"></ReflectPhysical2>
      <RegenHits2 type="string"></RegenHits2>
      <RegenMana2 type="string"></RegenMana2>
      <RegenStam2 type="string"></RegenStam2>
      <ResistColdBonus2 type="string"></ResistColdBonus2>
      <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
      <ResistFireBonus2 type="string"></ResistFireBonus2>
      <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
      <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
      <SpellChanneling2 type="string"></SpellChanneling2>
      <SpellDamage2 type="string"></SpellDamage2>
      <WeaponDamage2 type="string"></WeaponDamage2>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip the handle tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <look type="script"><![CDATA[
        obj = this
        if (not Got(obj)) {
          msg ("You see the " + obj.alias + " waiting for you to pick it up.")
        }
        else if (Got(obj)) {
          if (obj.wtype = 1) {
            a = ("Axe")
          }
          else if (obj.wtype = 2) {
            a = ("Knife")
          }
          else if (obj.wtype = 3) {
            a = ("Mace")
          }
          else if (obj.wtype = 4) {
            a = ("Polearm")
          }
          else if (obj.wtype = 5) {
            a = ("Ranged")
          }
          else if (obj.wtype = 6) {
            a = ("Spear")
          }
          else if (obj.wtype = 7) {
            a = ("Fork")
          }
          else if (obj.wtype = 8) {
            a = ("Staff")
          }
          else if (obj.wtype = 9) {
            a = ("Sword")
          }
          else {
            a = ("Unknown")
          }
          if (GetInt(obj, "saveable") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saveable") = 0) {
            if (GetInt(obj, "saved") = 1) {
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
            else if (GetInt(obj, "saved") = 0) {
              set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
              set (obj, "saved", 1)
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
          }
          else {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
      ]]></look>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
      <onafterwear type="script"><![CDATA[
        obj = this
        player.physical = player.physical+obj.Physical
        player.fire = player.fire+obj.Fire
        player.cold = player.cold+obj.Cold
        player.poison = player.poison+obj.Poison
        player.energy = player.energy+obj.Energy
        player.HitColdArea = player.HitColdArea+obj.HitColdArea
        player.HitDispel = player.HitDispel+obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea+obj.HitFireArea
        player.HitFireball = player.HitFireball+obj.HitFireball
        player.HitHarm = player.HitHarm+obj.HitHarm
        player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
        player.HitLightning = player.HitLightning+obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
        player.AttackChance = player.AttackChance+obj.AttackChance
        player.dex = player.dex+obj.BonusDex
        game.pov.health = game.pov.health+obj.BonusHits
        player.int = player.int+obj.BonusInt
        player.mp = player.mp+obj.BonusMana
        player.stam = player.stam+obj.BonusStam
        player.str = player.str+obj.BonusStr
        player.DefendChance = player.DefendChance+obj.DefendChance
        player.SpellDamage = player.SpellDamage+obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
        player.RegenHits = player.RegenHits+obj.RegenHits
        player.RegenMana = player.RegenMana+obj.RegenMana
        player.RegenStam = player.RegenStam+obj.RegenStam
        player.Pluck = player.Pluck+obj.Luck
        player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
        player.weapon = obj.alias
        resists_table
        if (player.RegenHits > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (hp_regen1)
        }
        if (player.RegenMana > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (mp_regen1)
        }
        if (player.RegenStam > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (stam_regen1)
        }
      ]]></onafterwear>
      <onafterremove type="script"><![CDATA[
        obj = this
        player.physical = player.physical-obj.Physical
        player.fire = player.fire-obj.Fire
        player.cold = player.cold-obj.Cold
        player.poison = player.poison-obj.Poison
        player.energy = player.energy-obj.Energy
        player.HitColdArea = player.HitColdArea-obj.HitColdArea
        player.HitDispel = player.HitDispel-obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea-obj.HitFireArea
        player.HitFireball = player.HitFireball-obj.HitFireball
        player.HitHarm = player.HitHarm-obj.HitHarm
        player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
        player.HitLightning = player.HitLightning-obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
        player.AttackChance = player.AttackChance-obj.AttackChance
        player.dex = player.dex-obj.BonusDex
        game.pov.health = game.pov.health-obj.BonusHits
        player.int = player.int-obj.BonusInt
        player.mp = player.mp-obj.BonusMana
        player.stam = player.stam-obj.BonusStam
        player.str = player.str-obj.BonusStr
        player.DefendChance = player.DefendChance-obj.DefendChance
        player.SpellDamage = player.SpellDamage-obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
        player.RegenHits = player.RegenHits-obj.RegenHits
        player.RegenMana = player.RegenMana-obj.RegenMana
        player.RegenStam = player.RegenStam-obj.RegenStam
        player.Pluck = player.Pluck-obj.Luck
        player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
        player.weapon = ""
        resists_table
        if (player.RegenHits < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (hp_regen1)
        }
        if (player.RegenMana < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (mp_regen1)
        }
        if (player.RegenStam < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (stam_regen1)
        }
      ]]></onafterremove>
      <attack type="script"><![CDATA[
        mlist = targets()
        ShowMenu ("Attack what?", mlist, false) {
          mob = (result)
          if (GetInt(mob, "current_hp") > 0) {
            msg (CommandLink("Attack", "Attack"))
          }
          else {
            PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
          }
        }
      ]]></attack>
      <m_props2 type="scriptdictionary" />
    </object>
    <object name="bardiche1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">7</volume>
      <feature_startscript />
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Wear</value>
        <value>Export</value>
        <value>Delete</value>
        <value>Drop</value>
      </inventoryverbs>
      <attr name="s_name" type="string"></attr>
      <alias>Bardiche</alias>
      <listalias>Bardiche</listalias>
      <pic type="string"></pic>
      <img>bardiche_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
	  <wtype type="int">4</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">45</AosStrReq>
      <AosMinDam type="int">17</AosMinDam>
      <AosMaxDam type="int">18</AosMaxDam>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <Cold type="int">0</Cold>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Energy type="int">0</Energy>
      <Fire type="int">0</Fire>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <LowerManaCost type="int">0</LowerManaCost>
      <Luck type="int">0</Luck>
      <MageWeapon type="int">0</MageWeapon>
      <NightSight type="int">0</NightSight>
      <Physical type="int">0</Physical>
      <Poison type="int">0</Poison>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellChanneling type="int">0</SpellChanneling>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <AttackChance2 type="string"></AttackChance2>
      <BonusDex2 type="string"></BonusDex2>
      <BonusHits2 type="string"></BonusHits2>
      <BonusInt2 type="string"></BonusInt2>
      <BonusMana2 type="string"></BonusMana2>
      <BonusStam2 type="string"></BonusStam2>
      <BonusStr2 type="string"></BonusStr2>
      <Chaos2 type="string"></Chaos2>
      <Cold2 type="string"></Cold2>
      <DefendChance2 type="string"></DefendChance2>
      <Direct2 type="string"></Direct2>
      <Energy2 type="string"></Energy2>
      <Fire2 type="string"></Fire2>
      <HitColdArea2 type="string"></HitColdArea2>
      <HitDispel2 type="string"></HitDispel2>
      <HitEnergyArea2 type="string"></HitEnergyArea2>
      <HitFireArea2 type="string"></HitFireArea2>
      <HitFireball2 type="string"></HitFireball2>
      <HitHarm2 type="string"></HitHarm2>
      <HitLeechHits2 type="string"></HitLeechHits2>
      <HitLeechMana2 type="string"></HitLeechMana2>
      <HitLeechStam2 type="string"></HitLeechStam2>
      <HitLightning2 type="string"></HitLightning2>
      <HitLowerAttack2 type="string"></HitLowerAttack2>
      <HitLowerDefend2 type="string"></HitLowerDefend2>
      <HitMagicArrow2 type="string"></HitMagicArrow2>
      <HitPhysicalArea2 type="string"></HitPhysicalArea2>
      <LowerManaCost2 type="string"></LowerManaCost2>
      <Luck2 type="string"></Luck2>
      <MageWeapon2 type="string"></MageWeapon2>
      <NightSight2 type="string"></NightSight2>
      <Physical2 type="string"></Physical2>
      <Poison2 type="string"></Poison2>
      <ReflectPhysical2 type="string"></ReflectPhysical2>
      <RegenHits2 type="string"></RegenHits2>
      <RegenMana2 type="string"></RegenMana2>
      <RegenStam2 type="string"></RegenStam2>
      <ResistColdBonus2 type="string"></ResistColdBonus2>
      <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
      <ResistFireBonus2 type="string"></ResistFireBonus2>
      <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
      <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
      <SpellChanneling2 type="string"></SpellChanneling2>
      <SpellDamage2 type="string"></SpellDamage2>
      <WeaponDamage2 type="string"></WeaponDamage2>
	  <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <look type="script"><![CDATA[
        obj = this
        if (not Got(obj)) {
          msg ("You see the " + obj.alias + " waiting for you to pick it up.")
        }
        else if (Got(obj)) {
          if (obj.wtype = 1) {
            a = ("Axe")
          }
          else if (obj.wtype = 2) {
            a = ("Knife")
          }
          else if (obj.wtype = 3) {
            a = ("Mace")
          }
          else if (obj.wtype = 4) {
            a = ("Polearm")
          }
          else if (obj.wtype = 5) {
            a = ("Ranged")
          }
          else if (obj.wtype = 6) {
            a = ("Spear")
          }
          else if (obj.wtype = 7) {
            a = ("Fork")
          }
          else if (obj.wtype = 8) {
            a = ("Staff")
          }
          else if (obj.wtype = 9) {
            a = ("Sword")
          }
          else {
            a = ("Unknown")
          }
          if (GetInt(obj, "saveable") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saveable") = 0) {
            if (GetInt(obj, "saved") = 1) {
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
            else if (GetInt(obj, "saved") = 0) {
              set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
              set (obj, "saved", 1)
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
          }
          else {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
      ]]></look>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
      <onafterwear type="script"><![CDATA[
        obj = this
        player.physical = player.physical+obj.Physical
        player.fire = player.fire+obj.Fire
        player.cold = player.cold+obj.Cold
        player.poison = player.poison+obj.Poison
        player.energy = player.energy+obj.Energy
        player.HitColdArea = player.HitColdArea+obj.HitColdArea
        player.HitDispel = player.HitDispel+obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea+obj.HitFireArea
        player.HitFireball = player.HitFireball+obj.HitFireball
        player.HitHarm = player.HitHarm+obj.HitHarm
        player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
        player.HitLightning = player.HitLightning+obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
        player.AttackChance = player.AttackChance+obj.AttackChance
        player.dex = player.dex+obj.BonusDex
        game.pov.health = game.pov.health+obj.BonusHits
        player.int = player.int+obj.BonusInt
        player.mp = player.mp+obj.BonusMana
        player.stam = player.stam+obj.BonusStam
        player.str = player.str+obj.BonusStr
        player.DefendChance = player.DefendChance+obj.DefendChance
        player.SpellDamage = player.SpellDamage+obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
        player.RegenHits = player.RegenHits+obj.RegenHits
        player.RegenMana = player.RegenMana+obj.RegenMana
        player.RegenStam = player.RegenStam+obj.RegenStam
        player.Pluck = player.Pluck+obj.Luck
        player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
        player.weapon = obj.alias
        resists_table
        if (player.RegenHits > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (hp_regen1)
        }
        if (player.RegenMana > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (mp_regen1)
        }
        if (player.RegenStam > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (stam_regen1)
        }
      ]]></onafterwear>
      <onafterremove type="script"><![CDATA[
        obj = this
        player.physical = player.physical-obj.Physical
        player.fire = player.fire-obj.Fire
        player.cold = player.cold-obj.Cold
        player.poison = player.poison-obj.Poison
        player.energy = player.energy-obj.Energy
        player.HitColdArea = player.HitColdArea-obj.HitColdArea
        player.HitDispel = player.HitDispel-obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea-obj.HitFireArea
        player.HitFireball = player.HitFireball-obj.HitFireball
        player.HitHarm = player.HitHarm-obj.HitHarm
        player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
        player.HitLightning = player.HitLightning-obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
        player.AttackChance = player.AttackChance-obj.AttackChance
        player.dex = player.dex-obj.BonusDex
        game.pov.health = game.pov.health-obj.BonusHits
        player.int = player.int-obj.BonusInt
        player.mp = player.mp-obj.BonusMana
        player.stam = player.stam-obj.BonusStam
        player.str = player.str-obj.BonusStr
        player.DefendChance = player.DefendChance-obj.DefendChance
        player.SpellDamage = player.SpellDamage-obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
        player.RegenHits = player.RegenHits-obj.RegenHits
        player.RegenMana = player.RegenMana-obj.RegenMana
        player.RegenStam = player.RegenStam-obj.RegenStam
        player.Pluck = player.Pluck-obj.Luck
        player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
        player.weapon = ""
        resists_table
        if (player.RegenHits < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (hp_regen1)
        }
        if (player.RegenMana < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (mp_regen1)
        }
        if (player.RegenStam < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (stam_regen1)
        }
      ]]></onafterremove>
      <attack type="script"><![CDATA[
        mlist = targets()
        ShowMenu ("Attack what?", mlist, false) {
          mob = (result)
          if (GetInt(mob, "current_hp") > 0) {
            msg (CommandLink("Attack", "Attack"))
          }
          else {
            PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
          }
        }
      ]]></attack>
      <m_props2 type="scriptdictionary" />
    </object>
    <object name="mace1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
	  <take />
      <volume type="int">4</volume>
	  <feature_startscript />
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Wear</value>
        <value>Export</value>
        <value>Delete</value>
        <value>Drop</value>
      </inventoryverbs>
      <attr name="s_name" type="string"></attr>
	  <alias>Mace</alias>
      <listalias>Mace</listalias>
      <pic type="string"></pic>
      <img>mace_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">3</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">45</AosStrReq>
      <AosMinDam type="int">12</AosMinDam>
      <AosMaxDam type="int">14</AosMaxDam>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <Cold type="int">0</Cold>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Energy type="int">0</Energy>
      <Fire type="int">0</Fire>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <LowerManaCost type="int">0</LowerManaCost>
      <Luck type="int">0</Luck>
      <MageWeapon type="int">0</MageWeapon>
      <NightSight type="int">0</NightSight>
      <Physical type="int">0</Physical>
      <Poison type="int">0</Poison>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellChanneling type="int">0</SpellChanneling>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <AttackChance2 type="string"></AttackChance2>
      <BonusDex2 type="string"></BonusDex2>
      <BonusHits2 type="string"></BonusHits2>
      <BonusInt2 type="string"></BonusInt2>
      <BonusMana2 type="string"></BonusMana2>
      <BonusStam2 type="string"></BonusStam2>
      <BonusStr2 type="string"></BonusStr2>
      <Chaos2 type="string"></Chaos2>
      <Cold2 type="string"></Cold2>
      <DefendChance2 type="string"></DefendChance2>
      <Direct2 type="string"></Direct2>
      <Energy2 type="string"></Energy2>
      <Fire2 type="string"></Fire2>
      <HitColdArea2 type="string"></HitColdArea2>
      <HitDispel2 type="string"></HitDispel2>
      <HitEnergyArea2 type="string"></HitEnergyArea2>
      <HitFireArea2 type="string"></HitFireArea2>
      <HitFireball2 type="string"></HitFireball2>
      <HitHarm2 type="string"></HitHarm2>
      <HitLeechHits2 type="string"></HitLeechHits2>
      <HitLeechMana2 type="string"></HitLeechMana2>
      <HitLeechStam2 type="string"></HitLeechStam2>
      <HitLightning2 type="string"></HitLightning2>
      <HitLowerAttack2 type="string"></HitLowerAttack2>
      <HitLowerDefend2 type="string"></HitLowerDefend2>
      <HitMagicArrow2 type="string"></HitMagicArrow2>
      <HitPhysicalArea2 type="string"></HitPhysicalArea2>
      <LowerManaCost2 type="string"></LowerManaCost2>
      <Luck2 type="string"></Luck2>
      <MageWeapon2 type="string"></MageWeapon2>
      <NightSight2 type="string"></NightSight2>
      <Physical2 type="string"></Physical2>
      <Poison2 type="string"></Poison2>
      <ReflectPhysical2 type="string"></ReflectPhysical2>
      <RegenHits2 type="string"></RegenHits2>
      <RegenMana2 type="string"></RegenMana2>
      <RegenStam2 type="string"></RegenStam2>
      <ResistColdBonus2 type="string"></ResistColdBonus2>
      <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
      <ResistFireBonus2 type="string"></ResistFireBonus2>
      <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
      <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
      <SpellChanneling2 type="string"></SpellChanneling2>
      <SpellDamage2 type="string"></SpellDamage2>
      <WeaponDamage2 type="string"></WeaponDamage2>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip the hilt tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <look type="script"><![CDATA[
        obj = this
        if (not Got(obj)) {
          msg ("You see the " + obj.alias + " waiting for you to pick it up.")
        }
        else if (Got(obj)) {
          if (obj.wtype = 1) {
            a = ("Axe")
          }
          else if (obj.wtype = 2) {
            a = ("Knife")
          }
          else if (obj.wtype = 3) {
            a = ("Mace")
          }
          else if (obj.wtype = 4) {
            a = ("Polearm")
          }
          else if (obj.wtype = 5) {
            a = ("Ranged")
          }
          else if (obj.wtype = 6) {
            a = ("Spear")
          }
          else if (obj.wtype = 7) {
            a = ("Fork")
          }
          else if (obj.wtype = 8) {
            a = ("Staff")
          }
          else if (obj.wtype = 9) {
            a = ("Sword")
          }
          else {
            a = ("Unknown")
          }
          if (GetInt(obj, "saveable") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saveable") = 0) {
            if (GetInt(obj, "saved") = 1) {
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
            else if (GetInt(obj, "saved") = 0) {
              set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
              set (obj, "saved", 1)
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
          }
          else {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
      ]]></look>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
      <onafterwear type="script"><![CDATA[
        obj = this
        player.physical = player.physical+obj.Physical
        player.fire = player.fire+obj.Fire
        player.cold = player.cold+obj.Cold
        player.poison = player.poison+obj.Poison
        player.energy = player.energy+obj.Energy
        player.HitColdArea = player.HitColdArea+obj.HitColdArea
        player.HitDispel = player.HitDispel+obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea+obj.HitFireArea
        player.HitFireball = player.HitFireball+obj.HitFireball
        player.HitHarm = player.HitHarm+obj.HitHarm
        player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
        player.HitLightning = player.HitLightning+obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
        player.AttackChance = player.AttackChance+obj.AttackChance
        player.dex = player.dex+obj.BonusDex
        game.pov.health = game.pov.health+obj.BonusHits
        player.int = player.int+obj.BonusInt
        player.mp = player.mp+obj.BonusMana
        player.stam = player.stam+obj.BonusStam
        player.str = player.str+obj.BonusStr
        player.DefendChance = player.DefendChance+obj.DefendChance
        player.SpellDamage = player.SpellDamage+obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
        player.RegenHits = player.RegenHits+obj.RegenHits
        player.RegenMana = player.RegenMana+obj.RegenMana
        player.RegenStam = player.RegenStam+obj.RegenStam
        player.Pluck = player.Pluck+obj.Luck
        player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
        player.weapon = obj.alias
        resists_table
        if (player.RegenHits > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (hp_regen1)
        }
        if (player.RegenMana > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (mp_regen1)
        }
        if (player.RegenStam > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (stam_regen1)
        }
      ]]></onafterwear>
      <onafterremove type="script"><![CDATA[
        obj = this
        player.physical = player.physical-obj.Physical
        player.fire = player.fire-obj.Fire
        player.cold = player.cold-obj.Cold
        player.poison = player.poison-obj.Poison
        player.energy = player.energy-obj.Energy
        player.HitColdArea = player.HitColdArea-obj.HitColdArea
        player.HitDispel = player.HitDispel-obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea-obj.HitFireArea
        player.HitFireball = player.HitFireball-obj.HitFireball
        player.HitHarm = player.HitHarm-obj.HitHarm
        player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
        player.HitLightning = player.HitLightning-obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
        player.AttackChance = player.AttackChance-obj.AttackChance
        player.dex = player.dex-obj.BonusDex
        game.pov.health = game.pov.health-obj.BonusHits
        player.int = player.int-obj.BonusInt
        player.mp = player.mp-obj.BonusMana
        player.stam = player.stam-obj.BonusStam
        player.str = player.str-obj.BonusStr
        player.DefendChance = player.DefendChance-obj.DefendChance
        player.SpellDamage = player.SpellDamage-obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
        player.RegenHits = player.RegenHits-obj.RegenHits
        player.RegenMana = player.RegenMana-obj.RegenMana
        player.RegenStam = player.RegenStam-obj.RegenStam
        player.Pluck = player.Pluck-obj.Luck
        player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
        player.weapon = ""
        resists_table
        if (player.RegenHits < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (hp_regen1)
        }
        if (player.RegenMana < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (mp_regen1)
        }
        if (player.RegenStam < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (stam_regen1)
        }
      ]]></onafterremove>
      <attack type="script"><![CDATA[
        mlist = targets()
        ShowMenu ("Attack what?", mlist, false) {
          mob = (result)
          if (GetInt(mob, "current_hp") > 0) {
            msg (CommandLink("Attack", "Attack"))
          }
          else {
            PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
          }
        }
      ]]></attack>
      <m_props2 type="scriptdictionary" />
    </object>
    <object name="bow1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">6</volume>
      <feature_startscript />
	  <inventoryverbs type="stringlist">
	    <value>Look at</value>
        <value>Wear</value>
        <value>Export</value>
        <value>Delete</value>
        <value>Drop</value>
      </inventoryverbs>
	  <attr name="s_name" type="string"></attr>
      <alias>Bow</alias>
      <listalias>Bow</listalias>
	  <pic type="string"></pic>
      <img>bow_1</img>
	  <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
	  <wtype type="int">5</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">30</AosStrReq>
      <AosMinDam type="int">15</AosMinDam>
      <AosMaxDam type="int">19</AosMaxDam>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <Cold type="int">0</Cold>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Energy type="int">0</Energy>
      <Fire type="int">0</Fire>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <LowerManaCost type="int">0</LowerManaCost>
      <Luck type="int">0</Luck>
      <MageWeapon type="int">0</MageWeapon>
      <NightSight type="int">0</NightSight>
      <Physical type="int">0</Physical>
      <Poison type="int">0</Poison>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellChanneling type="int">0</SpellChanneling>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <AttackChance2 type="string"></AttackChance2>
      <BonusDex2 type="string"></BonusDex2>
      <BonusHits2 type="string"></BonusHits2>
      <BonusInt2 type="string"></BonusInt2>
      <BonusMana2 type="string"></BonusMana2>
      <BonusStam2 type="string"></BonusStam2>
      <BonusStr2 type="string"></BonusStr2>
      <Chaos2 type="string"></Chaos2>
      <Cold2 type="string"></Cold2>
      <DefendChance2 type="string"></DefendChance2>
      <Direct2 type="string"></Direct2>
      <Energy2 type="string"></Energy2>
      <Fire2 type="string"></Fire2>
      <HitColdArea2 type="string"></HitColdArea2>
      <HitDispel2 type="string"></HitDispel2>
      <HitEnergyArea2 type="string"></HitEnergyArea2>
      <HitFireArea2 type="string"></HitFireArea2>
      <HitFireball2 type="string"></HitFireball2>
      <HitHarm2 type="string"></HitHarm2>
      <HitLeechHits2 type="string"></HitLeechHits2>
      <HitLeechMana2 type="string"></HitLeechMana2>
      <HitLeechStam2 type="string"></HitLeechStam2>
      <HitLightning2 type="string"></HitLightning2>
      <HitLowerAttack2 type="string"></HitLowerAttack2>
      <HitLowerDefend2 type="string"></HitLowerDefend2>
      <HitMagicArrow2 type="string"></HitMagicArrow2>
      <HitPhysicalArea2 type="string"></HitPhysicalArea2>
      <LowerManaCost2 type="string"></LowerManaCost2>
      <Luck2 type="string"></Luck2>
      <MageWeapon2 type="string"></MageWeapon2>
      <NightSight2 type="string"></NightSight2>
      <Physical2 type="string"></Physical2>
      <Poison2 type="string"></Poison2>
      <ReflectPhysical2 type="string"></ReflectPhysical2>
      <RegenHits2 type="string"></RegenHits2>
      <RegenMana2 type="string"></RegenMana2>
      <RegenStam2 type="string"></RegenStam2>
      <ResistColdBonus2 type="string"></ResistColdBonus2>
      <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
      <ResistFireBonus2 type="string"></ResistFireBonus2>
      <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
      <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
      <SpellChanneling2 type="string"></SpellChanneling2>
      <SpellDamage2 type="string"></SpellDamage2>
      <WeaponDamage2 type="string"></WeaponDamage2>
	  <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You notch an arrow.</wearmsg>
      <removemsg>You sling the bow.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <look type="script"><![CDATA[
        obj = this
        if (not Got(obj)) {
          msg ("You see the " + obj.alias + " waiting for you to pick it up.")
        }
        else if (Got(obj)) {
          if (obj.wtype = 1) {
            a = ("Axe")
          }
          else if (obj.wtype = 2) {
            a = ("Knife")
          }
          else if (obj.wtype = 3) {
            a = ("Mace")
          }
          else if (obj.wtype = 4) {
            a = ("Polearm")
          }
          else if (obj.wtype = 5) {
            a = ("Ranged")
          }
          else if (obj.wtype = 6) {
            a = ("Spear")
          }
          else if (obj.wtype = 7) {
            a = ("Fork")
          }
          else if (obj.wtype = 8) {
            a = ("Staff")
          }
          else if (obj.wtype = 9) {
            a = ("Sword")
          }
          else {
            a = ("Unknown")
          }
          if (GetInt(obj, "saveable") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saveable") = 0) {
            if (GetInt(obj, "saved") = 1) {
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
            else if (GetInt(obj, "saved") = 0) {
              set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
              set (obj, "saved", 1)
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
          }
          else {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
      ]]></look>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
      <onafterwear type="script"><![CDATA[
        obj = this
        player.physical = player.physical+obj.Physical
        player.fire = player.fire+obj.Fire
        player.cold = player.cold+obj.Cold
        player.poison = player.poison+obj.Poison
        player.energy = player.energy+obj.Energy
        player.HitColdArea = player.HitColdArea+obj.HitColdArea
        player.HitDispel = player.HitDispel+obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea+obj.HitFireArea
        player.HitFireball = player.HitFireball+obj.HitFireball
        player.HitHarm = player.HitHarm+obj.HitHarm
        player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
        player.HitLightning = player.HitLightning+obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
        player.AttackChance = player.AttackChance+obj.AttackChance
        player.dex = player.dex+obj.BonusDex
        game.pov.health = game.pov.health+obj.BonusHits
        player.int = player.int+obj.BonusInt
        player.mp = player.mp+obj.BonusMana
        player.stam = player.stam+obj.BonusStam
        player.str = player.str+obj.BonusStr
        player.DefendChance = player.DefendChance+obj.DefendChance
        player.SpellDamage = player.SpellDamage+obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
        player.RegenHits = player.RegenHits+obj.RegenHits
        player.RegenMana = player.RegenMana+obj.RegenMana
        player.RegenStam = player.RegenStam+obj.RegenStam
        player.Pluck = player.Pluck+obj.Luck
        player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
        player.weapon = obj.alias
        resists_table
        if (player.RegenHits > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (hp_regen1)
        }
        if (player.RegenMana > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (mp_regen1)
        }
        if (player.RegenStam > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (stam_regen1)
        }
      ]]></onafterwear>
      <onafterremove type="script"><![CDATA[
        obj = this
        player.physical = player.physical-obj.Physical
        player.fire = player.fire-obj.Fire
        player.cold = player.cold-obj.Cold
        player.poison = player.poison-obj.Poison
        player.energy = player.energy-obj.Energy
        player.HitColdArea = player.HitColdArea-obj.HitColdArea
        player.HitDispel = player.HitDispel-obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea-obj.HitFireArea
        player.HitFireball = player.HitFireball-obj.HitFireball
        player.HitHarm = player.HitHarm-obj.HitHarm
        player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
        player.HitLightning = player.HitLightning-obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
        player.AttackChance = player.AttackChance-obj.AttackChance
        player.dex = player.dex-obj.BonusDex
        game.pov.health = game.pov.health-obj.BonusHits
        player.int = player.int-obj.BonusInt
        player.mp = player.mp-obj.BonusMana
        player.stam = player.stam-obj.BonusStam
        player.str = player.str-obj.BonusStr
        player.DefendChance = player.DefendChance-obj.DefendChance
        player.SpellDamage = player.SpellDamage-obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
        player.RegenHits = player.RegenHits-obj.RegenHits
        player.RegenMana = player.RegenMana-obj.RegenMana
        player.RegenStam = player.RegenStam-obj.RegenStam
        player.Pluck = player.Pluck-obj.Luck
        player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
        player.weapon = ""
        resists_table
        if (player.RegenHits < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (hp_regen1)
        }
        if (player.RegenMana < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (mp_regen1)
        }
        if (player.RegenStam < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (stam_regen1)
        }
      ]]></onafterremove>
      <attack type="script"><![CDATA[
        mlist = targets()
        ShowMenu ("Attack what?", mlist, false) {
          mob = (result)
          if (GetInt(mob, "current_hp") > 0) {
            msg (CommandLink("Attack", "Attack"))
          }
          else {
            PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
          }
        }
      ]]></attack>
      <m_props2 type="scriptdictionary" />
    </object>
    <object name="spear1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">7</volume>
      <feature_startscript />
	  <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Wear</value>
        <value>Export</value>
        <value>Delete</value>
        <value>Drop</value>
      </inventoryverbs>
	  <attr name="s_name" type="string"></attr>
      <alias>Spear</alias>
      <listalias>Spear</listalias>
	  <pic type="string"></pic>
      <img>spear_1</img>
	  <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
	  <wtype type="int">6</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">50</AosStrReq>
      <AosMinDam type="int">13</AosMinDam>
      <AosMaxDam type="int">15</AosMaxDam>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <Cold type="int">0</Cold>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Energy type="int">0</Energy>
      <Fire type="int">0</Fire>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <LowerManaCost type="int">0</LowerManaCost>
      <Luck type="int">0</Luck>
      <MageWeapon type="int">0</MageWeapon>
      <NightSight type="int">0</NightSight>
      <Physical type="int">0</Physical>
      <Poison type="int">0</Poison>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellChanneling type="int">0</SpellChanneling>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <AttackChance2 type="string"></AttackChance2>
      <BonusDex2 type="string"></BonusDex2>
      <BonusHits2 type="string"></BonusHits2>
      <BonusInt2 type="string"></BonusInt2>
      <BonusMana2 type="string"></BonusMana2>
      <BonusStam2 type="string"></BonusStam2>
      <BonusStr2 type="string"></BonusStr2>
      <Chaos2 type="string"></Chaos2>
      <Cold2 type="string"></Cold2>
      <DefendChance2 type="string"></DefendChance2>
      <Direct2 type="string"></Direct2>
      <Energy2 type="string"></Energy2>
      <Fire2 type="string"></Fire2>
      <HitColdArea2 type="string"></HitColdArea2>
      <HitDispel2 type="string"></HitDispel2>
      <HitEnergyArea2 type="string"></HitEnergyArea2>
      <HitFireArea2 type="string"></HitFireArea2>
      <HitFireball2 type="string"></HitFireball2>
      <HitHarm2 type="string"></HitHarm2>
      <HitLeechHits2 type="string"></HitLeechHits2>
      <HitLeechMana2 type="string"></HitLeechMana2>
      <HitLeechStam2 type="string"></HitLeechStam2>
      <HitLightning2 type="string"></HitLightning2>
      <HitLowerAttack2 type="string"></HitLowerAttack2>
      <HitLowerDefend2 type="string"></HitLowerDefend2>
      <HitMagicArrow2 type="string"></HitMagicArrow2>
      <HitPhysicalArea2 type="string"></HitPhysicalArea2>
      <LowerManaCost2 type="string"></LowerManaCost2>
      <Luck2 type="string"></Luck2>
      <MageWeapon2 type="string"></MageWeapon2>
      <NightSight2 type="string"></NightSight2>
      <Physical2 type="string"></Physical2>
      <Poison2 type="string"></Poison2>
      <ReflectPhysical2 type="string"></ReflectPhysical2>
      <RegenHits2 type="string"></RegenHits2>
      <RegenMana2 type="string"></RegenMana2>
      <RegenStam2 type="string"></RegenStam2>
      <ResistColdBonus2 type="string"></ResistColdBonus2>
      <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
      <ResistFireBonus2 type="string"></ResistFireBonus2>
      <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
      <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
      <SpellChanneling2 type="string"></SpellChanneling2>
      <SpellDamage2 type="string"></SpellDamage2>
      <WeaponDamage2 type="string"></WeaponDamage2>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <look type="script"><![CDATA[
        obj = this
        if (not Got(obj)) {
          msg ("You see the " + obj.alias + " waiting for you to pick it up.")
        }
        else if (Got(obj)) {
          if (obj.wtype = 1) {
            a = ("Axe")
          }
          else if (obj.wtype = 2) {
            a = ("Knife")
          }
          else if (obj.wtype = 3) {
            a = ("Mace")
          }
          else if (obj.wtype = 4) {
            a = ("Polearm")
          }
          else if (obj.wtype = 5) {
            a = ("Ranged")
          }
          else if (obj.wtype = 6) {
            a = ("Spear")
          }
          else if (obj.wtype = 7) {
            a = ("Fork")
          }
          else if (obj.wtype = 8) {
            a = ("Staff")
          }
          else if (obj.wtype = 9) {
            a = ("Sword")
          }
          else {
            a = ("Unknown")
          }
          if (GetInt(obj, "saveable") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saveable") = 0) {
            if (GetInt(obj, "saved") = 1) {
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
            else if (GetInt(obj, "saved") = 0) {
              set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
              set (obj, "saved", 1)
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
          }
          else {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
      ]]></look>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
      <onafterwear type="script"><![CDATA[
        obj = this
        player.physical = player.physical+obj.Physical
        player.fire = player.fire+obj.Fire
        player.cold = player.cold+obj.Cold
        player.poison = player.poison+obj.Poison
        player.energy = player.energy+obj.Energy
        player.HitColdArea = player.HitColdArea+obj.HitColdArea
        player.HitDispel = player.HitDispel+obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea+obj.HitFireArea
        player.HitFireball = player.HitFireball+obj.HitFireball
        player.HitHarm = player.HitHarm+obj.HitHarm
        player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
        player.HitLightning = player.HitLightning+obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
        player.AttackChance = player.AttackChance+obj.AttackChance
        player.dex = player.dex+obj.BonusDex
        game.pov.health = game.pov.health+obj.BonusHits
        player.int = player.int+obj.BonusInt
        player.mp = player.mp+obj.BonusMana
        player.stam = player.stam+obj.BonusStam
        player.str = player.str+obj.BonusStr
        player.DefendChance = player.DefendChance+obj.DefendChance
        player.SpellDamage = player.SpellDamage+obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
        player.RegenHits = player.RegenHits+obj.RegenHits
        player.RegenMana = player.RegenMana+obj.RegenMana
        player.RegenStam = player.RegenStam+obj.RegenStam
        player.Pluck = player.Pluck+obj.Luck
        player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
        player.weapon = obj.alias
        resists_table
        if (player.RegenHits > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (hp_regen1)
        }
        if (player.RegenMana > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (mp_regen1)
        }
        if (player.RegenStam > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (stam_regen1)
        }
      ]]></onafterwear>
      <onafterremove type="script"><![CDATA[
        obj = this
        player.physical = player.physical-obj.Physical
        player.fire = player.fire-obj.Fire
        player.cold = player.cold-obj.Cold
        player.poison = player.poison-obj.Poison
        player.energy = player.energy-obj.Energy
        player.HitColdArea = player.HitColdArea-obj.HitColdArea
        player.HitDispel = player.HitDispel-obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea-obj.HitFireArea
        player.HitFireball = player.HitFireball-obj.HitFireball
        player.HitHarm = player.HitHarm-obj.HitHarm
        player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
        player.HitLightning = player.HitLightning-obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
        player.AttackChance = player.AttackChance-obj.AttackChance
        player.dex = player.dex-obj.BonusDex
        game.pov.health = game.pov.health-obj.BonusHits
        player.int = player.int-obj.BonusInt
        player.mp = player.mp-obj.BonusMana
        player.stam = player.stam-obj.BonusStam
        player.str = player.str-obj.BonusStr
        player.DefendChance = player.DefendChance-obj.DefendChance
        player.SpellDamage = player.SpellDamage-obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
        player.RegenHits = player.RegenHits-obj.RegenHits
        player.RegenMana = player.RegenMana-obj.RegenMana
        player.RegenStam = player.RegenStam-obj.RegenStam
        player.Pluck = player.Pluck-obj.Luck
        player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
        player.weapon = ""
        resists_table
        if (player.RegenHits < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (hp_regen1)
        }
        if (player.RegenMana < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (mp_regen1)
        }
        if (player.RegenStam < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (stam_regen1)
        }
      ]]></onafterremove>
      <attack type="script"><![CDATA[
        mlist = targets()
        ShowMenu ("Attack what?", mlist, false) {
          mob = (result)
          if (GetInt(mob, "current_hp") > 0) {
            msg (CommandLink("Attack", "Attack"))
          }
          else {
            PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
          }
        }
      ]]></attack>
      <m_props2 type="scriptdictionary" />
    </object>
    <object name="warfork1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">9</volume>
      <feature_startscript />
	  <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Wear</value>
        <value>Export</value>
        <value>Delete</value>
        <value>Drop</value>
      </inventoryverbs>
	  <attr name="s_name" type="string"></attr>
	  <alias>War Fork</alias>
      <listalias>War Fork</listalias>
      <pic type="string"></pic>
      <img>warfork_1</img>
	  <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
	  <wtype type="int">7</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">45</AosStrReq>
      <AosMinDam type="int">12</AosMinDam>
      <AosMaxDam type="int">13</AosMaxDam>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <Cold type="int">0</Cold>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Energy type="int">0</Energy>
      <Fire type="int">0</Fire>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <LowerManaCost type="int">0</LowerManaCost>
      <Luck type="int">0</Luck>
      <MageWeapon type="int">0</MageWeapon>
      <NightSight type="int">0</NightSight>
      <Physical type="int">0</Physical>
      <Poison type="int">0</Poison>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellChanneling type="int">0</SpellChanneling>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <AttackChance2 type="string"></AttackChance2>
      <BonusDex2 type="string"></BonusDex2>
      <BonusHits2 type="string"></BonusHits2>
      <BonusInt2 type="string"></BonusInt2>
      <BonusMana2 type="string"></BonusMana2>
      <BonusStam2 type="string"></BonusStam2>
      <BonusStr2 type="string"></BonusStr2>
      <Chaos2 type="string"></Chaos2>
      <Cold2 type="string"></Cold2>
      <DefendChance2 type="string"></DefendChance2>
      <Direct2 type="string"></Direct2>
      <Energy2 type="string"></Energy2>
      <Fire2 type="string"></Fire2>
      <HitColdArea2 type="string"></HitColdArea2>
      <HitDispel2 type="string"></HitDispel2>
      <HitEnergyArea2 type="string"></HitEnergyArea2>
      <HitFireArea2 type="string"></HitFireArea2>
      <HitFireball2 type="string"></HitFireball2>
      <HitHarm2 type="string"></HitHarm2>
      <HitLeechHits2 type="string"></HitLeechHits2>
      <HitLeechMana2 type="string"></HitLeechMana2>
      <HitLeechStam2 type="string"></HitLeechStam2>
      <HitLightning2 type="string"></HitLightning2>
      <HitLowerAttack2 type="string"></HitLowerAttack2>
      <HitLowerDefend2 type="string"></HitLowerDefend2>
      <HitMagicArrow2 type="string"></HitMagicArrow2>
      <HitPhysicalArea2 type="string"></HitPhysicalArea2>
      <LowerManaCost2 type="string"></LowerManaCost2>
      <Luck2 type="string"></Luck2>
      <MageWeapon2 type="string"></MageWeapon2>
      <NightSight2 type="string"></NightSight2>
      <Physical2 type="string"></Physical2>
      <Poison2 type="string"></Poison2>
      <ReflectPhysical2 type="string"></ReflectPhysical2>
      <RegenHits2 type="string"></RegenHits2>
      <RegenMana2 type="string"></RegenMana2>
      <RegenStam2 type="string"></RegenStam2>
      <ResistColdBonus2 type="string"></ResistColdBonus2>
      <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
      <ResistFireBonus2 type="string"></ResistFireBonus2>
      <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
      <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
      <SpellChanneling2 type="string"></SpellChanneling2>
      <SpellDamage2 type="string"></SpellDamage2>
      <WeaponDamage2 type="string"></WeaponDamage2>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <look type="script"><![CDATA[
        obj = this
        if (not Got(obj)) {
          msg ("You see the " + obj.alias + " waiting for you to pick it up.")
        }
        else if (Got(obj)) {
          if (obj.wtype = 1) {
            a = ("Axe")
          }
          else if (obj.wtype = 2) {
            a = ("Knife")
          }
          else if (obj.wtype = 3) {
            a = ("Mace")
          }
          else if (obj.wtype = 4) {
            a = ("Polearm")
          }
          else if (obj.wtype = 5) {
            a = ("Ranged")
          }
          else if (obj.wtype = 6) {
            a = ("Spear")
          }
          else if (obj.wtype = 7) {
            a = ("Fork")
          }
          else if (obj.wtype = 8) {
            a = ("Staff")
          }
          else if (obj.wtype = 9) {
            a = ("Sword")
          }
          else {
            a = ("Unknown")
          }
          if (GetInt(obj, "saveable") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saveable") = 0) {
            if (GetInt(obj, "saved") = 1) {
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
            else if (GetInt(obj, "saved") = 0) {
              set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
              set (obj, "saved", 1)
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
          }
          else {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
      ]]></look>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
      <onafterwear type="script"><![CDATA[
        obj = this
        player.physical = player.physical+obj.Physical
        player.fire = player.fire+obj.Fire
        player.cold = player.cold+obj.Cold
        player.poison = player.poison+obj.Poison
        player.energy = player.energy+obj.Energy
        player.HitColdArea = player.HitColdArea+obj.HitColdArea
        player.HitDispel = player.HitDispel+obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea+obj.HitFireArea
        player.HitFireball = player.HitFireball+obj.HitFireball
        player.HitHarm = player.HitHarm+obj.HitHarm
        player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
        player.HitLightning = player.HitLightning+obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
        player.AttackChance = player.AttackChance+obj.AttackChance
        player.dex = player.dex+obj.BonusDex
        game.pov.health = game.pov.health+obj.BonusHits
        player.int = player.int+obj.BonusInt
        player.mp = player.mp+obj.BonusMana
        player.stam = player.stam+obj.BonusStam
        player.str = player.str+obj.BonusStr
        player.DefendChance = player.DefendChance+obj.DefendChance
        player.SpellDamage = player.SpellDamage+obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
        player.RegenHits = player.RegenHits+obj.RegenHits
        player.RegenMana = player.RegenMana+obj.RegenMana
        player.RegenStam = player.RegenStam+obj.RegenStam
        player.Pluck = player.Pluck+obj.Luck
        player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
        player.weapon = obj.alias
        resists_table
        if (player.RegenHits > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (hp_regen1)
        }
        if (player.RegenMana > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (mp_regen1)
        }
        if (player.RegenStam > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (stam_regen1)
        }
      ]]></onafterwear>
      <onafterremove type="script"><![CDATA[
        obj = this
        player.physical = player.physical-obj.Physical
        player.fire = player.fire-obj.Fire
        player.cold = player.cold-obj.Cold
        player.poison = player.poison-obj.Poison
        player.energy = player.energy-obj.Energy
        player.HitColdArea = player.HitColdArea-obj.HitColdArea
        player.HitDispel = player.HitDispel-obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea-obj.HitFireArea
        player.HitFireball = player.HitFireball-obj.HitFireball
        player.HitHarm = player.HitHarm-obj.HitHarm
        player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
        player.HitLightning = player.HitLightning-obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
        player.AttackChance = player.AttackChance-obj.AttackChance
        player.dex = player.dex-obj.BonusDex
        game.pov.health = game.pov.health-obj.BonusHits
        player.int = player.int-obj.BonusInt
        player.mp = player.mp-obj.BonusMana
        player.stam = player.stam-obj.BonusStam
        player.str = player.str-obj.BonusStr
        player.DefendChance = player.DefendChance-obj.DefendChance
        player.SpellDamage = player.SpellDamage-obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
        player.RegenHits = player.RegenHits-obj.RegenHits
        player.RegenMana = player.RegenMana-obj.RegenMana
        player.RegenStam = player.RegenStam-obj.RegenStam
        player.Pluck = player.Pluck-obj.Luck
        player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
        player.weapon = ""
        resists_table
        if (player.RegenHits < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (hp_regen1)
        }
        if (player.RegenMana < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (mp_regen1)
        }
        if (player.RegenStam < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (stam_regen1)
        }
      ]]></onafterremove>
      <attack type="script"><![CDATA[
        mlist = targets()
        ShowMenu ("Attack what?", mlist, false) {
          mob = (result)
          if (GetInt(mob, "current_hp") > 0) {
            msg (CommandLink("Attack", "Attack"))
          }
          else {
            PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
          }
        }
      ]]></attack>
      <m_props2 type="scriptdictionary" />
    </object>
    <object name="qstaff1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">4</volume>
      <feature_startscript />
	  <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Wear</value>
        <value>Export</value>
        <value>Delete</value>
        <value>Drop</value>
      </inventoryverbs>
	  <attr name="s_name" type="string"></attr>
	  <alias>Quarter Staff</alias>
      <listalias>Quarter Staff</listalias>
      <pic type="string"></pic>
      <img>qstaff_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
	  <attr name="f_type"><![CDATA[.png'>]]></attr>
	  <wtype type="int">8</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">30</AosStrReq>
      <AosMinDam type="int">11</AosMinDam>
      <AosMaxDam type="int">14</AosMaxDam>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <Cold type="int">0</Cold>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Energy type="int">0</Energy>
      <Fire type="int">0</Fire>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <LowerManaCost type="int">0</LowerManaCost>
      <Luck type="int">0</Luck>
      <MageWeapon type="int">0</MageWeapon>
      <NightSight type="int">0</NightSight>
      <Physical type="int">0</Physical>
      <Poison type="int">0</Poison>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellChanneling type="int">0</SpellChanneling>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <AttackChance2 type="string"></AttackChance2>
      <BonusDex2 type="string"></BonusDex2>
      <BonusHits2 type="string"></BonusHits2>
      <BonusInt2 type="string"></BonusInt2>
      <BonusMana2 type="string"></BonusMana2>
      <BonusStam2 type="string"></BonusStam2>
      <BonusStr2 type="string"></BonusStr2>
      <Chaos2 type="string"></Chaos2>
      <Cold2 type="string"></Cold2>
      <DefendChance2 type="string"></DefendChance2>
      <Direct2 type="string"></Direct2>
      <Energy2 type="string"></Energy2>
      <Fire2 type="string"></Fire2>
      <HitColdArea2 type="string"></HitColdArea2>
      <HitDispel2 type="string"></HitDispel2>
      <HitEnergyArea2 type="string"></HitEnergyArea2>
      <HitFireArea2 type="string"></HitFireArea2>
      <HitFireball2 type="string"></HitFireball2>
      <HitHarm2 type="string"></HitHarm2>
      <HitLeechHits2 type="string"></HitLeechHits2>
      <HitLeechMana2 type="string"></HitLeechMana2>
      <HitLeechStam2 type="string"></HitLeechStam2>
      <HitLightning2 type="string"></HitLightning2>
      <HitLowerAttack2 type="string"></HitLowerAttack2>
      <HitLowerDefend2 type="string"></HitLowerDefend2>
      <HitMagicArrow2 type="string"></HitMagicArrow2>
      <HitPhysicalArea2 type="string"></HitPhysicalArea2>
      <LowerManaCost2 type="string"></LowerManaCost2>
      <Luck2 type="string"></Luck2>
      <MageWeapon2 type="string"></MageWeapon2>
      <NightSight2 type="string"></NightSight2>
      <Physical2 type="string"></Physical2>
      <Poison2 type="string"></Poison2>
      <ReflectPhysical2 type="string"></ReflectPhysical2>
      <RegenHits2 type="string"></RegenHits2>
      <RegenMana2 type="string"></RegenMana2>
      <RegenStam2 type="string"></RegenStam2>
      <ResistColdBonus2 type="string"></ResistColdBonus2>
      <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
      <ResistFireBonus2 type="string"></ResistFireBonus2>
      <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
      <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
      <SpellChanneling2 type="string"></SpellChanneling2>
      <SpellDamage2 type="string"></SpellDamage2>
      <WeaponDamage2 type="string"></WeaponDamage2>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <look type="script"><![CDATA[
        obj = this
        if (not Got(obj)) {
          msg ("You see the " + obj.alias + " waiting for you to pick it up.")
        }
        else if (Got(obj)) {
          if (obj.wtype = 1) {
            a = ("Axe")
          }
          else if (obj.wtype = 2) {
            a = ("Knife")
          }
          else if (obj.wtype = 3) {
            a = ("Mace")
          }
          else if (obj.wtype = 4) {
            a = ("Polearm")
          }
          else if (obj.wtype = 5) {
            a = ("Ranged")
          }
          else if (obj.wtype = 6) {
            a = ("Spear")
          }
          else if (obj.wtype = 7) {
            a = ("Fork")
          }
          else if (obj.wtype = 8) {
            a = ("Staff")
          }
          else if (obj.wtype = 9) {
            a = ("Sword")
          }
          else {
            a = ("Unknown")
          }
          if (GetInt(obj, "saveable") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saveable") = 0) {
            if (GetInt(obj, "saved") = 1) {
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
            else if (GetInt(obj, "saved") = 0) {
              set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
              set (obj, "saved", 1)
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
          }
          else {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
      ]]></look>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
      <onafterwear type="script"><![CDATA[
        obj = this
        player.physical = player.physical+obj.Physical
        player.fire = player.fire+obj.Fire
        player.cold = player.cold+obj.Cold
        player.poison = player.poison+obj.Poison
        player.energy = player.energy+obj.Energy
        player.HitColdArea = player.HitColdArea+obj.HitColdArea
        player.HitDispel = player.HitDispel+obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea+obj.HitFireArea
        player.HitFireball = player.HitFireball+obj.HitFireball
        player.HitHarm = player.HitHarm+obj.HitHarm
        player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
        player.HitLightning = player.HitLightning+obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
        player.AttackChance = player.AttackChance+obj.AttackChance
        player.dex = player.dex+obj.BonusDex
        game.pov.health = game.pov.health+obj.BonusHits
        player.int = player.int+obj.BonusInt
        player.mp = player.mp+obj.BonusMana
        player.stam = player.stam+obj.BonusStam
        player.str = player.str+obj.BonusStr
        player.DefendChance = player.DefendChance+obj.DefendChance
        player.SpellDamage = player.SpellDamage+obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
        player.RegenHits = player.RegenHits+obj.RegenHits
        player.RegenMana = player.RegenMana+obj.RegenMana
        player.RegenStam = player.RegenStam+obj.RegenStam
        player.Pluck = player.Pluck+obj.Luck
        player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
        player.weapon = obj.alias
        resists_table
        if (player.RegenHits > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (hp_regen1)
        }
        if (player.RegenMana > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (mp_regen1)
        }
        if (player.RegenStam > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (stam_regen1)
        }
      ]]></onafterwear>
      <onafterremove type="script"><![CDATA[
        obj = this
        player.physical = player.physical-obj.Physical
        player.fire = player.fire-obj.Fire
        player.cold = player.cold-obj.Cold
        player.poison = player.poison-obj.Poison
        player.energy = player.energy-obj.Energy
        player.HitColdArea = player.HitColdArea-obj.HitColdArea
        player.HitDispel = player.HitDispel-obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea-obj.HitFireArea
        player.HitFireball = player.HitFireball-obj.HitFireball
        player.HitHarm = player.HitHarm-obj.HitHarm
        player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
        player.HitLightning = player.HitLightning-obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
        player.AttackChance = player.AttackChance-obj.AttackChance
        player.dex = player.dex-obj.BonusDex
        game.pov.health = game.pov.health-obj.BonusHits
        player.int = player.int-obj.BonusInt
        player.mp = player.mp-obj.BonusMana
        player.stam = player.stam-obj.BonusStam
        player.str = player.str-obj.BonusStr
        player.DefendChance = player.DefendChance-obj.DefendChance
        player.SpellDamage = player.SpellDamage-obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
        player.RegenHits = player.RegenHits-obj.RegenHits
        player.RegenMana = player.RegenMana-obj.RegenMana
        player.RegenStam = player.RegenStam-obj.RegenStam
        player.Pluck = player.Pluck-obj.Luck
        player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
        player.weapon = ""
        resists_table
        if (player.RegenHits < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (hp_regen1)
        }
        if (player.RegenMana < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (mp_regen1)
        }
        if (player.RegenStam < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (stam_regen1)
        }
      ]]></onafterremove>
      <attack type="script"><![CDATA[
        mlist = targets()
        ShowMenu ("Attack what?", mlist, false) {
          mob = (result)
          if (GetInt(mob, "current_hp") > 0) {
            msg (CommandLink("Attack", "Attack"))
          }
          else {
            PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
          }
        }
      ]]></attack>
      <m_props2 type="scriptdictionary" />
    </object>
    <object name="longsword1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">7</volume>
      <feature_startscript />
	  <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Wear</value>
        <value>Export</value>
        <value>Delete</value>
        <value>Drop</value>
      </inventoryverbs>
	  <attr name="s_name" type="string"></attr>
	  <alias>Longsword</alias>
      <listalias>Longsword</listalias>
      <pic type="string"></pic>
      <img>longsword_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
	  <wtype type="int">9</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">35</AosStrReq>
      <AosMinDam type="int">15</AosMinDam>
      <AosMaxDam type="int">16</AosMaxDam>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <Cold type="int">0</Cold>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Energy type="int">0</Energy>
      <Fire type="int">0</Fire>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <LowerManaCost type="int">0</LowerManaCost>
      <Luck type="int">0</Luck>
      <MageWeapon type="int">0</MageWeapon>
      <NightSight type="int">0</NightSight>
      <Physical type="int">0</Physical>
      <Poison type="int">0</Poison>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellChanneling type="int">0</SpellChanneling>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <AttackChance2 type="string"></AttackChance2>
      <BonusDex2 type="string"></BonusDex2>
      <BonusHits2 type="string"></BonusHits2>
      <BonusInt2 type="string"></BonusInt2>
      <BonusMana2 type="string"></BonusMana2>
      <BonusStam2 type="string"></BonusStam2>
      <BonusStr2 type="string"></BonusStr2>
      <Chaos2 type="string"></Chaos2>
      <Cold2 type="string"></Cold2>
      <DefendChance2 type="string"></DefendChance2>
      <Direct2 type="string"></Direct2>
      <Energy2 type="string"></Energy2>
      <Fire2 type="string"></Fire2>
      <HitColdArea2 type="string"></HitColdArea2>
      <HitDispel2 type="string"></HitDispel2>
      <HitEnergyArea2 type="string"></HitEnergyArea2>
      <HitFireArea2 type="string"></HitFireArea2>
      <HitFireball2 type="string"></HitFireball2>
      <HitHarm2 type="string"></HitHarm2>
      <HitLeechHits2 type="string"></HitLeechHits2>
      <HitLeechMana2 type="string"></HitLeechMana2>
      <HitLeechStam2 type="string"></HitLeechStam2>
      <HitLightning2 type="string"></HitLightning2>
      <HitLowerAttack2 type="string"></HitLowerAttack2>
      <HitLowerDefend2 type="string"></HitLowerDefend2>
      <HitMagicArrow2 type="string"></HitMagicArrow2>
      <HitPhysicalArea2 type="string"></HitPhysicalArea2>
      <LowerManaCost2 type="string"></LowerManaCost2>
      <Luck2 type="string"></Luck2>
      <MageWeapon2 type="string"></MageWeapon2>
      <NightSight2 type="string"></NightSight2>
      <Physical2 type="string"></Physical2>
      <Poison2 type="string"></Poison2>
      <ReflectPhysical2 type="string"></ReflectPhysical2>
      <RegenHits2 type="string"></RegenHits2>
      <RegenMana2 type="string"></RegenMana2>
      <RegenStam2 type="string"></RegenStam2>
      <ResistColdBonus2 type="string"></ResistColdBonus2>
      <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
      <ResistFireBonus2 type="string"></ResistFireBonus2>
      <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
      <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
      <SpellChanneling2 type="string"></SpellChanneling2>
      <SpellDamage2 type="string"></SpellDamage2>
      <WeaponDamage2 type="string"></WeaponDamage2>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grasp the hilt tightly.</wearmsg>
      <removemsg>You sheath the sword.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <look type="script"><![CDATA[
        obj = this
        if (not Got(obj)) {
          msg ("You see the " + obj.alias + " waiting for you to pick it up.")
        }
        else if (Got(obj)) {
          if (obj.wtype = 1) {
            a = ("Axe")
          }
          else if (obj.wtype = 2) {
            a = ("Knife")
          }
          else if (obj.wtype = 3) {
            a = ("Mace")
          }
          else if (obj.wtype = 4) {
            a = ("Polearm")
          }
          else if (obj.wtype = 5) {
            a = ("Ranged")
          }
          else if (obj.wtype = 6) {
            a = ("Spear")
          }
          else if (obj.wtype = 7) {
            a = ("Fork")
          }
          else if (obj.wtype = 8) {
            a = ("Staff")
          }
          else if (obj.wtype = 9) {
            a = ("Sword")
          }
          else {
            a = ("Unknown")
          }
          if (GetInt(obj, "saveable") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saveable") = 0) {
            if (GetInt(obj, "saved") = 1) {
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
            else if (GetInt(obj, "saved") = 0) {
              set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
              set (obj, "saved", 1)
              PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
            }
          }
          else {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
      ]]></look>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
      <onafterwear type="script"><![CDATA[
        obj = this
        player.physical = player.physical+obj.Physical
        player.fire = player.fire+obj.Fire
        player.cold = player.cold+obj.Cold
        player.poison = player.poison+obj.Poison
        player.energy = player.energy+obj.Energy
        player.HitColdArea = player.HitColdArea+obj.HitColdArea
        player.HitDispel = player.HitDispel+obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea+obj.HitFireArea
        player.HitFireball = player.HitFireball+obj.HitFireball
        player.HitHarm = player.HitHarm+obj.HitHarm
        player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
        player.HitLightning = player.HitLightning+obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
        player.AttackChance = player.AttackChance+obj.AttackChance
        player.dex = player.dex+obj.BonusDex
        game.pov.health = game.pov.health+obj.BonusHits
        player.int = player.int+obj.BonusInt
        player.mp = player.mp+obj.BonusMana
        player.stam = player.stam+obj.BonusStam
        player.str = player.str+obj.BonusStr
        player.DefendChance = player.DefendChance+obj.DefendChance
        player.SpellDamage = player.SpellDamage+obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
        player.RegenHits = player.RegenHits+obj.RegenHits
        player.RegenMana = player.RegenMana+obj.RegenMana
        player.RegenStam = player.RegenStam+obj.RegenStam
        player.Pluck = player.Pluck+obj.Luck
        player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
        player.weapon = obj.alias
        resists_table
        if (player.RegenHits > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (hp_regen1)
        }
        if (player.RegenMana > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (mp_regen1)
        }
        if (player.RegenStam > 0) {
		  DisableTimer (stat_regen1)
          EnableTimer (stam_regen1)
        }
      ]]></onafterwear>
      <onafterremove type="script"><![CDATA[
        obj = this
        player.physical = player.physical-obj.Physical
        player.fire = player.fire-obj.Fire
        player.cold = player.cold-obj.Cold
        player.poison = player.poison-obj.Poison
        player.energy = player.energy-obj.Energy
        player.HitColdArea = player.HitColdArea-obj.HitColdArea
        player.HitDispel = player.HitDispel-obj.HitDispel
        player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
        player.HitFireArea = player.HitFireArea-obj.HitFireArea
        player.HitFireball = player.HitFireball-obj.HitFireball
        player.HitHarm = player.HitHarm-obj.HitHarm
        player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
        player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
        player.HitLightning = player.HitLightning-obj.HitLightning
        player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
        player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
        player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
        player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
        player.AttackChance = player.AttackChance-obj.AttackChance
        player.dex = player.dex-obj.BonusDex
        game.pov.health = game.pov.health-obj.BonusHits
        player.int = player.int-obj.BonusInt
        player.mp = player.mp-obj.BonusMana
        player.stam = player.stam-obj.BonusStam
        player.str = player.str-obj.BonusStr
        player.DefendChance = player.DefendChance-obj.DefendChance
        player.SpellDamage = player.SpellDamage-obj.SpellDamage
        player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
        player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
        player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
        player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
        player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
        player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
        player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
        player.RegenHits = player.RegenHits-obj.RegenHits
        player.RegenMana = player.RegenMana-obj.RegenMana
        player.RegenStam = player.RegenStam-obj.RegenStam
        player.Pluck = player.Pluck-obj.Luck
        player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
        player.weapon = ""
        resists_table
        if (player.RegenHits < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (hp_regen1)
        }
        if (player.RegenMana < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (mp_regen1)
        }
        if (player.RegenStam < 1) {
		  EnableTimer (stat_regen1)
          DisableTimer (stam_regen1)
        }
      ]]></onafterremove>
      <attack type="script"><![CDATA[
        mlist = targets()
        ShowMenu ("Attack what?", mlist, false) {
          mob = (result)
          if (GetInt(mob, "current_hp") > 0) {
            msg (CommandLink("Attack", "Attack"))
          }
          else {
            PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
          }
        }
      ]]></attack>
      <m_props2 type="scriptdictionary" />
    </object>
    <object name="mag_props">
      <inherit name="editor_object" />
      <alphabetdict type="stringdictionary">
        <item>
          <key>AttackChance</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>BonusDex</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>BonusHits</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>BonusInt</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>BonusMana</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>BonusStam</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>BonusStr</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>Chaos</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>Cold</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>DefendChance</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>Direct</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>Energy</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>Fire</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>LowerManaCost</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>Luck</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>Physical</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>Poison</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>ReflectPhysical</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>RegenHits</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>RegenMana</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>RegenStam</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>ResistColdBonus</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>ResistEnergyBonus</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>ResistFireBonus</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>ResistPhysicalBonus</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>ResistPoisonBonus</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>SpellDamage</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>WeaponDamage</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitColdArea</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitDispel</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitEnergyArea</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitFireArea</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitFireball</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitHarm</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitLeechHits</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitLeechMana</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitLeechStam</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitLightning</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitLowerAttack</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitLowerDefend</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitMagicArrow</key>
          <value type="string">1</value>
        </item>
        <item>
          <key>HitPhysicalArea</key>
          <value type="string">1</value>
        </item>
      </alphabetdict>
    </object>
    <object name="alphabetdict">
      <inherit name="editor_object" />
      <alphabetdict type="stringdictionary">
        <item>
          <key>AttackChance</key>
          <value type="string">Attack Chance</value>
        </item>
        <item>
          <key>BonusDex</key>
          <value type="string">Bonus Dexterity</value>
        </item>
        <item>
          <key>BonusHits</key>
          <value type="string">Bonus Hit Points</value>
        </item>
        <item>
          <key>BonusInt</key>
          <value type="string">Bonus Intelligence</value>
        </item>
        <item>
          <key>BonusMana</key>
          <value type="string">Bonus Mana</value>
        </item>
        <item>
          <key>BonusStam</key>
          <value type="string">Bonus Stamina</value>
        </item>
        <item>
          <key>BonusStr</key>
          <value type="string">Bonus Strength</value>
        </item>
        <item>
          <key>Chaos</key>
          <value type="string">Chaos</value>
        </item>
        <item>
          <key>Cold</key>
          <value type="string">Cold</value>
        </item>
        <item>
          <key>DefendChance</key>
          <value type="string">Defense Chance</value>
        </item>
        <item>
          <key>Direct</key>
          <value type="string">Direct</value>
        </item>
        <item>
          <key>Energy</key>
          <value type="string">Energy</value>
        </item>
        <item>
          <key>Fire</key>
          <value type="string">Fire</value>
        </item>
        <item>
          <key>LowerManaCost</key>
          <value type="string">Lower Mana Cost</value>
        </item>
        <item>
          <key>Luck</key>
          <value type="string">Luck</value>
        </item>
        <item>
          <key>Physical</key>
          <value type="string">Physical</value>
        </item>
        <item>
          <key>Poison</key>
          <value type="string">Poison</value>
        </item>
        <item>
          <key>ReflectPhysical</key>
          <value type="string">Reflect Physical</value>
        </item>
        <item>
          <key>RegenHits</key>
          <value type="string">Hit Point Regeneration</value>
        </item>
        <item>
          <key>RegenMana</key>
          <value type="string">Mana Regeneration</value>
        </item>
        <item>
          <key>RegenStam</key>
          <value type="string">Stamina Regeneration</value>
        </item>
        <item>
          <key>ResistColdBonus</key>
          <value type="string">Cold Resistance</value>
        </item>
        <item>
          <key>ResistEnergyBonus</key>
          <value type="string">Energy Resistance</value>
        </item>
        <item>
          <key>ResistFireBonus</key>
          <value type="string">Fire Resistance</value>
        </item>
        <item>
          <key>ResistPhysicalBonus</key>
          <value type="string">Physical Resistance</value>
        </item>
        <item>
          <key>ResistPoisonBonus</key>
          <value type="string">Poison Resistance</value>
        </item>
        <item>
          <key>SpellDamage</key>
          <value type="string">Spell Damage</value>
        </item>
        <item>
          <key>WeaponDamage</key>
          <value type="string">Weapon Damage</value>
        </item>
        <item>
          <key>HitColdArea</key>
          <value type="string">Hit Cold Area</value>
        </item>
        <item>
          <key>HitDispel</key>
          <value type="string">Hit Dispel</value>
        </item>
        <item>
          <key>HitEnergyArea</key>
          <value type="string">Hit Energy Area</value>
        </item>
        <item>
          <key>HitFireArea</key>
          <value type="string">Hit Fire Area</value>
        </item>
        <item>
          <key>HitFireball</key>
          <value type="string">Hit Fireball</value>
        </item>
        <item>
          <key>HitHarm</key>
          <value type="string">Hit Harm</value>
        </item>
        <item>
          <key>HitLeechHits</key>
          <value type="string">Leech Hit Points</value>
        </item>
        <item>
          <key>HitLeechMana</key>
          <value type="string">Leech Mana</value>
        </item>
        <item>
          <key>HitLeechStam</key>
          <value type="string">Leech Stamina</value>
        </item>
        <item>
          <key>HitLightning</key>
          <value type="string">Hit Lightning</value>
        </item>
        <item>
          <key>HitLowerAttack</key>
          <value type="string">Hit Lower Attack</value>
        </item>
        <item>
          <key>HitLowerDefend</key>
          <value type="string">Hit Lower Defense</value>
        </item>
        <item>
          <key>HitMagicArrow</key>
          <value type="string">Hit Magic Arrow</value>
        </item>
        <item>
          <key>HitPhysicalArea</key>
          <value type="string">Hit Physical Area</value>
        </item>
      </alphabetdict>
    </object>
  </object>
  <type name="defaultobject">
    <visible />
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Take</value>
    </displayverbs>
    <inventoryverbs type="stringlist">
      <value>Look at</value>
      <value>Use</value>
      <value>Drop</value>
    </inventoryverbs>
    <take type="boolean">false</take>
    <use type="boolean">false</use>
    <givesingle type="boolean">false</givesingle>
    <drop />
    <gender>it</gender>
    <article>it</article>
    <possessive>its</possessive>
    <isopen type="boolean">false</isopen>
    <open type="boolean">false</open>
    <close type="boolean">false</close>
    <container type="boolean">false</container>
    <descprefix>You are in</descprefix>
    <objectslistprefix>You can see</objectslistprefix>
    <exitslistprefix>You can go</exitslistprefix>
    <contentsprefix>containing</contentsprefix>
    <description type="string"></description>
    <attr name="implementation_notes" type="string"></attr>
    <scenery type="boolean">false</scenery>
    <hidechildren type="boolean">false</hidechildren>
    <listchildren type="boolean">false</listchildren>
    <usedefaultprefix />
    <volume type="int">0</volume>
    <price type="int">0</price>
    <dark type="boolean">false</dark>
    <lightstrength type="string"></lightstrength>
    <darklevel type="boolean">false</darklevel>
    <attr name="grid_width" type="int">1</attr>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_fill">White</attr>
    <attr name="grid_border">Black</attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <attr name="grid_bordersides" type="int">15</attr>
    <attr name="grid_render" type="boolean">false</attr>
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_label_colour">Black</attr>
    <grid_parent_offset_auto />
    <attr name="grid_parent_offset_x" type="int">0</attr>
    <attr name="grid_parent_offset_y" type="int">0</attr>
    <attr name="pov_alias">me</attr>
    <pov_alt type="stringlist">
      <value>me</value>
      <value>myself</value>
      <value>self</value>
    </pov_alt>
    <attr name="pov_look">Looking good.</attr>
    <attr name="pov_gender">you</attr>
    <attr name="pov_article">yourself</attr>
    <attr name="pov_possessive">your</attr>
    <attr name="feature_usegive" type="boolean">false</attr>
    <attr name="feature_container" type="boolean">false</attr>
    <attr name="feature_switchable" type="boolean">false</attr>
    <attr name="feature_edible" type="boolean">false</attr>
    <attr name="feature_player" type="boolean">false</attr>
    <attr name="feature_lightdark" type="boolean">false</attr>
    <visited type="boolean">false</visited>
    <hasbeenmoved type="boolean">false</hasbeenmoved>
    <changedparent type="script">
      if (game.pov = this) {
        if (IsDefined("oldvalue")) {
          OnEnterRoom (oldvalue)
        }
        else {
          OnEnterRoom (null)
        }
        if (game.gridmap) {
          MergePOVCoordinates
        }
      }
      this.hasbeenmoved = true
    </changedparent>
    <changedisopen type="script">
      if (this.isopen and HasScript(this, "onopen")) {
        do (this, "onopen")
      }
      if (not this.isopen and HasScript(this, "onclose")) {
        do (this, "onclose")
      }
    </changedisopen>
    <changedlocked type="script">
      if (this.locked and HasScript(this, "onlock")) {
        do (this, "onlock")
      }
      if (not this.locked and HasScript(this, "onunlock")) {
        do (this, "onunlock")
      }
    </changedlocked>
    <changedswitchedon type="script">
      if (this.switchedon and HasScript(this, "onswitchon")) {
        do (this, "onswitchon")
      }
      if (not this.switchedon and HasScript(this, "onswitchoff")) {
        do (this, "onswitchoff")
      }
    </changedswitchedon>
  </type>
  <type name="defaultweapon">
    <visible />
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Take</value>
    </displayverbs>
    <inventoryverbs type="stringlist">
      <value>Look at</value>
      <value>Use</value>
      <value>Drop</value>
      <value>Export</value>
    </inventoryverbs>
    <take type="boolean">false</take>
    <use type="boolean">false</use>
    <givesingle type="boolean">false</givesingle>
    <drop />
    <gender>it</gender>
    <article>it</article>
    <possessive>its</possessive>
    <isopen type="boolean">false</isopen>
    <open type="boolean">false</open>
    <close type="boolean">false</close>
    <container type="boolean">false</container>
    <descprefix>You are in</descprefix>
    <objectslistprefix>You can see</objectslistprefix>
    <exitslistprefix>You can go</exitslistprefix>
    <contentsprefix>containing</contentsprefix>
    <description type="string"></description>
    <attr name="implementation_notes" type="string"></attr>
    <scenery type="boolean">false</scenery>
    <hidechildren type="boolean">false</hidechildren>
    <listchildren type="boolean">false</listchildren>
    <usedefaultprefix />
    <volume type="int">0</volume>
    <price type="int">0</price>
    <dark type="boolean">false</dark>
    <lightstrength type="string"></lightstrength>
    <darklevel type="boolean">false</darklevel>
    <attr name="grid_width" type="int">1</attr>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_fill">White</attr>
    <attr name="grid_border">Black</attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <attr name="grid_bordersides" type="int">15</attr>
    <attr name="grid_render" type="boolean">false</attr>
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_label_colour">Black</attr>
    <grid_parent_offset_auto />
    <attr name="grid_parent_offset_x" type="int">0</attr>
    <attr name="grid_parent_offset_y" type="int">0</attr>
    <attr name="pov_alias">me</attr>
    <pov_alt type="stringlist">
      <value>me</value>
      <value>myself</value>
      <value>self</value>
    </pov_alt>
    <attr name="pov_look">Looking good.</attr>
    <attr name="pov_gender">you</attr>
    <attr name="pov_article">yourself</attr>
    <attr name="pov_possessive">your</attr>
    <attr name="feature_usegive" type="boolean">false</attr>
    <attr name="feature_container" type="boolean">false</attr>
    <attr name="feature_switchable" type="boolean">false</attr>
    <attr name="feature_edible" type="boolean">false</attr>
    <attr name="feature_player" type="boolean">false</attr>
    <attr name="feature_lightdark" type="boolean">false</attr>
    <visited type="boolean">false</visited>
    <hasbeenmoved type="boolean">false</hasbeenmoved>
    <rarity type="int">0</rarity>
    <pic type="string"></pic>
    <wtype type="int">0</wtype>
    <saveable type="int">1</saveable>
    <img type="string"></img>
    <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
    <attr name="f_type"><![CDATA[.png'>]]></attr>
    <feature_startscript />
    <attr name="s_name" type="string"></attr>
    <attr name="m_props2" type="boolean">false</attr>
    <changedparent type="script">
      if (game.pov = this) {
        if (IsDefined("oldvalue")) {
          OnEnterRoom (oldvalue)
        }
        else {
          OnEnterRoom (null)
        }
        if (game.gridmap) {
          MergePOVCoordinates
        }
      }
      this.hasbeenmoved = true
    </changedparent>
    <changedisopen type="script">
      if (this.isopen and HasScript(this, "onopen")) {
        do (this, "onopen")
      }
      if (not this.isopen and HasScript(this, "onclose")) {
        do (this, "onclose")
      }
    </changedisopen>
    <changedlocked type="script">
      if (this.locked and HasScript(this, "onlock")) {
        do (this, "onlock")
      }
      if (not this.locked and HasScript(this, "onunlock")) {
        do (this, "onunlock")
      }
    </changedlocked>
    <changedswitchedon type="script">
      if (this.switchedon and HasScript(this, "onswitchon")) {
        do (this, "onswitchon")
      }
      if (not this.switchedon and HasScript(this, "onswitchoff")) {
        do (this, "onswitchoff")
      }
    </changedswitchedon>
    <saved type="int">0</saved>
  </type>
  <type name="defaultarmor">
    <visible />
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Take</value>
    </displayverbs>
    <inventoryverbs type="stringlist">
      <value>Look at</value>
      <value>Use</value>
      <value>Drop</value>
      <value>Export</value>
    </inventoryverbs>
    <take type="boolean">false</take>
    <use type="boolean">false</use>
    <givesingle type="boolean">false</givesingle>
    <drop />
    <gender>it</gender>
    <article>it</article>
    <possessive>its</possessive>
    <isopen type="boolean">false</isopen>
    <open type="boolean">false</open>
    <close type="boolean">false</close>
    <container type="boolean">false</container>
    <descprefix>You are in</descprefix>
    <objectslistprefix>You can see</objectslistprefix>
    <exitslistprefix>You can go</exitslistprefix>
    <contentsprefix>containing</contentsprefix>
    <description type="string"></description>
    <attr name="implementation_notes" type="string"></attr>
    <scenery type="boolean">false</scenery>
    <hidechildren type="boolean">false</hidechildren>
    <listchildren type="boolean">false</listchildren>
    <usedefaultprefix />
    <volume type="int">0</volume>
    <price type="int">0</price>
    <dark type="boolean">false</dark>
    <lightstrength type="string"></lightstrength>
    <darklevel type="boolean">false</darklevel>
    <attr name="grid_width" type="int">1</attr>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_fill">White</attr>
    <attr name="grid_border">Black</attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <attr name="grid_bordersides" type="int">15</attr>
    <attr name="grid_render" type="boolean">false</attr>
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_label_colour">Black</attr>
    <grid_parent_offset_auto />
    <attr name="grid_parent_offset_x" type="int">0</attr>
    <attr name="grid_parent_offset_y" type="int">0</attr>
    <attr name="pov_alias">me</attr>
    <pov_alt type="stringlist">
      <value>me</value>
      <value>myself</value>
      <value>self</value>
    </pov_alt>
    <attr name="pov_look">Looking good.</attr>
    <attr name="pov_gender">you</attr>
    <attr name="pov_article">yourself</attr>
    <attr name="pov_possessive">your</attr>
    <attr name="feature_usegive" type="boolean">false</attr>
    <attr name="feature_container" type="boolean">false</attr>
    <attr name="feature_switchable" type="boolean">false</attr>
    <attr name="feature_edible" type="boolean">false</attr>
    <attr name="feature_player" type="boolean">false</attr>
    <attr name="feature_lightdark" type="boolean">false</attr>
    <visited type="boolean">false</visited>
    <hasbeenmoved type="boolean">false</hasbeenmoved>
    <BasePhysicalResist type="int">0</BasePhysicalResist>
    <BaseFireResist type="int">0</BaseFireResist>
    <BaseColdResist type="int">0</BaseColdResist>
    <BasePoisonResist type="int">0</BasePoisonResist>
    <BaseEnergyResist type="int">0</BaseEnergyResist>
    <AosStrReq type="int">0</AosStrReq>
    <ArmorBase type="int">0</ArmorBase>
    <AttackChance type="int">0</AttackChance>
    <BonusDex type="int">0</BonusDex>
    <BonusHits type="int">0</BonusHits>
    <BonusInt type="int">0</BonusInt>
    <BonusStam type="int">0</BonusStam>
    <BonusStr type="int">0</BonusStr>
    <Chaos type="int">0</Chaos>
    <Cold type="int">0</Cold>
    <DefendChance type="int">0</DefendChance>
    <Direct type="int">0</Direct>
    <Energy type="int">0</Energy>
    <Fire type="int">0</Fire>
    <LowerManaCost type="int">0</LowerManaCost>
    <Luck type="int">0</Luck>
    <NightSight type="int">0</NightSight>
    <Physical type="int">0</Physical>
    <Poison type="int">0</Poison>
    <ReflectPhysical type="int">0</ReflectPhysical>
    <RegenHits type="int">0</RegenHits>
    <RegenMana type="int">0</RegenMana>
    <RegenStam type="int">0</RegenStam>
    <ResistColdBonus type="int">0</ResistColdBonus>
    <ResistEnergyBonus type="int">0</ResistEnergyBonus>
    <ResistFireBonus type="int">0</ResistFireBonus>
    <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
    <ResistPoisonBonus type="int">0</ResistPoisonBonus>
    <SpellChanneling type="int">0</SpellChanneling>
    <SpellDamage type="int">0</SpellDamage>
    <WeaponDamage type="int">0</WeaponDamage>
    <pic type="string"></pic>
    <attr name="arm_type" type="int">0</attr>
    <saveable type="int">1</saveable>
    <changedparent type="script">
      if (game.pov = this) {
        if (IsDefined("oldvalue")) {
          OnEnterRoom (oldvalue)
        }
        else {
          OnEnterRoom (null)
        }
        if (game.gridmap) {
          MergePOVCoordinates
        }
      }
      this.hasbeenmoved = true
    </changedparent>
    <changedisopen type="script">
      if (this.isopen and HasScript(this, "onopen")) {
        do (this, "onopen")
      }
      if (not this.isopen and HasScript(this, "onclose")) {
        do (this, "onclose")
      }
    </changedisopen>
    <changedlocked type="script">
      if (this.locked and HasScript(this, "onlock")) {
        do (this, "onlock")
      }
      if (not this.locked and HasScript(this, "onunlock")) {
        do (this, "onunlock")
      }
    </changedlocked>
    <changedswitchedon type="script">
      if (this.switchedon and HasScript(this, "onswitchon")) {
        do (this, "onswitchon")
      }
      if (not this.switchedon and HasScript(this, "onswitchoff")) {
        do (this, "onswitchoff")
      }
    </changedswitchedon>
  </type>
   <function name="BuyingPrice" parameters="object" type="int">
    return (object.price * 3)
  </function>
  <function name="SellingPrice" parameters="object" type="int">
    return (object.price)
  </function>
  <function name="StealObject" parameters="object">
    msg ("You cannot just steal stuff!")
  </function>
  <function name="SetupMerch" parameters="object"><![CDATA[
    obj = object
    if (not HasString(obj, "alias")) {
      obj.alias = obj.name
    }
	obj.scenery = true
    obj.price = RandomRnd()
    obj.listalias2 = "<br>"+obj.alias + " (" + BuyingPrice(obj) + " gp)"
    obj.cloneme = true
    obj.take => {
      StealObject (this)
    }
    obj.buy => {
      BuyObject (this)
    }
  ]]></function>
  <function name="BuyObject"  type="object" parameters="obj"><![CDATA[
    if (BuyingPrice(obj) > player.gold) {
	  msg ("You can't afford that!")
	}
	else {
	  if (GetBoolean(obj, "cloneme")) {
		newobj = CloneObject(obj)
		newobj.take = false
		newobj.parent = game.pov
		newobj.buy = null
		newobj.listalias2 = obj.alias
		newobj.scenery = false
		player.gold = player.gold - BuyingPrice(newobj)
		msg ("You buy " + newobj.article + " for " + BuyingPrice(newobj) + " gp.")
	  }
	  else {
		msg ("That is not available. Please, try something else.")
	  }
	  return (newobj)
	}
  ]]></function>
  <function name="ShopList" type="stringlist"><![CDATA[
    slist = NewStringList()
    foreach (object, AllObjects()) {
      if (GetInt(object, "saveable") = 1) {
        if (object.wtype > 0) {
          set (object, "scenery", True)
          SetupMerch (object)
          list add (slist, "<br>"+object.pic+object.listalias2+" <br>")
        }
      }
    }
    game.pov.slist = (slist)
    return (slist)
  ]]></function>
  <function name="This" type="object">
    if (DictionaryContains(game.pov.currentcommandresolvedelements,"object")) {
      return (DictionaryItem(game.pov.currentcommandresolvedelements,"object"))
    }
    else if (DictionaryContains(game.pov.currentcommandresolvedelements,"object1")) {
      return (DictionaryItem(game.pov.currentcommandresolvedelements,"object1"))
    }
  </function>
  <function name="SaveObject" parameters="object" type="string"><![CDATA[
    msg ("Please give the item a Unique Name with no spaces:")
    msg ("<br>Note: When you Load/Import your item, the name must match exactly as you type it here.<br>")
    get input {
      object.s_name = (result)
      // If this is a clone, save the prototype object's name to avoid loading errors.
      if (HasAttribute (object, "prototype")) {
        name = object.prototype.name
      }
      else {
        name = object.name
      }
      qson = "{name: " + name + ", s_name: " +object.s_name+ ",AosStrReq: "+object.AosStrReq+"__integer__,AosMinDam: "+object.AosMinDam+"__integer__,AosMaxDam: "+object.AosMaxDam+"__integer__,AttackChance: "+object.AttackChance+"__integer__,BonusDex: "+object.BonusDex+"__integer__,BonusHits: "+object.BonusHits+"__integer__,BonusInt: "+object.BonusInt+"__integer__,BonusMana: "+object.BonusMana+"__integer__,BonusStam: "+object.BonusStam+"__integer__,BonusStr: "+object.BonusStr+"__integer__,Chaos: "+object.Chaos+"__integer__,Cold: "+object.Cold+"__integer__,DefendeChance: "+object.DefendChance+"__integer__,Direct: "+object.Direct+"__integer__,Energy: "+object.Energy+"__integer__,Fire: "+object.Fire+"__integer__,LowerManaCost: "+object.LowerManaCost+"__integer__,Luck: "+object.Luck+"__integer__,Physical: "+object.Physical+"__integer__,Poison: "+object.Poison+"__integer__,ReflectPhysical: "+object.ReflectPhysical+"__integer__,RegenHits: "+object.RegenHits+"__integer__,RegenMana: "+object.RegenMana+"__integer__,RegenStam: "+object.RegenStam+"__integer__,ResistColdBonus: "+object.ResistColdBonus+"__integer__,ResistEnergyBonus: "+object.ResistEnergyBonus+"__integer__,ResistFireBonus: "+object.ResistFireBonus+"__integer__,ResistPhysicalBonus: "+object.ResistPhysicalBonus+"__integer__,ResistPoisonBonus: "+object.ResistPoisonBonus+"__integer__,SpellDamage: "+object.SpellDamage+"__integer__,WeaponDamage: "+object.WeaponDamage+"__integer__,HitColdArea: "+object.HitColdArea+"__integer__,HitDispel: "+object.HitDispel+"__integer__,HitEnergyArea: "+object.HitEnergyArea+"__integer__,HitFireArea: "+object.HitFireArea+"__integer__,HitFireball: "+object.HitFireball+"__integer__,HitHarm: "+object.HitHarm+"__integer__,HitLeechHits: "+object.HitLeechHits+"__integer__,HitLeechMana: "+object.HitLeechMana+"__integer__,HitLeechStam: "+object.HitLeechStam+"__integer__,HitLightning: "+object.HitLightning+"__integer__,HitLowerAttack: "+object.HitLowerAttack+"__integer__,HitLowerDefend: "+object.HitLowerDefend+"__integer__,HitMagicArrow: "+object.HitMagicArrow+"__integer__,HitPhysicalArea: "+object.HitPhysicalArea+"__integer__,wtype: "+object.wtype+"__integer__,img: "+object.img+"}"
      msg ("Copy and paste this into the Item Generation box below:<br>"+ qson +"")
      msg ("<iframe src=\"http://www.uoexpanse.com/quests/index2.html\" width=\"75%\" height=\"auto\"></iframe>")
    }
  ]]></function>
  <function name="LoadObject" parameters="data" type="object">
    // Return null if the object does not exist
    if (LoadObjectFromSaveData (data) = null) {
      return (null)
    }
    // Objects exists, so proceed
    object = LoadObjectFromSaveData (data)
    set (object, "saveable", 0)
	set (object, "scenery", False)
    MoveObject (object, player)
    ShowRoomDescription
    return (object)
  </function>
  <function name="ShallowClone" parameters="object" type="object"><![CDATA[
    bool = (ListCount(GetDirectChildren(object))>0)
    if (bool) {
      create ("temp_clone_kids_care")
      holder = GetObject("temp_clone_kids_care")
      foreach (o, GetDirectChildren(object)) {
        MoveObject (o, holder)
      }
    }
    newobject = Clone(object)
    if (bool) {
      foreach (o, GetDirectChildren(holder)) {
        MoveObject (o, object)
      }
      destroy ("temp_clone_kids_care")
    }
    return (newobject)
  ]]></function>
  <function name="CloneObject" parameters="object" type="object">
    newobject = ShallowClone(object)
    if (not HasString(object, "alias")) {
      newobject.alias = object.name
    }
    if (not HasAttribute(object, "prototype")) {
      newobject.prototype = object
    }
    foreach (o, GetDirectChildren(object)) {
      o2 = CloneObject (o)
      MoveObject (o2, newobject)
    }
    return (newobject)
  </function>
  <function name="ContainsClone" parameters="parent, prototype" type="boolean"><![CDATA[
    return (ListCount(GetDirectCloneChildren(parent,prototype))>0)
  ]]></function>
  <function name="IsCloneOf" parameters="object, prototype"><![CDATA[
    return (object.prototype == prototype)
  ]]></function>
  <function name="ScopeReachableClonesOf" parameters="prototype"><![CDATA[
    return (FilterByAttribute(ScopeReachable(), "prototype", prototype))
  ]]></function>
  <function name="GetRandomReachableCloneOf" parameters="prototype"><![CDATA[
    PickOneObject (ScopeReachableClonesOf(prototype))
  ]]></function>
  <function name="AnyReachableCloneGetBoolean" parameters="prototype, attribute"><![CDATA[
    return (ListCount(FilterByAttribute(ScopeReachableClonesOf(prototype), attribute, true))>0)
  ]]></function>
  <function name="GetReachableClonesWithBoolean" parameters="prototype, attribute"><![CDATA[
    return (FilterByAttribute(ScopeReachableClonesOf(prototype), attribute, true))
  ]]></function>
  <function name="GetDirectCloneChildren" parameters="parent, prototype"><![CDATA[
    return (FilterByAttribute(GetDirectChildren(parent),"prototype", prototype))
  ]]></function>
  <function name="InitUserInterface">
  </function>
  <function name="RandomChance" parameters="percentile" type="boolean"><![CDATA[
    return (GetRandomInt(1,100) <= percentile)
  ]]></function>
  <function name="InitScore" parameters="max, ranks, status">
    game.score_rank_list = Split(ranks, ",")
    game.score_max = max
    game.score_achievements = NewStringDictionary()
    player.score = 0
    if (not status) {
      player.statusattributes = NewStringDictionary()
    }
    dictionary add (player.statusattributes, "score", "Score: !/" + max)
  </function>
  <function name="LoadObjectFromSaveData" parameters="data" type="object">
    data = Replace(Replace(data,"{",""),"}","")
    stuff = Split(data, ",")
    namestuff = stuff[0]
    list remove (stuff, stuff[0])
    namethings = Split(namestuff, ":")
    obj = namethings[1]
    obj = Trim(obj)
    if (not GetObject(obj) = null) {
      obj = GetObject(obj)
      newobj = CloneObject(obj)
    }
    else {
      PrintCentered ("That item does not exist. Please try a different item.")
      // Added by KV to exit the function
      return (null)
    }
    foreach (s, stuff) {
      s = Trim(s)
      ab = Split(s, ":")
      a = ab[0]
      b = ab[1]
      a = Trim(a)
      b = Trim(b)
      if (b = null or b = "") {
        error ("LoadFromSave: " + a +" has invalid value of '" +b+"'")
      }
      if (StartsWith(b, "game.")) {
        if (StartsWith(b, "game.pov.")) {
          b = Replace(b, "game.pov.", "")
          b = GetAttribute(game.pov, b)
        }
        else {
          b = Replace(b, "game.", "")
          b = GetAttribute(game, b)
        }
      }
      else if (EndsWith(b,"__double__")) {
        b = Replace(b, "__double__", "")
        if (not b = "") {
          b = ToDouble (b)
        }
        else {
          b = 0
        }
      }
      else if (EndsWith(b,"__integer__")) {
        b = Replace(b, "__integer__", "")
        if (not b = "") {
          b = ToInt (b)
        }
        else {
          b = 0
        }
      }
      else if (EndsWith(b, "__boolean__")) {
        b = Replace(b, "__boolean__", "")
        if (LCase(b) = "true") {
          b = true
        }
        else if (LCase(b) = "false") {
          b = false
        }
      }
      if (typeof(b) = "string") {
        if (not GetObject(b)  = null) {
          b = GetObject(b)
        }
      }
      set (newobj, a, b)
    }
    return (newobj)
  </function>
  <function name="PickFiveStrings" parameters="list" type="list">
    one = PickOneString(list)
    list = ListExclude(list, one)
    two = PickOneString(list)
    list = ListExclude(list, two)
    three = PickOneString(list)
    list = ListExclude(list, three)
    four = PickOneString(list)
    list = ListExclude(list, four)
    five = PickOneString (list)
    result = NewList()
    list add (result, one)
    list add (result, two)
    list add (result, three)
    list add (result, four)
    list add (result, five)
    return (result)
  </function>
  <function name="PickFourStrings" parameters="list" type="list">
    one = PickOneString(list)
    list = ListExclude(list, one)
    two = PickOneString(list)
    list = ListExclude(list, two)
    three = PickOneString(list)
    list = ListExclude(list, three)
    four = PickOneString(list)
    result = NewList()
    list add (result, one)
    list add (result, two)
    list add (result, three)
    list add (result, four)
    return (result)
  </function>
  <function name="PickThreeStrings" parameters="list" type="list">
    one = PickOneString(list)
    list = ListExclude(list, one)
    two = PickOneString(list)
    list = ListExclude(list, two)
    three = PickOneString(list)
    result = NewList()
    list add (result, one)
    list add (result, two)
    list add (result, three)
    return (result)
  </function>
  <function name="PickTwoStrings" parameters="list" type="list">
    one = PickOneString(list)
    list = ListExclude(list, one)
    two = PickOneString(list)
    result = NewList()
    list add (result, one)
    list add (result, two)
    return (result)
  </function>
  <function name="PickOneStrings" parameters="list" type="list">
    one = PickOneString(list)
    result = NewList()
    list add (result, one)
    return (result)
  </function>
  <function name="Magical_Props2" parameters="obj"><![CDATA[
    dict = mag_props.alphabetdict
    keys = NewStringList()
    foreach (key, dict) {
      list add (keys, key)
    }
    list = NewStringList()
    if (GetInt(obj, "rarity") > 11) {
      for (i, 12, GetInt(obj, "rarity"), 20) {
        list add (list, PickOneString(ListExclude (keys, list)))
      }
    }
    foreach (key, list) {
      val = DictionaryItem (dict, key)
      val2 = RandomRnd()
      if (IsInt (val)) {
        val = ToInt (val)
        val3 = (val + val2)
        val = (val3)
      }
      set (obj, key, val)
    }
    set (obj, "m_props2", (list))
    Properties_List3 (obj)
  ]]></function>
  <function name="Properties_List3" parameters="obj" type="list"><![CDATA[
    dict = mag_props.alphabetdict
    props = ""
    foreach (key, dict) {
      if (HasInt (obj, key)) {
        if (GetInt(obj, key) > 0) {
          val = UnCamelCase (key) + ": " + GetInt(obj, key) + "<br/>"
          set (obj, key+2, val)
          props = props + val
        }
      }
    }
    set (obj, "m_props", props)
  ]]></function>
  <function name="UnCamelCase" parameters="input" type="string">
    output = ""
    for (i, 1, LengthOf(input)) {
      letter = Mid (input, i, 1)
      if (letter = UCase (letter) and not output = "") {
        output = output + " "
      }
      output = output + letter
    }
    return (output)
  </function>
  <function name="RandomRnd" type="int">
    val1 = GetRandomInt (1,10)
    val2 = GetRandomInt (1,10)
    val3 = GetRandomInt (1,10)
    val4 = GetRandomInt (1,10)
    val5 = GetRandomInt (1,10)
    val = val1+val2+val3+val4+val5
    return (val)
  </function>
  <function name="targets"><![CDATA[
    loc = game.pov.parent
    foreach (mob, ScopeVisible()) {
      obj = mob
      if (game.pov.parent = obj.parent) {
        if (GetInt(obj, "mob") = 1) {
          loc = game.pov.parent
          if (GetInt(obj, "current_hp") > 0) {
            target = obj.name
            list add (loc.mlist, target)
          }
          else if (GetInt(obj, "current_hp") < 1) {
            target = obj.name
            list remove (loc.mlist, target)
          }
        }
      }
    }
  ]]></function>
  <function name="resists_table"><![CDATA[
    phys = phy()
    fire = fir()
    cold = col()
    pois = poi()
    ener = ene()
    do (player, "changedphysical")
    do (player, "changedfire")
    do (player, "changedcold")
    do (player, "changedpois")
    do (player, "changedener")
    player.changedphysical => {
      JS.eval ("$('.phys-indicator').css('padding-right', '" + (player.physical - 7) + "px');")
    }
    player.changedfire => {
      JS.eval ("$('.fire-indicator').css('padding-right', '" + (player.fire - 7) + "px');")
    }
    player.changedcold => {
      JS.eval ("$('.cold-indicator').css('padding-right', '" + (player.cold - 7) + "px');")
    }
    player.changedpois => {
      JS.eval ("$('.pois-indicator').css('padding-right', '" + (player.poison - 7) + "px');")
    }
    player.changedener => {
      JS.eval ("$('.ener-indicator').css('padding-right', '" + (player.energy - 7) + "px');")
    }
  ]]></function>
  <function name="phy" type="stringlist"><![CDATA[
    player.changedphysical => {
      OutputTextNoBr ("<tr><td><p>P: <span class=\"phys-indicator\" style=\"background-color:pink;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.phys-indicator').css('padding-right', '" + (player.physical - 7) + "px');")
    }
    phys = NewStringList()
    return (phys)
  ]]></function>
  <function name="fir" type="stringlist"><![CDATA[
    player.changedfire => {
      OutputTextNoBr ("<tr><td><p>F: <span class=\"fire-indicator\" style=\"background-color:orangered;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.fire-indicator').css('padding-right', '" + (player.fire - 7) + "px');")
    }
    fire = NewStringList()
    return (fire)
  ]]></function>
  <function name="col" type="stringlist"><![CDATA[
    player.changedcold => {
      OutputTextNoBr ("<tr><td><p>C: <span class=\"cold-indicator\" style=\"background-color:aqua;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.cold-indicator').css('padding-right', '" + (player.cold - 7) + "px');")
    }
    cold = NewStringList()
    return (cold)
  ]]></function>
  <function name="poi" type="stringlist"><![CDATA[
    player.changedpois => {
      OutputTextNoBr ("<tr><td><p>P: <span class=\"pois-indicator\" style=\"background-color:yellowgreen;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.pois-indicator').css('padding-right', '" + (player.poison - 7) + "px');")
    }
    pois = NewStringList()
    return (pois)
  ]]></function>
  <function name="ene" type="stringlist"><![CDATA[
    player.changedener => {
      OutputTextNoBr ("<tr><td><p>E: <span class=\"ener-indicator\" style=\"background-color:yellow;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.ener-indicator').css('padding-right', '" + (player.energy - 7) + "px');")
    }
    ener = NewStringList()
    return (ener)
  ]]></function>
  <function name="combat_damage" parameters="weapon, target" type="int"><![CDATA[
    p = game.pov.parent
    combat_leeches (weapon, target)
    combat_elemental (weapon, target)
    combat_hitspecials (weapon, target)
    weapon.dam = ((weapon.AosMinDam)+(weapon.AosMaxDam)/2)
    totdam = (player.dam)+(weapon.dam)
    return (totdam)
  ]]></function>
  <function name="combat_elemental" parameters="object, target" type="int"><![CDATA[
    weapon = object
    obj = weapon
    obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
    weapdam = obj.dam
    if ((obj.Chaos) > 0) {
      if (target.current_hp > (obj.Chaos)) {
        if (obj.Chaos > 0) {
          chaosdam = (obj.Chaos)/100
          cdam = (weapdam) * (chaosdam)
          chaosres = (target.chaos)/100
          if ((cdam) - (chaosres) > 0) {
            cha = Round((cdam) - (chaosres))
            target.current_hp = (target.current_hp) - (cha)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(cha)+ " additional Chaos damage.<br>")
          }
          else if ((cdam) - (chaosres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Chaos damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Cold) > 0) {
      if (target.current_hp > (obj.Cold)) {
        if (obj.Cold > 0) {
          colddam = (obj.Cold)/100
          codam = (weapdam) * (colddam)
          coldres = (target.cold)/100
          if ((codam) - (coldres) > 0) {
            col = Round((codam) - (coldres))
            target.current_hp = (target.current_hp) - (col)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(col)+ " additional Cold damage.<br>")
          }
          else if ((codam) - (coldres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Cold damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Energy) > 0) {
      if (target.current_hp > (obj.Energy)) {
        if (obj.Energy > 0) {
          energydam = (obj.Energy)/100
          edam = (weapdam) * (energydam)
          eres = (target.energy)/100
          if ((edam) - (eres) > 0) {
            ene = Round((edam) - (eres))
            target.current_hp = (target.current_hp) - (ene)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(ene)+ " additional Energy damage.<br>")
          }
          else if ((edam) - (eres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Energy damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Fire) > 0) {
      if (target.current_hp > (obj.Fire)) {
        if (obj.Fire > 0) {
          firedam = (obj.Fire)/100
          fdam = (weapdam) * (firedam)
          fres = (target.fire)/100
          if ((fdam) - (fres) > 0) {
            fir = Round((fdam) - (fres))
            target.current_hp = (target.current_hp) - (fir)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(fir)+ " additional Fire damage.<br>")
          }
          else if ((fdam) - (fres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Fire damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Physical) > 0) {
      if (target.current_hp > (obj.Physical)) {
        if (obj.Physical > 0) {
          physdam = (obj.Physical)/100
          pdam = (weapdam) * (physdam)
          pres = (target.physical)/100
          if ((pdam) - (pres) > 0) {
            phy = Round((pdam) - (pres))
            target.current_hp = (target.current_hp) - (phy)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(phy)+ " additional Physical damage.<br>")
          }
          else if ((pdam) - (pres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Physical damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Poison) > 0) {
      if (target.current_hp > (obj.Poison)) {
        if (obj.Poison > 0) {
          poisondam = (obj.Poison)/100
          poisdam = (weapdam) * (poisondam)
          poisres = (target.poison)/100
          if ((poisdam) - (poisres) > 0) {
            poi = Round((poisdam) - (poisres))
            target.current_hp = (target.current_hp) - (poi)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(poi)+ " additional Poison damage.<br>")
          }
          else if ((poisdam) - (poisres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Poison damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    return ((weapdam))
  ]]></function>
  <function name="combat_hitspecials" parameters="object, target"><![CDATA[
    weapon = object
    obj = weapon
    if ((obj.HitColdArea) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitColdArea)) {
        if (target.current_hp > (obj.HitColdArea)) {
          if (obj.HitColdArea > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hcadam = (obj.HitColdArea)/100
            hca = (weapdam) * (hcadam)
            coldres = (target.cold)/100
            if ((hca) - (coldres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hcadam = (obj.HitColdArea)/100
              hca = (weapdam) * (hcadam)
              coldres = (target.cold)/100
              hcahit = Round((hca) - (coldres))
              if ((target.current_hp - hcahit) > 0) {
                target.current_hp = (target.current_hp) - (hcahit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hcahit)+ " additional Cold damage from [Hit Cold Area].<br>")
              }
              else if ((target.current_hp - hcahit) < 1) {
                PrintCentered ("The [Hit Cold Area] property on your weapon has killed "+target.alias+"!")
				set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hca) - (coldres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Cold damage from [Hit Cold Area].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitDispel) > 0) {
      chance = GetRandomInt(1,100)
      if ((chance) < (obj.HitDispel)) {
        foreach (mob, targets()) {
          if (mob.summoned = true) {
            if (RandomChance(40)) {
              PrintCentered (""+mob.alias+" has been dispelled!")
              set (mob, "alive", false)
              set (mob, "current_hp", 0)
              list remove (game.pov.parent.mlist, mob.name)
            }
          }
        }
      }
    }
    if ((obj.HitEnergyArea) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitEnergyArea)) {
        if (target.current_hp > (obj.HitEnergyArea)) {
          if (obj.HitEnergyArea > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            headam = (obj.HitEnergyArea)/100
            hea = (weapdam) * (headam)
            enerres = (target.energy)/100
            if ((hea) - (enerres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              headam = (obj.HitEnergyArea)/100
              hea = (weapdam) * (headam)
              enerres = (target.energy)/100
              heahit = Round((hea) - (enerres))
              if ((target.current_hp - heahit) > 0) {
                target.current_hp = (target.current_hp) - (heahit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(heahit)+ " additional Energy damage from [Hit Energy Area].<br>")
              }
              else if ((target.current_hp - heahit) < 1) {
                PrintCentered ("The [Hit Energy Area] property on your weapon has killed "+target.alias+"!")
				set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hea) - (enerres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Energy damage from [Hit Energy Area].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitFireball) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitFireball)) {
        if (target.current_hp > (obj.HitFireball)) {
          if (obj.HitFireball > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hfbdam = (obj.HitFireball)/100
            hfb = (weapdam) * (hfbdam)
            fireres = (target.fire)/100
            if ((hfb) - (fireres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hfbdam = (obj.HitFireball)/100
              hfb = (weapdam) * (hfbdam)
              fireres = (target.fire)/100
              hfbhit = Round((hfb) - (fireres))
              if ((target.current_hp - hfbhit) > 0) {
                target.current_hp = (target.current_hp) - (hfbhit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hfbhit)+ " additional Fire damage from [Hit Fireball].<br>")
              }
              else if ((target.current_hp - hfbhit) < 1) {
                PrintCentered ("The [Hit Fireball] property on your weapon has killed "+target.alias+"!")
				set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hfb) - (fireres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Fire damage from [Hit Fireball].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitHarm) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitHarm)) {
        if (target.current_hp > (obj.HitHarm)) {
          if (obj.HitHarm > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hhdam = (obj.HitHarm)/100
            hh = (weapdam) * (hhdam)
            coldres = (target.cold)/100
            if ((hh) - (coldres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hhdam = (obj.HitHarm)/100
              hh = (weapdam) * (hhdam)
              coldres = (target.cold)/100
              hhhit = Round((hh) - (coldres))
              if ((target.current_hp - hhhit) > 0) {
                target.current_hp = (target.current_hp) - (hhhit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hhhit)+ " additional Cold damage from [Hit Cold Area].<br>")
              }
              else if ((target.current_hp - hhhit) < 1) {
                PrintCentered ("The [Hit Harm] property on your weapon has killed "+target.alias+"!")
				set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hh) - (coldres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Cold damage from [Hit Harm].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitLightning) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitLightning)) {
        if (target.current_hp > (obj.HitLightning)) {
          if (obj.HitLightning > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hldam = (obj.HitLightning)/100
            hl = (weapdam) * (hldam)
            enerres = (target.energy)/100
            if ((hl) - (enerres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hldam = (obj.HitLightning)/100
              hl = (weapdam) * (hldam)
              enerres = (target.energy)/100
              hlhit = Round((hl) - (enerres))
              if ((target.current_hp - hlhit) > 0) {
                target.current_hp = (target.current_hp) - (hlhit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hlhit)+ " additional Cold damage from [Hit Cold Area].<br>")
              }
              else if ((target.current_hp - hlhit) < 1) {
                PrintCentered ("The [Hit Lightning] property on your weapon has killed "+target.alias+"!")
				set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hl) - (enerres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Cold damage from [Hit Lightning].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitLowerAttack) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitLowerAttack)) {
        if (obj.HitLowerAttack > 0) {
          obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
          weapdam = obj.dam
          hladam = (obj.HitLowerAttack)/100
          hla = (weapdam) * (hladam)
          defres = (target.defense)/100
          if ((hla) - (defres) > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hladam = (obj.HitLowerAttack)/100
            hla = (weapdam) * (hladam)
            defres = (target.defense)/100
            hlahit = Round((hla) - (defres))
            if ((target.dam - hlahit) > 0) {
              target.dam = (target.dam) - (hlahit)
              PrintCentered ("<br>The " +target.alias+ " was not able to resist [Hit Lower Attack] and their attacks have been reduced by: " +(hlahit)+ "<br>")
            }
            else if ((target.dam - hlahit) < 1) {
              PrintCentered ("The [Hit Lower Attack] property on your weapon has reduced the attacks of "+target.alias+" to 1!")
              set (target, "dam", 1)
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
          else if ((hla) - (defres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted [Hit Lower Attack].<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.HitLowerDefend) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitLowerDefend)) {
        if (obj.HitLowerDefend > 0) {
          obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
          weapdam = obj.dam
          hlddam = (obj.HitLowerDefend)/100
          hld = (weapdam) * (hlddam)
          defres = (target.defense)/100
          if ((hld) - (defres) > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hlddam = (obj.HitLowerDefend)/100
            hld = (weapdam) * (hlddam)
            defres = (target.defense)/100
            hldhit = Round((hld) - (defres))
            if ((target.defense - hldhit) > 0) {
              target.defense = (target.defense) - (hldhit)
              PrintCentered ("<br>The " +target.alias+ " was not able to resist [Hit Lower Defense] and their defense have been reduced by: " +(hldhit)+ "<br>")
            }
            else if ((target.defense - hldhit) < 1) {
              PrintCentered ("The [Hit Lower Defense] property on your weapon has reduced the defense of "+target.alias+" to 1!")
              set (target, "defense", 1)
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
          else if ((hld) - (defres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted [Hit Lower Defense].<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.HitMagicArrow) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitMagicArrow)) {
        if (target.current_hp > (obj.HitMagicArrow)) {
          if (obj.HitMagicArrow > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hmadam = (obj.HitMagicArrow)/100
            hma = (weapdam) * (hmadam)
            physres = (target.physical)/100
            if ((hma) - (physres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hmadam = (obj.HitMagicArrow)/100
              hma = (weapdam) * (hmadam)
              physres = (target.physical)/100
              hmahit = Round((hma) - (physres))
              if ((target.current_hp - hmahit) > 0) {
                target.current_hp = (target.current_hp) - (hmahit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hmahit)+ " additional Physical damage from [Hit Magic Arrow].<br>")
              }
              else if ((target.current_hp - hmahit) < 1) {
                PrintCentered ("The [Hit Magic Arrow] property on your weapon has killed "+target.alias+"!")
				set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hma) - (physres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Physical damage from [Hit Magic Arrow].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitPhysicalArea) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitPhysicalArea)) {
        if (target.current_hp > (obj.HitPhysicalArea)) {
          if (obj.HitPhysicalArea> 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hpadam = (obj.HitPhysicalArea)/100
            hpa = (weapdam) * (hpadam)
            physres = (target.physical)/100
            if ((hpa) - (physres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hpadam = (obj.HitPhysicalArea)/100
              hpa = (weapdam) * (hpadam)
              physres = (target.physical)/100
              hpahit = Round((hpa) - (physres))
              if ((target.current_hp - hpahit) > 0) {
                target.current_hp = (target.current_hp) - (hpahit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hpahit)+ " additional Physical damage from [Hit Physical Area].<br>")
              }
              else if ((target.current_hp - hpahit) < 1) {
                PrintCentered ("The [Hit Physical Area] property on your weapon has killed "+target.alias+"!")
				set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hpa) - (physres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Physical damage from [Hit Physical Area].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
  ]]></function>
  <function name="combat_leeches" parameters="object, target"><![CDATA[
    weapon = object
    obj = weapon
    if (ToInt(ToString(obj.HitLeechHits)) > 0) {
      if (RandomChance(40)) {
        if ((target.current_hp) < (ToInt(ToString(obj.HitLeechHits)))) {
          game.pov.health = (game.pov.health)+(target.current_hp)
          PrintCentered ("You have leeched all of the life out of "+target.alias+"!")
		  set (target, "status", "Passed beyond the Veil.")
          set (target, "alive", false)
          set (target, "current_hp", 0)
          if (target.lootable > 0) {
            Gen_Loot (target)
          }
          list remove (game.pov.parent.mlist, target.name)
        }
        else {
          target.current_hp = (target.current_hp)-(obj.HitLeechHits)
          game.pov.health = (game.pov.health)+(obj.HitLeechHits)
          PrintCentered ("The Leech Hits property on your weapon leeched "+(obj.HitLeechHits)+" life from "+target.alias+"!")
        }
      }
    }
    if (ToInt(ToString(obj.HitLeechMana)) > 0) {
      if (RandomChance(40)) {
        if ((target.current_mp) < ToInt(ToString(obj.HitLeechMana))) {
          game.pov.mp = (game.pov.mp)+(target.current_mp)
          PrintCentered ("You have leeched all of the mana out of "+target.alias+"!")
          set (target, "current_mp", 0)
        }
        else {
          target.current_mp = (target.current_mp)-(obj.HitLeechMana)
          game.pov.mp = (game.pov.mp)+(obj.HitLeechMana)
          PrintCentered ("The Leech Mana property on your weapon leeched "+(obj.HitLeechMana)+" mana from "+target.alias+"!")
        }
      }
    }
    if (ToInt(ToString(obj.HitLeechStam)) > 0) {
      if (RandomChance(40)) {
        if ((target.current_stam) < ToInt(ToString(obj.HitLeechStam))) {
          game.pov.stam = (game.pov.stam)+(target.current_stam)
          PrintCentered ("You have leeched all of the stamina out of "+target.alias+"!")
          set (target, "current_stam", 0)
        }
        else {
          target.current_stam = (target.current_stam)-(obj.HitLeechStam)
          game.pov.stam = (game.pov.stam)+(obj.HitLeechStam)
          PrintCentered ("The Leech Stamina property on your weapon leeched "+(obj.HitLeechStam)+" stamina from "+target.alias+"!")
        }
      }
    }
  ]]></function>
  <function name="physdam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Physical > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      physical = (weapon.Physical)/(weapon.dam)
    }
    return ((physical))
  ]]></function>
  <function name="firedam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Fire > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      fire = (weapon.Fire)/(weapon.dam)
    }
    return ((fire))
  ]]></function>
  <function name="cdam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Cold > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      cold = (weapon.Cold)/(weapon.dam)
    }
    return ((cold))
  ]]></function>
  <function name="poisdam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Poison > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      poison = (weapon.Poison)/(weapon.dam)
    }
    return ((poison))
  ]]></function>
  <function name="enerdam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Energy > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      energy = (weapon.Energy)/(weapon.dam)
    }
    return ((energy))
  ]]></function>
  <function name="chadam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Chaos > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      chaos = (weapon.Chaos)/(weapon.dam)
    }
    return ((chaos))
  ]]></function>
  <function name="hpregen1"><![CDATA[
    if (game.pov.health < game.pov.maxhp) {
      playerhp = ToInt(ToString(player.RegenHits))/2
      PrintCentered ("Max Hit Points value: " +(game.pov.maxhp)+"")
      PrintCentered ("Regen Hits value calculated: " +(playerhp)+"")
      playerdam = ToInt(ToString((player.dam) + (playerhp)))/2
      PrintCentered ("Player Regen Hits value calculated: " +playerdam+"")
      if ((game.pov.health) + (playerdam) <= game.pov.maxhp) {
        playerhp = ToInt(ToString(player.RegenHits))/2
        playerdam = ToInt(ToString((player.dam) + (playerhp)))/2
        game.pov.health = ToInt(ToString((playerdam) + (game.pov.health)))
        PrintCentered ("Player Hit Points increased by: " +playerdam+"")
      }
      else if ((game.pov.health) + (playerdam) > game.pov.maxhp) {
        game.pov.health = (game.pov.maxhp)
      }
    }
  ]]></function>
  <function name="mpregen1"><![CDATA[
    if (game.pov.mp < game.pov.maxmp) {
      playermp = ToInt(ToString(player.RegenMana))/2
      PrintCentered ("Max Mana value: " +(game.pov.maxmp)+"")
      PrintCentered ("Regen Mana value calculated: " +(playermp)+"")
      playerdam = ToInt(ToString((player.SpellDamage) + (playermp)))/2
      PrintCentered ("Player Regen Mana value calculated: " +playerdam+"")
      if ((game.pov.health) + (playerdam) <= game.pov.maxmp) {
        playermp = ToInt(ToString(player.RegenMana))/2
        playerdam = ToInt(ToString((player.dam) + (playermp)))/2
        game.pov.mp = ToInt(ToString((playerdam) + (game.pov.mp)))
        PrintCentered ("Player Mana Points increased by: " +playerdam+"")
      }
      else if ((game.pov.mp) + (playerdam) > game.pov.maxmp) {
        game.pov.mp = (game.pov.maxmp)
      }
    }
  ]]></function>
  <function name="stamregen1"><![CDATA[
    if (game.pov.stam < game.pov.maxstam) {
      playerstam = ToInt(ToString(game.pov.RegenStam))/10
      PrintCentered ("Max Stamina value: " +(game.pov.maxstam)+"")
      PrintCentered ("Regen Stamina value calculated: " +playerstam+"")
      playerdam = ((game.pov.stam) + (playerstam))
      PrintCentered ("Player Regen Stamina value calculated: " +playerdam+"")
      if ((game.pov.stam) + (playerdam) <= game.pov.maxstam) {
        playerstam = ToInt(ToString(game.pov.RegenStam))/10
        playerdam = ((game.pov.stam) + (playerstam))
        game.pov.stam = ToInt(ToString((game.pov.stam) + (playerdam)))
        PrintCentered ("Player Stamina Points increased by: " +playerdam+"")
      }
      else if ((game.pov.stam) + (playerdam) > game.pov.maxstam) {
        game.pov.stam = (game.pov.maxstam)
      }
    }
  ]]></function>
  <function name="Create_Loot" parameters="object" type="object">
    obj = object
    newobj = CloneObject(obj)
    newobj.take = true
    newobj.buy = null
    newobj.listalias2 = obj.alias
    newobj.scenery = false
    return (newobj)
  </function>
  <timer name="hp_regen1">
    <interval>2</interval>
    <script>
      hpregen1
    </script>
  </timer>
  <timer name="mp_regen1">
    <interval>2</interval>
    <script>
      mpregen1
    </script>
  </timer>
  <timer name="stam_regen1">
    <interval>2</interval>
    <script>
      stamregen1
    </script>
  </timer>
  <timer name="stat_regen1">
    <interval>5</interval>
    <enabled />
    <script><![CDATA[
      if (game.pov.health < player.maxhp) {
        game.pov.health = (game.pov.health) + 1
      }
      if (player.mp < player.maxmp) {
        player.mp = (player.mp) + 1
      }
      if (player.stam < player.maxstam) {
        player.stam = (player.stam) + 1
      }
    ]]></script>
  </timer>
  <timer name="stat_regenhp1">
    <interval>5</interval>
    <enabled />
    <script><![CDATA[
      if (game.pov.health < player.maxhp) {
        game.pov.health = (game.pov.health) + 1
      }
    ]]></script>
  </timer>
  <timer name="stat_regenmp1">
    <interval>5</interval>
    <enabled />
    <script><![CDATA[
      if (player.mp < player.maxmp) {
        player.mp = (player.mp) + 1
      }
    ]]></script>
  </timer>
  <timer name="stat_regenstam1">
    <interval>5</interval>
    <enabled />
    <script><![CDATA[
      if (player.stam < player.maxstam) {
        player.stam = (player.stam) + 1
      }
    ]]></script>
  </timer>
</library>