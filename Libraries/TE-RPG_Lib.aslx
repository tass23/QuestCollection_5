<?xml version="1.0"?>
<library>
<!-- UO-The Expanse TE-RPG_Lib v1.0 created by Raist and K.V.
****************************************************************************
**
** 																			GENERAL INFO
** NPCs to partner with the Player up to 3 (multiple types to choose from)
** NPC Recruiter for the Player to hire NPCs.
** NPC Quest Giver for complex quest creation.
** Weapons with magical properties, up to 5.
** Export/Import Weapons.
** Quest generation, complete with Enemy to carry the questObject.
** Enemy_types tiered from enemy_base to enemy_type_base to enemy_type_spawn.
** Enemies with stats.
** Random Spawn complete with tiered difficulty.
** SPAWNFORROOM to have specific enemies spawn in Rooms, which utilizes 2 tabs on each Room.
** Editor support with TABS on the Game element, and each Room element with the _ attribute.
** tab_room Object_Type with attributes that can be inherited on Rooms that will have Spawn and/or are Quest-related.
** quest_room Object_Type with attributes that can be inherited on the GAME to use for Quest Creation only.
** Extra features setup to be added using functions.
****************************************************************************
**
**																	TABLE OF contents
**																		I. INSTRUCTIONS
**																		II. TROUBLESHOOTING
**																		III. MAIN INSTALLATION
**																		IV. APPENDICES
**																			1. COMMANDS AND VERBS
**																			2. RANDOMSPAWN SECTION
**																			3. SPAWNFORROOM SECTION
**																			4. FEATURE CODE SECTIONS
**																				A. ENEMY SPAWNS TAB SECTION (type)
**																				B. ENEMY SELECTION SECTION (specific)
**																					i. MONGBAT SECTION
**																					ii. ETTIN SECTION
**																					iii. OGRE SECTION
**																					iv. ORC SECTION
**																			5. SAMPLE ROOM: CROSSROADS1
**																			6. ENEMY ROOM: old_chamber
**																			7. QUEST CREATION SECTION with QUEST ENEMY
**																			8. NPCs SETUP SECTION
**																			9. BEGINNING OF NPCs ROOM: npc_room
**																			10. MAP SECTION
**																			11. WEAPON SECTION
**																			12. BASE TYPES SECTION (NPCs, Weapons, Enemies, Rooms)
**																			13. FUNCTIONS SECTION
**																			14. TIMERS SECTION 
**
****************************************************************************
**
**																			I. INSTRUCTIONS FOR USE
**
**  This whole system can work with everything installed and use only the features configured by the tabs. Some features affect the whole Game, or some affect the Room, or some affect Enemies. Here are highlights for each section. SEARCH for sections in this document by what is shown inside the () after each description.

** Selecting the GAME object will show the following tabs:
** Quest Creation: add function MakeQuest to GAME startScript. (see QUEST CREATION SECTION)
** NPCs Setup: add function AddNPCs to GAME startScript. (see NPCs SETUP SECTION)
** Map: allows for an image to be used as the Main Map, and can turn on Maps for each Room. (see MAP SECTION)
**
** In order to set up Enemies in a Room using RandomSpawn, or to set up a Map for the Room, the Room must inherit various types. The inherit type is listed at the start of each feature section, and must be added under the Attributes tab for the Room object, under the Inherited Types heading. All Rooms inherit type editor_room, for example.

** Selecting a ROOM object that has the correct inherit type will show the following tab(s):
** Enemy Spawns: add function SpawnForRoom to any ROOM, and it must also inherit tab_room.  (see SPAWNFORROOM SECTION, ENEMY SPAWNS SECTION, ENEMY SECTION)
** Room Map: contains a text field for the name of the Room map file with extension, e.g. room1Map.jpg. Map files should be in the same folder as the Game file.
**
****************************************************************************
**
**																			II. TROUBLESHOOTING
**
**  If something is showing up in the room where the player starts that should not be:
**  Check the GAME object feature tabs to make sure a feature is not still check marked that should not be. 
**  Check the Room inherit_type and remove any that do not belong.
**  Check the Room Scripts and remove RandomSpawn or SpawnForRoom.
**
****************************************************************************
**
**																			III. MAIN INSTALLATION
**																					1. Create a New Game using Quest.
**																					2. With the New Game open, add TE-RPG_Lib at the bottom Advanced -> Included Libraries ->ADD
**																					3. Save the New Game and Reload it.
**																					4. Save and Close the New Game.
**																					5. Open the New Game in a Text Editor.
**																					6. Follow the COPY INSTRUCTIONS below...
**
****************************************************************************
**
**																					COPY INSTRUCTIONS
**																						A. SETTING UP THE GAME OBJECT
**
** The following code must be added to the GAME object. Copy everything between the indicator lines, where it starts with <showscore type="boolean">false</showscore> and ends with </turnscript>. Then go to Part B.

v START COPYING v
	<showscore type="boolean">false</showscore>
    <showhealth />
    <showmoney type="boolean">false</showmoney>
    <feature_limitinventory />
    <feature_lightdark />
    <feature_asktell />
    <feature_advancedwearables />
    <appendobjectdescription />
    <underlinehyperlinks />
    <feature_pictureframe />
    <command_newline />
    <clearscreenonroomenter />
    <attr name="autodescription_description" type="int">2</attr>
    <attr name="autodescription_youcansee" type="int">3</attr>
    <attr name="autodescription_youcango" type="int">4</attr>
    <autodescription_youarein_newline />
    <autodescription_youcango_newline />
    <category>RPG</category>
    <defaultwebfont>Roboto</defaultwebfont>
    <marginscolour>Black</marginscolour>
    <bordercolour>Blue</bordercolour>
    <colourblend type="boolean">false</colourblend>
    <colourblendtop>DarkBlue</colourblendtop>
    <colourblendbottom>Black</colourblendbottom>
    <defaultbackground>Gray</defaultbackground>
    <setbackgroundopacity type="boolean">false</setbackgroundopacity>
    <defaultforeground>#c8f6ff</defaultforeground>
    <panestheme>Classic</panestheme>
    <classiclocation />
    <borderlesscursor type="boolean">false</borderlesscursor>
    <turnoffcompass />
    <turnoffplacesandobjects type="boolean">false</turnoffplacesandobjects>
    <showlocation type="boolean">false</showlocation>
    <subtitle type="string"></subtitle>
    <autodescription_description_newline />
    <autodisplayverbs type="boolean">false</autodisplayverbs>
	<povstatusattributes type="stringdictionary">
      <item>
        <key>SpellDamage</key>
        <value>S.Dam: !</value>
      </item>
      <item>
        <key>mp</key>
        <value>Mana: !</value>
      </item>
      <item>
        <key>stam</key>
        <value>Stam: !</value>
      </item>
      <item>
        <key>Pluck</key>
        <value>Luck: !</value>
      </item>
      <item>
        <key>dam</key>
        <value>W.Dam: !</value>
      </item>
      <item>
        <key>int</key>
        <value>Int: !</value>
      </item>
      <item>
        <key>dex</key>
        <value>Dex: !</value>
      </item>
      <item>
        <key>str</key>
        <value>Str: !</value>
      </item>
      <item>
        <key>gold</key>
        <value>Gold: !gp</value>
      </item>
    </povstatusattributes>
	<description><![CDATA[UO-The Expanse role-playing package for Quest Retro 5.8.0 (UO=The Expanse version).<br />To be installed as a single library, complete with:<br />NPCs to partner with the Player up to 3 (multiple types to choose from)<br />NPC Recruiter for the Player to hire NPCs.<br />NPC Quest Giver for complex quest creation.<br />Weapons with magical properties, up to 5.<br />Export/Import Weapons.<br />Quest generation, complete with Enemy to carry the questObject.<br />Enemies with stats.<br />Enemy_types tiered from enemy_base to enemy_type_base to enemy_type_spawn.<br />Random Spawn complete with tiered difficulty.<br />SpawnForRoom to have specific enemies spawn in Rooms, which utilizes 2 Editor Tabs on each Room.<br />Editor support with Tabs on the Game element, and each Room element with the _ attribute.<br />tab_room Object_Type with attributes that can be inherited on Rooms that will have Spawn and/or are Quest-related.<br />quest_room Object_Type with attributes that can be inherited on the GAME to use for Quest Creation only.       <br />npcSetup_room Object_Type with attributes that can be inherited on the GAME to partner with the player.<br />enemy_room Object_Type with attributes that can inherited on the Rooms that will have RandomSpawn.<br />map_room Object_Type with attributes that can be inherited on the GAME and the Rooms if there is a Main Map and Room Maps.<br />(see commented sections in the Library file for complete usage.)]]></description>
	<npclist type="stringlist" />
    <attr name="create_quest_" type="boolean">false</attr>
    <questName type="string"></questName>
    <attr name="_make_questObject" type="boolean">false</attr>
    <attr name="quest_alias" type="string"></attr>
    <attr name="quest_weight" type="int">0</attr>
    <attr name="quest_reward" type="int">0</attr>
    <complete type="boolean">false</complete>
    <questStateInactive>"Inactive"</questStateInactive>
    <questIncScoreValue type="int">100</questIncScoreValue>
    <questStateActive>"Active"</questStateActive>
    <questNext1>"Take the " + questObject.alias + "."</questNext1>
    <questNext2>"You took the " + questObject.alias + "."</questNext2>
    <questIncScoreString>"Quest: " + questObject.alias + "."</questIncScoreString>
    <questEndString>"You have successfully completed the quest!"</questEndString>
    <questStart>"Requested: 1 " + questObject.alias + "."</questStart>
    <questFinishString>"Successful"</questFinishString>
    <attr name="room_spawns_enemies" type="boolean">false</attr>
    <attr name="room_spawns_mongbat" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat1_" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat1_carries_quest_object_" type="boolean">false</attr>
    <attr name="spawns_quest_enemies" type="boolean">false</attr>
    <attr name="spawnType_mongbat" type="boolean">false</attr>
    <attr name="spawn_mongbat1" type="boolean">false</attr>
    <attr name="spawn_questObject" type="boolean">false</attr>
    <attr name="create_npcs_" type="boolean">false</attr>
    <fighter type="boolean">false</fighter>
    <archer type="boolean">false</archer>
    <mage type="boolean">false</mage>
    <rogue type="boolean">false</rogue>
    <attr name="fighter_fee" type="int">45</attr>
    <attr name="archer_fee" type="int">35</attr>
    <attr name="mage_fee" type="int">75</attr>
    <attr name="rogue_fee" type="int">95</attr>
    <npcs type="boolean">false</npcs>
    <map_yes />
    <attr name="map_main">rpgmain.png</attr>
    <map_room />
    <pov type="object">player</pov>
    <questObject type="object">questObject</questObject>
    <Carrier type="object">mongbat5</Carrier>
    <CarrierLocation type="object">crossroads1</CarrierLocation>
    <questRscript type="script">
    </questRscript>
    <onhealthzero type="script"><![CDATA[
      ClearScreen
      PrintCentered ("You have succumbed to your wounds. The stench of your decaying corpse should provide enough of a lure for the animals to properly dispose of your remains. Whatever you did, perhaps you should try again and not do that next time. Good luck, Adventurer!<br /><br />Thank you for playing TE-RPG! Brought to you by the mind of Raist. If you would like to play again, simply click the Menu button in the top-right corner and select Restart. You may also go back to the Main Map and find another quest.<br /><br />Here is your final score:")
      PrintFullScore
      finish
    ]]></onhealthzero>
	<start type="script">
	  InitScore (150, "Neophyte,Novice,Apprentice,Expert,Adept,Master,Grandmaster,Elder,Legendary", False)
      set (spellbook1, "uses", 35)
      if (GetBoolean(player, "not_set")) {
        msg ("You have a decision to make Adventurer; higher resistances against damage from enemies and the worldly elements, or augmented Words of Power (which causes more damage to enemies and can heal you for more points). Be careful in your choice, as the repercussions could cost your life.<br>")
        Ask ("Shall it be higher resists?<br>") {
          if ((result)) {
            g_higherres1
          }
          else {
            g_higherpow1
          }
          ShowRoomDescription
        }
      }
      else {
        if (GetBoolean(player, "reg_resist")) {
          g_regresist1
        }
        else if (GetBoolean(player, "reg_dam")) {
          g_regdam1
        }
        ShowRoomDescription
      }
      dictionary remove (game.povstatusattributes, "health")
      set (player, "maxhp", (game.pov.health))
      player.maxmp = (player.mp)
      player.maxstam = (player.stam)
      dictionary add (game.povstatusattributes, "health", "Health: !/"+(player.maxhp)+"")
      MakeQuest
      AddNPCs
      GameMap
    </start>
	<cover>TE-RPG_pub_1.png</cover>
	<object name="temp_file">
      <inherit name="editor_object" />
      <attr name="implementation_notes"><![CDATA[This object only exists as a "temporary file" object to store "global variables".<br /><br />It is used when calling the Ask() function, among others, because Ask() will not work with normal script variables.<br /><br />From the docs on the Ask() page:<br />Note: This function is KvTestingLib, and its script has no access to local variables.<br /><br />https://docs.textadventures.co.uk/quest/functions/ask.html]]></attr>
    </object>
    <turnscript name="mob_attack">
      <enabled />
      <script><![CDATA[
        // if (GetBoolean (game, "debugging")) {
          // Log ("[mob_attack] turn script running...")
          // }
        foreach (obj, FilterByAttribute (ScopeVisibleLivingEnemiesForRoom(game.pov.parent), "mob", 1)) {
          // if (GetBoolean (game, "debugging")) {
            // Log ("[mob_attack]: " + obj.name + " is alive and here.")
            // }
          obj.dam = (obj.dam + obj.max_dam)
          if (game.pov.health > 1) {
            // NPC_Mover
            if (obj.dam >= 1) {
              if (RandomChance(79)) {
                // if (GetBoolean (game, "debugging")) {
                  // Log ("[mob_attack]: dam over 0 and random chance 79...")
                  // }
                PrintCentered ("The " + obj.alias + " attacks you for: " + obj.dam + " damage!<br>")
                game.pov.health = (game.pov.health - obj.dam)
                set (obj, "dam", (1))
              }
              else {
                // if (GetBoolean (game, "debugging")) {
                  // Log ("[mob_attack]: dam over 0, but no random chance 79...")
                  // }
                PrintCentered ("The " + obj.alias + " attacks wildly and misses!<br>")
                set (obj, "dam", (1))
              }
            }
            else {
              // if (GetBoolean (game, "debugging")) {
                // Log ("[mob_attack]: dam less than 1...")
                // }
              PrintCentered ("The " + obj.alias + " attacks you for: " + obj.dam + " damage!<br>")
              game.pov.health = (game.pov.health - obj.dam)
              set (obj, "dam", (1))
            }
          }
          else {
            // if (GetBoolean (game, "debugging")) {
              // Log ("[mob_attack]: player health less than 1...")
              // }
            PrintCentered ("The " + obj.alias + " attacks you for: " + obj.dam + " damage!<br>")
            game.pov.health = (game.pov.health - obj.dam)
            set (obj, "dam", (1))
          }
        }
        // if (GetBoolean (game, "debugging")) {
          // Log ("[mob_attack] turn script ENDS")
          // }
      ]]></script>
    </turnscript>

^STOP COPYING^
****************************************************************************
**
**																			INFO
**
**  The Game startScript contains several components that are needed to make various features work, along with a few settings, and a rough outline on having a player choose a Class to play.
    -InitScore is a function that uses an Integer, a String, and a Bool. The integer defines the TOTAL Score for playing the Game through to the end. Also needed are some "rank names", and this does not have to be a long list. The default ranks are used in UO-The Expanse. The Bool simply indicates the player has not completed the Game yet.

    -By default the Player has a Spellbook, but it has "uses" and that means there is a limit to how many times the Player can cast a Spell that is not the Heal spell: in vas mani self. The Bool "not_set" is used to determine if the Player has selected a Class to play.

    -As you can see, the "Class" is a choice between Higher Resistances (the ability to prevent a certain type of damage, like Physical, Cold, Poison, Energy, and Fire, based on a Percentage.), or more Powerful Spells (causing a lot more damage than someone with higher resists). Low resists means the Player is taking a lot more damage from Enemy attacks too.

    -After the choice has been made, the next line removes the GAME Health attribute (if you look at the Game -> Features tab, you will see a checkbox for SCORE. This line removes that, so that it does not interfere with the Score output from the custom Score feature).

    -Next 3 lines are setting the values on the Player attributes for maxHP (game.pov.health), player.maxMP (player.mp, Mana Points, which are needed to cast Spells), player.maxStam (player.stam Stamina Points are needed to attack with weapons, not Spells.).

    -Then the Player attribute for Health is sent back to a dictionary to be displayed by those particular values. Notice player.maxhp on the right. The ! means the integer for Health.

    -MakeQuest is a function that is used to setup Quest Creation, which allows for a basic Quest with 1 questObject, 1 Enemy that carries it, and 1 Location (Room) the Enemy spawns. In order to use this function, a ROOM must inherit a quest_room, which adds 19 attributes that can be set using the Quest Creation tab on the Game.
    
    -AddNPCs is the function that is used to setup NPCs to join the player and assist during combat. The MAX should be 3, as anything more takes up too much space in the Game Panes, and the Game display.

    -GameMap is the function that clones the map_main value to any ROOM with the mapz_yes Flag (Bool = True). In order to use this function, a ROOM must inherit a map_room, which adds three attributes that can be set using the Map tabs.
********************************************************************************
**
**																					COPY INSTRUCTIONS CONT'D
**																						B. SETTING UP THE PLAYER OBJECT
**
** The following code must be added to the PLAYER object. Copy everything between the indicator lines, where it starts with <inroomdescription type="string"></inroomdescription> and ends with </object>. Then the installation is complete!

v START COPYING v
	<inroomdescription type="string"></inroomdescription>
      <look type="string"></look>
      <drop type="boolean">false</drop>
      <volume type="int">100</volume>
      <maxvolume type="int">150</maxvolume>
      <containerfullmessage>You cannot possibly carry anything more.</containerfullmessage>
      <linkcolour>Blue</linkcolour>
      <examine type="boolean">false</examine>
      <alias>player</alias>
      <alt type="stringlist">
        <value>Player</value>
        <value>you</value>
      </alt>
      <listalias>You</listalias>
      <humanoid />
      <mob type="boolean">false</mob>
      <physical type="int">0</physical>
      <cold type="int">0</cold>
      <fire type="int">0</fire>
      <poison type="int">0</poison>
      <energy type="int">0</energy>
      <statusattributes type="stringdictionary">
        <item>
          <key>dam</key>
          <value>"!"</value>
        </item>
        <item>
          <key>stam</key>
          <value>"!"</value>
        </item>
        <item>
          <key>mp</key>
          <value>"!"</value>
        </item>
        <item>
          <key>Pluck</key>
          <value>"!"</value>
        </item>
        <item>
          <key>SpellDamage</key>
          <value>"!"</value>
        </item>
        <item>
          <key>str</key>
          <value>"!"</value>
        </item>
        <item>
          <key>int</key>
          <value>"!"</value>
        </item>
        <item>
          <key>dex</key>
          <value>"!"</value>
        </item>
        <item>
          <key>gold</key>
          <value>"! gp"</value>
        </item>
      </statusattributes>
      <dam type="int">1</dam>
      <attr name="max_dam" type="int">0</attr>
      <reg_resist />
      <reg_dam />
      <not_set />
      <feature_startscript />
      <vamped type="boolean">false</vamped>
      <maxobjects type="int">10</maxobjects>
      <containermaxobjects>You cannot possibly carry anything more.</containermaxobjects>
      <gold type="int">12</gold>
      <AttackChance type="int">0</AttackChance>
      <BonusDex type="int">0</BonusDex>
      <BonusHits type="int">0</BonusHits>
      <BonusInt type="int">0</BonusInt>
      <BonusMana type="int">0</BonusMana>
      <BonusStam type="int">0</BonusStam>
      <BonusStr type="int">0</BonusStr>
      <Chaos type="int">0</Chaos>
      <DefendChance type="int">0</DefendChance>
      <Direct type="int">0</Direct>
      <Luck type="int">0</Luck>
      <NightSight type="int">0</NightSight>
      <ReflectPhysical type="int">0</ReflectPhysical>
      <RegenHits type="int">0</RegenHits>
      <RegenMana type="int">0</RegenMana>
      <RegenStam type="int">0</RegenStam>
      <ResistColdBonus type="int">0</ResistColdBonus>
      <ResistEnergyBonus type="int">0</ResistEnergyBonus>
      <ResistFireBonus type="int">0</ResistFireBonus>
      <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
      <ResistPoisonBonus type="int">0</ResistPoisonBonus>
      <SpellDamage type="int">0</SpellDamage>
      <WeaponDamage type="int">0</WeaponDamage>
      <HitColdArea type="int">0</HitColdArea>
      <HitDispel type="int">0</HitDispel>
      <HitEnergyArea type="int">0</HitEnergyArea>
      <HitFireArea type="int">0</HitFireArea>
      <HitFireball type="int">0</HitFireball>
      <HitHarm type="int">0</HitHarm>
      <HitLeechHits type="int">0</HitLeechHits>
      <HitLeechMana type="int">0</HitLeechMana>
      <HitLeechStam type="int">0</HitLeechStam>
      <HitLightning type="int">0</HitLightning>
      <HitLowerAttack type="int">0</HitLowerAttack>
      <HitLowerDefend type="int">0</HitLowerDefend>
      <HitMagicArrow type="int">0</HitMagicArrow>
      <HitPhysicalArea type="int">0</HitPhysicalArea>
      <ColdResist type="int">0</ColdResist>
      <PhysicalResist type="int">0</PhysicalResist>
      <FireResist type="int">0</FireResist>
      <PoisonResist type="int">0</PoisonResist>
      <EnergyResist type="int">0</EnergyResist>
      <PhysicalDam type="int">0</PhysicalDam>
      <ColdDam type="int">0</ColdDam>
      <FireDam type="int">0</FireDam>
      <PoisonDam type="int">0</PoisonDam>
      <EnergyDam type="int">0</EnergyDam>
      <DirectDam type="int">0</DirectDam>
      <ChaosDam type="int">0</ChaosDam>
      <HitChance type="double">30</HitChance>
      <LowerManaCost type="int">0</LowerManaCost>
      <mp type="int">0</mp>
      <stam type="int">0</stam>
      <Pluck type="int">0</Pluck>
      <health type="int">100</health>
      <maxphysical type="int">70</maxphysical>
      <maxfire type="int">70</maxfire>
      <maxcold type="int">70</maxcold>
      <maxpoison type="int">70</maxpoison>
      <maxenergy type="int">70</maxenergy>
      <str type="int">0</str>
      <int type="int">0</int>
      <dex type="int">0</dex>
      <maxhp type="int">0</maxhp>
      <maxstam type="int">0</maxstam>
      <maxmp type="int">0</maxmp>
      <defense type="int">0</defense>
      <npc1 type="boolean">false</npc1>
      <npc2 type="boolean">false</npc2>
      <npc3 type="boolean">false</npc3>
      <mlist type="stringlist" />
      <objectType type="int">1</objectType>
      <attr name="pov_look" type="script"><![CDATA[
        if (player.examine = True) {
          msg ("<br>You looked well-rested, but now that you've wasted precious time staring at yourself, you have grown tired.")
        }
        else if (player.examine = False) {
          msg ("<br>You are looking well-rested, for a change, and seemingly prepared for just about anything.")
          IncScore ("Look at yourself", 1)
          set (player, "examine", True)
        }
        else {
          msg ("<br>You are looking well-rested, for a change, and seemingly prepared for just about anything.")
        }
        resists_table
      ]]></attr>
      <attr name="_initialise_" type="script"><![CDATA[
        PrintCentered ("You found " + player.gold + " gold pieces in your coat pocket!")
        val = GetRandomInt(50,99)
        val2 = GetRandomInt(25,50)
        val3 = val + val2
        player.gold = player.gold + val3
        PrintCentered ("Looking in your other pocket, you find " + val3 + " gold pieces!")
        if (player.gold < 100) {
          PrintCentered ("You have a total of: " + player.gold + " gold pieces!")
        }
        else {
          PrintCentered ("You have a total of:  " + player.gold + " gold pieces!")
        }
      ]]></attr>
      <changedphysical type="script">
      </changedphysical>
      <changedfire type="script">
      </changedfire>
      <changedcold type="script">
      </changedcold>
      <changedpoi type="script">
      </changedpoi>
      <changedener type="script">
      </changedener>
      <changedparent type="script">
        if (game.pov = this) {
          if (IsDefined("oldvalue")) {
            OnEnterRoom (oldvalue)
          }
          else {
            OnEnterRoom (null)
          }
          if (game.gridmap) {
            MergePOVCoordinates
          }
        }
        this.hasbeenmoved = true
      </changedparent>
      <ask type="scriptdictionary" />
    </object>
    <exit alias="north" to="crossroads1">
      <inherit name="northdirection" />
    </exit>
    <object name="spellbook1">
      <inherit name="editor_object" />
      <alias>Spellbook</alias>
      <inroomdescription>A thick, spined leather-bound, tome.</inroomdescription>
      <uses type="int">150</uses>
      <alt type="stringlist">
        <value>spellbook</value>
        <value>spbk</value>
        <value>spellbk</value>
        <value>tome</value>
      </alt>
      <listalias>Spellbook</listalias>
      <take />
      <takemsg>Knowing it would not be wise to leave such a powerful tool behind, you tuck the spellbook back into your pouch.</takemsg>
      <dropmsg>You cast aside the most powerful tool you have been given, as if it were a peanut shell.</dropmsg>
      <volume type="int">3</volume>
      <feature_usegive />
      <use type="boolean">false</use>
      <pic>sp_book1.png</pic>
      <usedefaultprefix />
      <prefix type="string"></prefix>
      <look type="script">
        msg ("a thick, spined leather-bound tome with " + spellbook1.uses + " Charges remaining.")
        // Picture ("sp_book1.png")
      </look>
      <ontake type="script">
        MoveObject (spellbook1, player)
      </ontake>
      <selfuseanything type="script">
        PrintCentered ("That will not work.")
      </selfuseanything>
    </object>

^ STOP COPYING^
********************************************************************************
**
**																				INFO
** The Player initialise contains a bit of code to give the Player some starting Gold with random values. You can change the ranges in val and val2.
**
********************************************************************************
**
**																				MAIN INSTALLATION COMPLETE
**
********************************************************************************
**
**																			IV. APPENDICES 1-14
**																				1. COMMANDS AND VERBS
**																				2. RANDOMSPAWN SECTION
**																				3. SPAWNFORROOM SECTION
**																				4. FEATURE CODE SECTIONS
**																					A. ENEMY SPAWNS TAB SECTION (type)
**																					B. ENEMY SELECTION SECTION (specific)
**																						i. MONGBAT SECTION
**																						ii. ETTIN SECTION
**																						iii. OGRE SECTION
**																						iv. ORC SECTION
**																				5. SAMPLE ROOM: CROSSROADS1
**																				6. ENEMY ROOM: old_chamber
**																				7. QUEST CREATION SECTION with QUEST ENEMY
**																				8. NPCs SETUP SECTION
**																				9. BEGINNING OF NPCs ROOM: npc_room
**																				10. MAP SECTION
**																				11. WEAPON SECTION
**																				12. BASE TYPES SECTION (NPCs, Weapons, Enemies, Rooms)
**																				13. FUNCTIONS SECTION
**																				14. TIMERS SECTION
**
********************************************************************************
**																				1. COMMANDS AND VERBS
**
-->
  <command name="pretty_inventory_cmd">
    <pattern type="string">^i$|^inv$|^inventory$</pattern>
    <script>
      if (GetBoolean(game, "no_pretty_inventory")) {
        do (inventory, "script")
      }
      else {
        list = FormatObjectList(Template("CarryingListHeader"), game.pov, Template("And"), ".")
        if (list = "") {
          msg (Template("NotCarryingAnything"))
        }
        else {
          PrintPrettyInventory
        }
      }
    </script>
  </command>
  <command name="attack_it_with">
    <pattern>attack #object1# with #object2#</pattern>
    <script>
      msg ("object1:")
      msg (object1)
      msg ("object2:")
      msg (object2)
    </script>
  </command>
  <command name="vas_flam">
    <pattern>vas flam #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">1</attr>
    <attr name="max_dam" type="int">1</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (player.mp > 0) {
          if (object.mob = 1) {
            if (GetInt(object, "fire") < 70) {
              if (GetInt(spellbook1, "uses") > 1) {
                if (RandomChance(81)) {
                  sdam = (player.fire)/100
                  dam = GetRandomInt (7,10)
                  sdam = (player.SpellDamage)/(sdam+dam)
                  sdam = ToInt(ToString(sdam))
                  vas_flam.max_dam = (sdam)
                  vas_flam.sp_dam = (vas_flam.sp_dam + vas_flam.max_dam + player.SpellDamage)
                  oresist = ((vas_flam.sp_dam) * (object.fire)) - (object.fire)
                  resisted = (oresist) / 100
                  ouchies = (vas_flam.sp_dam) - ToInt(ToString(resisted))
                  if (GetInt(object, "current_hp") <= vas_flam.sp_dam) {
                    set (object, "status", "Passed beyond the Veil.")
                    PrintCentered ("The " + object.alias + " is crushed by an enormous fireball.")
                    DecreaseObjectCounter (spellbook1, "uses")
                    IncScore ("Killed " + object.alias + " with fireball.", 5)
                    set (object, "alive", False)
                    set (object, "current_hp", 0)
                    Gen_Loot (object)
                    list remove (game.pov.parent.mlist, object.name)
                    player.mp = (player.mp) - (sdam)
                  }
                  else if (GetInt(object, "current_hp") > vas_flam.sp_dam) {
                    set (object, "status", "Pulverized and Crispy!")
                    PrintCentered ("Your fireball slams into " + object.alias + "'s and does " + (ouchies) + " damage!")
                    object.current_hp = (object.current_hp) - (ouchies)
                    msg ("The poor " + object.alias + " has been injured and only has " + object.current_hp + " health remaining!")
                    player.mp = (player.mp) - (sdam)
                  }
                  ShowRoomDescription
                  vas_flam.sp_dam = 1
                }
                else {
                  PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
                }
              }
              else if (GetInt(spellbook1, "uses") = 0) {
                PrintCentered ("Your spellbook cannot be used any longer and will need to be replaced.")
              }
            }
            else if (GetInt(object, "fire") >= 70) {
              PrintCentered ("The " + object.alias + " seems to chuckle at you, but soon gets even more angry and attacks wildly.")
              player.mp = (player.mp) - 4
            }
            else {
              PrintCentered ("The spell fizzled.")
              player.mp = (player.mp) - 1
            }
          }
          else {
            PrintCentered ("You cannot use this magic in that way.")
          }
        }
        else {
          msg ("Oh no, you are out of Mana! You cannot cast any spells!")
        }
      }
      else {
        PrintCentered ("You are not carrying your spellbook.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(12,32)
    </attr>
  </command>
  <command name="corp_por">
    <pattern>corp por #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">1</attr>
    <attr name="max_dam" type="int">1</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (player.mp > 0) {
          if (object.mob = 1) {
            if (GetInt(object, "energy") < 70) {
              if (GetInt(spellbook1, "uses") > 0) {
                if (RandomChance(89)) {
                  sdam = (player.energy)/100
                  dam = GetRandomInt (7,10)
                  sdam = (player.SpellDamage)/(sdam+dam)
                  sdam = ToInt(ToString(sdam))
                  corp_por.max_dam = (sdam)
                  corp_por.sp_dam = (corp_por.sp_dam + corp_por.max_dam + player.SpellDamage)
                  oresist = ((corp_por.sp_dam) * (object.energy)) - (object.energy)
                  resisted = (oresist) / 100
                  ouchies = (corp_por.sp_dam) - ToInt(ToString(resisted))
                  if (GetInt(object, "current_hp") <= corp_por.sp_dam) {
                    set (object, "status", "Passed beyond the Veil...")
                    DecreaseObjectCounter (spellbook1, "uses")
                    PrintCentered ("Your energy bolt collides with " + object.alias + " and does " + corp_por.sp_dam + " damage!")
                    PrintCentered ("The " + object.alias + " jitters up and down as sparks crackle and pop from inside it's body. It soon explodes with a static-sounding, squishy pop.")
                    IncScore ("Killed " + object.alias + " with an energy bolt.", 5)
                    set (object, "alive", False)
                    set (object, "current_hp", 0)
                    Gen_Loot (object)
                    list remove (game.pov.parent.mlist, object.name)
                    player.mp = (player.mp) - (sdam)
                  }
                  else if (GetInt(object, "current_hp") > corp_por.sp_dam) {
                    set (object, "status", "Staticky from the bolt!")
                    PrintCentered ("Your energy bolt collides with " + object.alias + " and does " + (ouchies) + " damage!")
                    object.current_hp = (object.current_hp) - (ouchies)
                    msg ("The poor " + object.alias + " has been injured and only has " + object.current_hp + " health remaining!")
                    player.mp = (player.mp) - (sdam)
                  }
                  ShowRoomDescription
                  corp_por.sp_dam = 1
                }
                else {
                  ShowRoomDescription
                  PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
                }
              }
              else if (GetInt(spellbook1, "uses") = 0) {
                PrintCentered ("Your spellbook cannot be used any longer and will need to be replaced.")
              }
            }
            else if (GetInt(object, "energy") >= 70) {
              PrintCentered ("Your energy bolt slams into the " + object.alias + ", but appears to do nothing and they are now taunting you viciously.")
              player.mp = (player.mp) - 4
            }
            else {
              PrintCentered ("The spell fizzled.")
              player.mp = (player.mp) - 1
            }
          }
          else {
            PrintCentered ("You cannot use this magic in that way.")
          }
        }
        else {
          msg ("Oh no, you are out of Mana! You cannot cast any spells!")
        }
      }
      else {
        PrintCentered ("You are not carrying your spellbook.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(51,56)
    </attr>
  </command>
  <command name="in_vas_mani">
    <pattern>in vas mani #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">1</attr>
    <attr name="max_dam" type="int">1</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (RandomChance(98)) {
          if (player.health = 100) {
            PrintCentered ("You are already at full health.")
          }
          else if (GetInt(player, "health") <= 99) {
            in_vas_mani.max_dam = GetRandomInt(24,45)
            in_vas_mani.max_dam = (in_vas_mani.max_dam + game.pov.dam)
            in_vas_mani.sp_dam = (in_vas_mani.sp_dam + in_vas_mani.max_dam)
            game.pov.health = (game.pov.health + in_vas_mani.sp_dam)
            DecreaseObjectCounter (spellbook1, "uses")
            if ((game.pov.health + in_vas_mani.sp_dam) >= 100) {
              msg ("You are fully healed now.")
              set (player, "health", 100)
              player.mp = (player.mp) - 2
            }
            else if ((game.pov.health + in_vas_mani.sp_dam) < 100) {
              PrintCentered ("You managed to heal yourself by " + in_vas_mani.sp_dam + " points!")
              player.mp = (player.mp) - 4
            }
            in_vas_mani.sp_dam = (1)
          }
        }
        else {
          PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
          player.mp = (player.mp) - 1
        }
      }
      else if (not Got(spellbook1)) {
        PrintCentered ("You are not carrying your spellbook anymore.")
      }
      else {
        PrintCentered ("That did not work.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(21,45)
    </attr>
  </command>
  <command name="kal_vas_vlam">
    <pattern>kal vas vlam #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">1</attr>
    <attr name="max_dam" type="int">1</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (player.mp > 0) {
          if (object.mob = 1) {
            if (GetInt(object, "fire") < 80) {
              if (GetInt(spellbook1, "uses") > 1) {
                if (RandomChance(81)) {
                  sdam = (player.energy)/100
                  dam = GetRandomInt (7,10)
                  sdam = (player.SpellDamage)/(sdam+dam)
                  sdam = ToInt(ToString(sdam))
                  kal_vas_vlam.max_dam = (sdam)
                  kal_vas_vlam.sp_dam = (kal_vas_vlam.sp_dam + kal_vas_vlam.max_dam + player.SpellDamage)
                  oresist = ((kal_vas_vlam.sp_dam) * (object.energy)) - (object.energy)
                  resisted = (oresist) / 100
                  ouchies = (kal_vas_vlam.sp_dam) - ToInt(ToString(resisted))
                  if (GetInt(object, "current_hp") <= kal_vas_vlam.sp_dam) {
                    set (object, "status", "Passed beyond the Veil.")
                    PrintCentered ("The " + object.alias + " is engulfed in flames and charred almost instantly.")
                    DecreaseObjectCounter (spellbook1, "uses")
                    IncScore ("Killed " + object.alias + " with flamestrike.", 5)
                    set (object, "alive", False)
                    set (object, "current_hp", 0)
                    Gen_Loot (object)
                    list remove (game.pov.parent.mlist, object.name)
                    player.mp = (player.mp) - (sdam)
                  }
                  else if (GetInt(object, "current_hp") > kal_vas_vlam.sp_dam) {
                    set (object, "status", "Seared around the edges!")
                    PrintCentered ("Your flamestrike causes searing flames that burn " + object.alias + "'s skin and does " + (ouchies) + " damage!")
                    object.current_hp = (object.current_hp) - (ouchies)
                    msg ("The poor " + object.alias + " has been injured and only has " + object.current_hp + " health remaining!")
                    player.mp = (player.mp) - (sdam)
                  }
                  ShowRoomDescription
                  kal_vas_vlam.sp_dam = 1
                }
                else {
                  PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
                  player.mp = (player.mp) - 1
                }
              }
              else if (GetInt(spellbook1, "uses") = 0) {
                PrintCentered ("Your spellbook cannot be used any longer and will need to be replaced.")
              }
            }
            else if (GetInt(object, "fire") >= 80) {
              PrintCentered ("The " + object.alias + " seems to chuckle at you, but soon gets even more angry and attacks wildly.")
              player.mp = (player.mp) - 4
            }
            else {
              PrintCentered ("The spell fizzled.")
              player.mp = (player.mp) - 1
            }
          }
          else {
            PrintCentered ("You cannot use this magic in that way.")
          }
        }
        else {
          msg ("Oh no, you are out of Mana! You cannot cast any spells!")
        }
      }
      else {
        PrintCentered ("You are not carrying your spellbook.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(64,69)
    </attr>
  </command>
  <command name="an_mani">
    <pattern>an mani #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">1</attr>
    <attr name="max_dam" type="int">1</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (player.mp > 0) {
          if (object.mob = 1) {
            if (GetInt(object, "cold") < 70) {
              if (GetInt(spellbook1, "uses") > 1) {
                if (RandomChance(81)) {
                  sdam = (player.energy)/100
                  dam = GetRandomInt (7,10)
                  sdam = (player.SpellDamage)/(sdam+dam)
                  sdam = ToInt(ToString(sdam))
                  an_mani.max_dam = (sdam)
                  an_mani.sp_dam = (an_mani.sp_dam + an_mani.max_dam + player.SpellDamage)
                  oresist = ((an_mani.sp_dam) * (object.energy)) - (object.energy)
                  resisted = (oresist) / 100
                  ouchies = (an_mani.sp_dam) - ToInt(ToString(resisted))
                  if (GetInt(object, "current_hp") <= an_mani.sp_dam) {
                    set (object, "status", "Passed beyond the Veil.")
                    PrintCentered ("The " + object.alias + " has literally been harmed to death.")
                    DecreaseObjectCounter (spellbook1, "uses")
                    IncScore ("Killed " + object.alias + " with harm.", 5)
                    set (object, "alive", False)
                    set (object, "current_hp", 0)
                    Gen_Loot (object)
                    list remove (game.pov.parent.mlist, object.name)
                    player.mp = (player.mp) - (sdam)
                  }
                  else if (GetInt(object, "current_hp") > an_mani.sp_dam) {
                    set (object, "status", "Cold on the inside!")
                    PrintCentered ("Your harm causes significant pain to " + object.alias + " and does " + (ouchies) + " damage!")
                    object.current_hp = (object.current_hp) - (ouchies)
                    msg ("The poor " + object.alias + " has been injured and only has " + object.current_hp + " health remaining!")
                    player.mp = (player.mp) - (sdam)
                  }
                  ShowRoomDescription
                  an_mani.sp_dam = 1
                }
                else {
                  PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
                  player.mp = (player.mp) - 1
                }
              }
              else if (GetInt(spellbook1, "uses") = 0) {
                PrintCentered ("Your spellbook cannot be used any longer and will need to be replaced.")
              }
            }
            else if (GetInt(object, "cold") >= 70) {
              PrintCentered ("The " + object.alias + " seems to chuckle at you, but soon gets even more angry and attacks wildly.")
              player.mp = (player.mp) - 4
            }
            else {
              PrintCentered ("The spell fizzled.")
              player.mp = (player.mp) - 1
            }
          }
          else {
            PrintCentered ("You cannot use this magic in that way.")
          }
        }
        else {
          msg ("Oh no, you are out of Mana! You cannot cast any spells!")
        }
      }
      else {
        PrintCentered ("You are not carrying your spellbook.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(64,69)
    </attr>
  </command>
  <command name="vas_ort_flam">
    <pattern>vas ort flam #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">1</attr>
    <attr name="max_dam" type="int">1</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (player.mp > 0) {
          if (object.mob = 1) {
            if (GetInt(object, "fire") < 70) {
              if (GetInt(spellbook1, "uses") > 1) {
                if (RandomChance(81)) {
                  sdam = (player.fire)/100
                  dam = GetRandomInt (7,10)
                  sdam = (player.SpellDamage)/(sdam+dam)
                  sdam = ToInt(ToString(sdam))
                  vas_ort_flam.max_dam = (sdam)
                  vas_ort_flam.sp_dam = (vas_ort_flam.sp_dam + vas_ort_flam.max_dam + player.SpellDamage)
                  oresist = ((vas_ort_flam.sp_dam) * (object.energy)) - (object.energy)
                  resisted = (oresist) / 100
                  ouchies = (vas_ort_flam.sp_dam) - ToInt(ToString(resisted))
                  if (GetInt(object, "current_hp") <= vas_ort_flam.sp_dam) {
                    set (object, "status", "Passed beyond the Veil.")
                    PrintCentered ("The " + object.alias + "'s body has exploded into millions of pieces.")
                    DecreaseObjectCounter (spellbook1, "uses")
                    IncScore ("Killed " + object.alias + " with explosion.", 5)
                    set (object, "alive", False)
                    set (object, "current_hp", 0)
                    Gen_Loot (object)
                    list remove (game.pov.parent.mlist, object.name)
                    player.mp = (player.mp) - (sdam)
                  }
                  else if (GetInt(object, "current_hp") > vas_ort_flam.sp_dam) {
                    set (object, "status", "Affected by the smoke!")
                    PrintCentered ("Your explosion causes massive agony to " + object.alias + " and does " + (ouchies) + " damage!")
                    object.current_hp = (object.current_hp) - (ouchies)
                    msg ("The poor " + object.alias + " has been injured and only has " + object.current_hp + " health remaining!")
                    player.mp = (player.mp) - (sdam)
                  }
                  ShowRoomDescription
                  vas_ort_flam.sp_dam = 1
                }
                else {
                  PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
                  player.mp = (player.mp) - 1
                }
              }
              else if (GetInt(spellbook1, "uses") = 0) {
                PrintCentered ("Your spellbook cannot be used any longer and will need to be replaced.")
              }
            }
            else if (GetInt(object, "fire") >= 70) {
              PrintCentered ("The " + object.alias + " seems to chuckle at you, but soon gets even more angry and attacks wildly.")
              player.mp = (player.mp) - 4
            }
            else {
              PrintCentered ("The spell fizzled.")
              player.mp = (player.mp) - 1
            }
          }
          else {
            PrintCentered ("You cannot use this magic in that way.")
          }
        }
        else {
          msg ("Oh no, you are out of Mana! You cannot cast any spells!")
        }
      }
      else {
        PrintCentered ("You are not carrying your spellbook.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(51,56)
    </attr>
  </command>
  <command name="por_ort_grav">
    <pattern>por ort grav #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">1</attr>
    <attr name="max_dam" type="int">1</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (player.mp > 0) {
          if (object.mob = 1) {
            if (GetInt(object, "energy") < 70) {
              if (GetInt(spellbook1, "uses") > 1) {
                if (RandomChance(81)) {
                  sdam = (player.energy)/100
                  dam = GetRandomInt (7,10)
                  sdam = (player.SpellDamage)/(sdam+dam)
                  sdam = ToInt(ToString(sdam))
                  por_ort_grav.max_dam = (sdam)
                  por_ort_grav.sp_dam = (por_ort_grav.sp_dam + por_ort_grav.max_dam + player.SpellDamage)
                  oresist = ((por_ort_grav.sp_dam) * (object.energy)) - (object.energy)
                  resisted = (oresist) / 100
                  ouchies = (por_ort_grav.sp_dam) - ToInt(ToString(resisted))
                  if (GetInt(object, "current_hp") <= por_ort_grav.sp_dam) {
                    set (object, "status", "Passed beyond the Veil.")
                    PrintCentered ("The " + object.alias + " is electrocuted by your lightning.")
                    DecreaseObjectCounter (spellbook1, "uses")
                    IncScore ("Killed " + object.alias + " with lightning.", 5)
                    set (object, "alive", False)
                    set (object, "current_hp", 0)
                    Gen_Loot (object)
                    list remove (game.pov.parent.mlist, object.name)
                    player.mp = (player.mp) - (sdam)
                  }
                  else if (GetInt(object, "current_hp") > por_ort_grav.sp_dam) {
                    set (object, "status", "Electrified Personality!")
                    PrintCentered ("Your lightning causes intense discomfort to " + object.alias + " and does " + (ouchies) + " damage!")
                    object.current_hp = (object.current_hp) - (ouchies)
                    msg ("The poor " + object.alias + " has been injured and only has " + object.current_hp + " health remaining!")
                    player.mp = (player.mp) - (sdam)
                  }
                  ShowRoomDescription
                  por_ort_grav.sp_dam = 1
                }
                else {
                  PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
                  player.mp = (player.mp) - 1
                }
              }
              else if (GetInt(spellbook1, "uses") = 0) {
                PrintCentered ("Your spellbook cannot be used any longer and will need to be replaced.")
              }
            }
            else if (GetInt(object, "energy") >= 70) {
              PrintCentered ("The " + object.alias + " seems to chuckle at you, but soon gets even more angry and attacks wildly.")
              player.mp = (player.mp) - 4
            }
            else {
              PrintCentered ("The spell fizzled.")
              player.mp = (player.mp) - 1
            }
          }
          else {
            PrintCentered ("You cannot use this magic in that way.")
          }
        }
        else {
          msg ("Oh no, you are out of Mana! You cannot cast any spells!")
        }
      }
      else {
        PrintCentered ("You are not carrying your spellbook.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(30,34)
    </attr>
  </command>
  <command name="in_por_ylem">
    <pattern>in por ylem #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">1</attr>
    <attr name="max_dam" type="int">1</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (player.mp > 0) {
          if (object.mob = 1) {
            if (GetInt(object, "fire") < 70) {
              if (GetInt(spellbook1, "uses") > 1) {
                if (RandomChance(81)) {
                  sdam = (player.fire)/100
                  dam = GetRandomInt (7,10)
                  sdam = (player.SpellDamage)/(sdam+dam)
                  sdam = ToInt(ToString(sdam))
                  in_por_ylem.max_dam = (sdam)
                  in_por_ylem.sp_dam = (in_por_ylem.sp_dam + in_por_ylem.max_dam + player.SpellDamage)
                  oresist = ((in_por_ylem.sp_dam) * (object.energy)) - (object.energy)
                  resisted = (oresist) / 100
                  ouchies = (in_por_ylem.sp_dam) - ToInt(ToString(resisted))
                  if (GetInt(object, "current_hp") <= in_por_ylem.sp_dam) {
                    set (object, "status", "Passed beyond the Veil.")
                    PrintCentered ("The " + object.alias + " is skewered by your Magic Arrow.")
                    DecreaseObjectCounter (spellbook1, "uses")
                    IncScore ("Killed " + object.alias + " with Magic Arrow.", 5)
                    set (object, "alive", False)
                    set (object, "current_hp", 0)
                    Gen_Loot (object)
                    list remove (game.pov.parent.mlist, object.name)
                    player.mp = (player.mp) - (sdam)
                  }
                  else if (GetInt(object, "current_hp") > in_por_ylem.sp_dam) {
                    set (object, "status", "Bleeding...dramatically!")
                    PrintCentered ("Your Magic Arrow deeply wounds " + object.alias + " and does " + (ouchies) + " damage!")
                    object.current_hp = (object.current_hp) - (ouchies)
                    msg ("The poor " + object.alias + " has been injured and only has " + object.current_hp + " health remaining!")
                    player.mp = (player.mp) - (sdam)
                  }
                  ShowRoomDescription
                  in_por_ylem.sp_dam = 1
                }
                else {
                  PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
                  player.mp = (player.mp) - 1
                }
              }
              else if (GetInt(spellbook1, "uses") = 0) {
                PrintCentered ("Your spellbook cannot be used any longer and will need to be replaced.")
              }
            }
            else if (GetInt(object, "fire") >= 70) {
              PrintCentered ("The " + object.alias + " seems to chuckle at you, but soon gets even more angry and attacks wildly.")
              player.mp = (player.mp) - 4
            }
            else {
              PrintCentered ("The spell fizzled.")
              player.mp = (player.mp) - 1
            }
          }
          else {
            PrintCentered ("You cannot use this magic in that way.")
          }
        }
        else {
          msg ("Oh no, you are out of Mana! You cannot cast any spells!")
        }
      }
      else {
        PrintCentered ("You are not carrying your spellbook.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(14,18)
    </attr>
  </command>
  <command name="por_corp_wis">
    <pattern>por corp wis #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">1</attr>
    <attr name="max_dam" type="int">1</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (player.mp > 0) {
          if (object.mob = 1) {
            if (GetInt(object, "cold") < 70) {
              if (GetInt(spellbook1, "uses") > 1) {
                if (RandomChance(81)) {
                  sdam = (player.fire)/100
                  dam = GetRandomInt (7,10)
                  sdam = (player.SpellDamage)/(sdam+dam)
                  sdam = ToInt(ToString(sdam))
                  por_corp_wis.max_dam = (sdam)
                  por_corp_wis.sp_dam = (por_corp_wis.sp_dam + por_corp_wis.max_dam + player.SpellDamage)
                  oresist = ((por_corp_wis.sp_dam) * (object.energy)) - (object.energy)
                  resisted = (oresist) / 100
                  ouchies = (por_corp_wis.sp_dam) - ToInt(ToString(resisted))
                  if (GetInt(object, "current_hp") <= por_corp_wis.sp_dam) {
                    set (object, "status", "Passed beyond the Veil.")
                    PrintCentered ("The " + object.alias + "'s brain is frozen solid and it falls over dead.")
                    DecreaseObjectCounter (spellbook1, "uses")
                    IncScore ("Killed " + object.alias + " with mind blast.", 5)
                    set (object, "alive", False)
                    set (object, "current_hp", 0)
                    Gen_Loot (object)
                    list remove (game.pov.parent.mlist, object.name)
                    player.mp = (player.mp) - (sdam)
                  }
                  else if (GetInt(object, "current_hp") > por_corp_wis.sp_dam) {
                    set (object, "status", "Frosted, but Alive.")
                    PrintCentered ("Your mind blast causes painful cold to penetrate into " + object.alias + "'s mind and does " + (ouchies) + " damage!")
                    object.current_hp = (object.current_hp) - (ouchies)
                    msg ("The poor " + object.alias + " has been injured and only has " + object.current_hp + " health remaining!")
                    player.mp = (player.mp) - (sdam)
                  }
                  ShowRoomDescription
                  por_corp_wis.sp_dam = 1
                }
                else {
                  PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
                  player.mp = (player.mp) - 1
                }
              }
              else if (GetInt(spellbook1, "uses") = 0) {
                PrintCentered ("Your spellbook cannot be used any longer and will need to be replaced.")
              }
            }
            else if (GetInt(object, "cold") >= 70) {
              PrintCentered ("The " + object.alias + " seems to chuckle at you, but soon gets even more angry and attacks wildly.")
              player.mp = (player.mp) - 4
            }
            else {
              PrintCentered ("The spell fizzled.")
              player.mp = (player.mp) - 1
            }
          }
          else {
            PrintCentered ("You cannot use this magic in that way.")
          }
        }
        else {
          msg ("Oh no, you are out of Mana! You cannot cast any spells!")
        }
      }
      else {
        PrintCentered ("You are not carrying your spellbook.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(40,42)
    </attr>
  </command>
  <command name="in_nox">
    <pattern>in nox #object#</pattern>
    <unresolved>That did not work.</unresolved>
    <attr name="sp_dam" type="int">0</attr>
    <attr name="max_dam" type="int">0</attr>
    <script><![CDATA[
      if (Got(spellbook1)) {
        if (player.mp > 0) {
          if (object.mob = 1) {
            if (GetBoolean(object, "not_poisoned")) {
              if (GetInt(object, "poison") < 80) {
                if (GetInt(spellbook1, "uses") > 0) {
                  if (RandomChance(85)) {
                    set (object, "status", "Terribly Poisoned!")
                    PrintCentered ("The " + object.alias + " turns a sickly hue as your poison stretches fetid tendrils throughout it's body.")
                    DecreaseObjectCounter (spellbook1, "uses")
                    set (object, "not_poisoned", False)
                    set (object, "poisoned", True)
                    EnableTimer (poison_tick1)
                    ShowRoomDescription
                    player.mp = (player.mp) - (player.SpellDamage)
                  }
                  else {
                    PrintCentered ("A terrible event has occurred and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...")
                    player.mp = (player.mp) - 1
                  }
                }
                else if (GetInt(spellbook1, "uses") = 0) {
                  PrintCentered ("Your spellbook cannot be used any longer and will need to be replaced.")
                }
              }
              else if (GetInt(object, "poison") > 81) {
                PrintCentered ("Your poison leeches into " + object.alias + ", but appears to do nothing and they are now taunting you viciously.")
                player.mp = (player.mp) - 4
              }
              else {
                PrintCentered ("The spell fizzled.")
                player.mp = (player.mp) - 1
              }
            }
            else if (not GetBoolean(object, "not_poisoned")) {
              if (GetBoolean(object, "poisoned")) {
                PrintCentered ("That is already poisoned!")
                set (object, "status", "Still Poisoned!")
              }
            }
            else {
              PrintCentered ("Something went completely and totally wrong.")
            }
          }
          else {
            PrintCentered ("You cannot use this magic in that way.")
          }
        }
        else {
          msg ("Oh no, you are out of Mana! You cannot cast any spells!")
        }
      }
      else {
        PrintCentered ("You are not carrying your spellbook.")
      }
    ]]></script>
    <attr name="maximum_dam" type="script">
      max_dam = GetRandomInt(12,32)
    </attr>
  </command>
  <command>
    <pattern>quest #object#</pattern>
    <scope>quests</scope>
    <script>
      if (GetObject("quests") = null) {
        create ("quests")
      }
      if (not object.parent = quests) {
        msg ("That's not a quest.")
      }
      msg ("Quest: {i:" + object.questName + "}")
      foreach (s, object.history) {
        msg (Spaces(4) + s)
      }
      msg (Spaces(4) + object.status)
      msg (" ")
    </script>
  </command>
  <command>
    <pattern>quests;q;current quests;cq</pattern>
    <script>
      msg ("Active Quests:")
      QuestReport ("Active")
    </script>
  </command>
  <command>
    <pattern>successes;successful quests;sq</pattern>
    <script>
      msg ("Completed Quests:")
      QuestReport ("Successful")
    </script>
  </command>
  <command>
    <pattern>fails;failures;failed quests;fq</pattern>
    <script>
      msg ("Failed Quests:")
      QuestReport ("Failed")
    </script>
  </command>
  <command name="quests_te_cmd">
    <pattern>quests;q;current quests;cq</pattern>
    <script>
      msg ("Active Quests:")
      QuestReport ("Active")
    </script>
  </command>
  <command name="map">
    <pattern>map</pattern>
    <script><![CDATA[
      loc = game.pov.parent
      desc = ""
      if (game.autodescription_youcango > 0) {
        exits = FormatExitList(game.pov.parent.exitslistprefix, ScopeUnlockedExitsForRoom(game.pov.parent), Template("Or"), ".")
        if (game.autodescription_youcango_newline) {
          desc = desc + "<br>"
        }
        exitmsg = ProcessText(desc + exits)
      }
      if (GetBoolean(loc, "mapz_yes")) {
        msg ("<div class=\"map\"> " + GetImgDivWithFallback(game.map_main) + "<br> " + GetImgDivWithFallback(loc.map_zoom) + "<br> " + GetDisplayName(game.pov.parent) + "<br>The little green person, is you and not some alien.<br>" + exitmsg + "</div>")
      }
      else if (not GetBoolean(loc, "mapz_yes")) {
        msg ("<div class=\"map\"> " + GetImgDivWithFallback(game.map_main) + "<br> " + GetDisplayName(game.pov.parent) + "<br>The little green person, is you and not some alien.<br>" + exitmsg + "</div>")
      }
      else {
        msg ("There is no map available for this place!")
      }
    ]]></script>
  </command>
  <command name="sell">
    <pattern>sell #object#</pattern>
    <unresolved>You want to sell what?</unresolved>
    <scope>inventory</scope>
    <script>
      if (not HasAttribute(game.pov.parent, "supply1")) {
        msg ("You can't sell stuff here.")
      }
      else if (not object.parent = game.pov) {
        msg ("You're not carrying " + object.article + ".")
      }
      else {
        player.gold = player.gold + SellingPrice(object)
        if (GetBoolean(object, "cloneme")) {
          RemoveObject (object)
        }
        else {
          object.parent = game.pov.parent.supply1
          SetupMerch (object)
        }
        msg ("You sell " + object.article + " for " + SellingPrice(object) + ".")
      }
    </script>
  </command>
  <command name="wear">
    <pattern>put #object# on; wear #object#; put on #object#; don #object#; wear #object#</pattern>
    <scope>inventory</scope>
    <multipleobjects type="script">
      game.pov.currentcommandpendingobjectscope = ScopeInventory()
    </multipleobjects>
    <script>
      if (multiple and ListCount(object) = 0) {
        msg ("You've nothing to wear.")
      }
      else {
        foreach (obj, object) {
          f = _DoWear(obj)
        }
        UpdateArmour
      }
    </script>
  </command>
  <command name="remove">
    <pattern>take #object# off; remove #object#; take off #object#; doff #object#</pattern>
    <scope>inventory</scope>
    <multipleobjects type="script">
      game.pov.currentcommandpendingobjectscope = ScopeInventory()
    </multipleobjects>
    <script>
      if (multiple and ListCount(object) = 0) {
        msg ("You've nothing to take off.")
      }
      else {
        foreach (obj, object) {
          f = _DoRemove(obj)
        }
      }
      UpdateArmour
    </script>
  </command>
  <command name="take">
    <pattern>take #object#; get #object#; pick up #object#</pattern>
    <multiple>
      takeList = NewObjectList()
      foreach (obj, ListExclude(ScopeVisibleNotHeldNotScenery(), game.pov)) {
        if (obj.parent = game.pov.parent) {
          list add (takeList, obj)
        }
      }
      return (takeList)
    </multiple>
    <scope>notheld</scope>
    <multipleobjects type="script">
      game.pov.currentcommandpendingobjectscope = NewObjectList()
      foreach (obj, ListExclude(ScopeVisibleNotHeldNotScenery(), game.pov)) {
        if (obj.parent = game.pov.parent and not DoesInherit(obj, "npc_type")) {
          list add (game.pov.currentcommandpendingobjectscope, obj)
        }
      }
    </multipleobjects>
    <script>
      if (multiple and ListCount(object) = 0) {
        msg ("Nothing here to take.")
      }
      else {
        foreach (obj, object) {
          DoTake (obj, multiple)
        }
      }
    </script>
  </command>
  <command name="drop">
    <pattern>drop #object#</pattern>
    <multiple>
      return (GetDirectChildren(game.pov))
    </multiple>
    <scope>inventory</scope>
    <multipleobjects type="script">
      game.pov.currentcommandpendingobjectscope = GetDirectChildren(game.pov)
    </multipleobjects>
    <script>
      if (multiple and ListCount(object) = 0) {
        msg ("Nothing here to take.")
      }
      else {
        foreach (obj, object) {
          DoDrop (obj, multiple)
        }
      }
    </script>
  </command>
  <command name="delete">
    <pattern>delete #object#</pattern>
    <script>
      RemoveObject (object)
    </script>
  </command>
  <command name="tehelp">
    <pattern>TEHELP</pattern>
    <script>
      faq_home
    </script>
  </command>
  <command name="help">
    <pattern type="string">^help$|^\?$</pattern>
    <script><![CDATA[
      msg ("<center><a href='http://pr-if.org/doc/play-if-card/play-if-card-300dpi.png'><img onload=\"scrollToEnd();\" onerror=\"ASLEvent('P','"+Template("DefaultHelp")+"');$(this).remove();\" src='http://pr-if.org/doc/play-if-card/play-if-card-300dpi.png' width='100%'/></a></center>")
      game.suppressturnscripts = true
    ]]></script>
  </command>
  <command name="wave">
    <pattern>wave</pattern>
    <script>
      msg ("You wave.")
    </script>
  </command>
  <command name="waveat">
    <pattern type="string"><![CDATA[^wave (at |to |)(?<object>.+)$]]></pattern>
    <script>
      msg ("You wave at "+GetDisplayName(object)+".")
    </script>
  </command>
  <command name="score">
    <pattern>score</pattern>
    <script>
      PrintFullScore
    </script>
  </command>
  <command name="Resists">
    <pattern>resists</pattern>
    <script>
      resists_table
    </script>
  </command>
  <command name="Weapon Attack">
    <pattern>attack #object#</pattern>
    <unresolved>You cannot attack that.</unresolved>
    <script><![CDATA[
      ShowRoomDescription
      if (game.pov.stam > game.pov.dam) {
        loc = game.pov.parent
        object = DictionaryItem(game.pov.currentcommandresolvedelements, "object")
        weapon = object
        if (loc.mlist <> null) {
          ShowMenu ("Attack?", loc.mlist, true) {
            object = DictionaryItem(game.pov.currentcommandresolvedelements, "object")
            weapon = object
            target = getObjectExt(result)
            weapondam = ToInt(ToString((combat_damage(weapon,target))))
            rnd = GetRandomInt(1,5)
            pdam = ToInt(ToString((weapondam)+(rnd)))
            game.pov.stam = (game.pov.stam) - ((weapon.volume)*2)
            if (target.current_hp < (weapon.dam)) {
              PrintCentered ("The " + target.alias + " is crushed by your powerful blow.<br>")
              IncScore ("Killed " + target.alias + " with " +weapon.alias+".", 5)
              Gen_Loot (target)
              set (target, "status", "Passed beyond the Veil.")
              set (target, "alive", false)
              set (target, "current_hp", 0)
              list remove (game.pov.parent.mlist, target.name)
            }
            else if (target.current_hp > (weapon.dam)) {
              target.current_hp = (target.current_hp - pdam)
              PrintCentered ("Your "+weapon.alias+" collides with " + target.alias + " and has done " + pdam + " damage! (random value of: " +rnd+"")
              if (target.current_hp < 1) {
                PrintCentered ("You have killed " + target.alias + "!<br>")
                Gen_Loot (target)
                set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                IncScore ("Killed " + target.alias + " with " +weapon.alias+".", 5)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("But " + target.alias + " has only been injured and has " + target.current_hp + " health remaining!<br>")
              }
            }
          }
        }
        else {
          msg ("There is nothing to attack.")
        }
      }
      else {
        PrintCentered ("You attempt to wield your weapon in a menacing manner, but you are too weak!")
      }
    ]]></script>
  </command>
  <command name="matt">
    <pattern>matt #object#</pattern>
    <script><![CDATA[
      // dbglog ("['matt'] command's script running...")
      // dbglog ("object.name:")
      // dbglog (object.name)
      if (Martika.weapon = bow1) {
        weapon = bow1
        // target = getObjectExt(result)
        target = object
        weapondam = ToInt(ToString((combat_damage(weapon,target))))
        rnd = GetRandomInt(1,5)
        pdam = ToInt(ToString((weapondam)+(rnd)))
        game.pov.stam = (game.pov.stam) - ((weapon.volume)*2)
        if (target.current_hp < (weapon.dam)) {
          PrintCentered ("The " + target.alias + " is crushed by your powerful blow.<br>")
          IncScore ("Killed " + target.alias + " with " +weapon.alias+".", 5)
          Gen_Loot (target)
          set (target, "status", "Passed beyond the Veil.")
          set (target, "alive", false)
          set (target, "current_hp", 0)
          list remove (game.pov.parent.mlist, target.name)
        }
        else if (target.current_hp > (weapon.dam)) {
          target.current_hp = (target.current_hp - pdam)
          PrintCentered ("Your "+weapon.alias+" collides with " + target.alias + " and has done " + pdam + " damage! (random value of: " +rnd+"")
          if (target.current_hp < 1) {
            PrintCentered ("You have killed " + target.alias + "!<br>")
            Gen_Loot (target)
            set (target, "status", "Passed beyond the Veil.")
            set (target, "alive", false)
            set (target, "current_hp", 0)
            IncScore ("Killed " + target.alias + " with " +weapon.alias+".", 5)
            list remove (game.pov.parent.mlist, target.name)
          }
          else {
            PrintCentered ("But " + target.alias + " has only been injured and has " + target.current_hp + " health remaining!<br>")
          }
        }
      }
      else {
        // [ ] - TODO: ELSE WHAT?
      }
    ]]></script>
  </command>
  <command name="player_SpellDamage">
    <pattern>p_sdamage</pattern>
    <script><![CDATA[
      PrintCentered ("<br>Please type the amount in whole numbers only...<br>")
      get input {
        mvalue = ToInt(result)
        player.SpellDamage = (player.SpellDamage + mvalue)
        msg ("<br>The amount of your Spell Damage has increased by: " +mvalue+ " gp.<br>")
        msg ("Spell Damage: " +mvalue+ "<br>")
      }
    ]]></script>
  </command>
  <command name="export">
    <pattern>export #object#</pattern>
    <script>
      if (GetInt(object, "saveable") = 1) {
        Ask ("Would you like to save this?") {
          if ((result)) {
            SaveObject (This())
          }
          else {
            msg ("Saving aborted...")
          }
        }
      }
      else {
        msg ("This item cannot be saved. Saving aborted...")
      }
    </script>
  </command>
  <command name="import">
    <pattern>import</pattern>
    <script><![CDATA[
      msg ("Follow the instructions below to load your Saved Item:")
      msg ("Note: When asked to give the item a name, it must be typed exactly as you named it when you Saved it.<br>")
      msg ("<iframe src=\"http://www.uoexpanse.com/quests/index3.html\" width=\"75%\" height=\"auto\"></iframe>")
      get input {
        data = (result)
        LoadObject (data)
      }
    ]]></script>
  </command>
  <command name="bank">
    <pattern>bank</pattern>
    <script><![CDATA[
      if (player.gold = 1) {
        PrintCentered ("<table id='oneg'><tr><td>You are currently carrying:<br><p id='gs'>" +player.gold+ "</p>gp in your coin pouch.</td></tr></table><br>")
      }
      else if (player.gold > 1) {
        PrintCentered ("<table id='gps'><tr><td>You are currently carrying:<br><p id='gs'>" +player.gold+ "</p>gps in your coin pouch.</td></tr></table><br>")
      }
      else if (player.gold < 1) {
        PrintCentered ("<table id='ngps'><tr><td>You are currently carrying:<br> nothing in your coin pouch.</td></tr></table><br>")
      }
      else {
        PrintCentered ("<table id='vgps'><tr><td>You are currently carrying:<br> a bottomless void of nothingness, because something has broken.</td></tr></table><br>")
      }
    ]]></script>
  </command>
  <command name="journal">
    <pattern>journal</pattern>
    <script><![CDATA[
      msg ("<br>You open your journal and examine the contents written therein:<br>")
      PrintFullScore
      msg ("<br>")
    ]]></script>
  </command>
  <command name="Reference">
    <pattern>reference</pattern>
    <script><![CDATA[
      msg ("<div id='spells'><table id='left'><tr><td> " + spellbook1.uses + " Charges remaining</td></tr><tr><td>Vas Flam </td></tr><tr><td>Corp Por </td></tr><tr><td>Kal Vas Vlam </td></tr><tr><td>Vas Ort Flam </td></tr><tr><td>In Nox </td></tr><tr><td>Por Ort Grav </td></tr><tr><td>An Mani </td></tr><tr><td>In Por Ylem </td></tr><tr><td>Por Corp Wis </td></tr><tr><td>In Vas Mani </td></tr></table><table id='right'><tr><td>(No Recharges)</td></tr><tr><td>- Fireball</td></tr><tr><td>- Energy Bolt</td></tr><tr><td>- Flamestrike</td></tr><tr><td>- Explosion</td></tr><tr><td>- Poison</td></tr><tr><td>- Lightning</td></tr><tr><td>- Harm</td></tr><tr><td>- Magic Arrow</td></tr><tr><td>- Mind Blast</td></tr><tr><td>- Greater Heal</td></tr></table></div>")
    ]]></script>
  </command>
  <command name="add_gold">
    <pattern>add gold</pattern>
    <script><![CDATA[
      PrintCentered ("<br>Please type the amount in whole numbers only...<br>")
      get input {
        mgold = ToInt(result)
        player.gold = (player.gold + mgold)
        msg ("<br>The amount of gold in your purse has increased by: " +mgold+ " gp.<br>")
        Bank
        msg ("<br>")
      }
    ]]></script>
  </command>
  <command name="HPRegenOn">
    <pattern>hpon</pattern>
    <script>
      EnableTimer (hp_regen1)
    </script>
  </command>
  <command name="HPRegenOff">
    <pattern>hpoff</pattern>
    <script>
      DisableTimer (hp_regen1)
    </script>
  </command>
  <verb name="feel">
    <pattern>feel;touch</pattern>
    <property>feel</property>
    <defaulttext>That probably wouldn't help anything.</defaulttext>
  </verb>
  <verb name="Spell Attack">
    <property>attack</property>
    <pattern>Spell Attack #object#</pattern>
    <defaultexpression>"You can't attack " + object.article + "."</defaultexpression>
  </verb>
<!--
********************************************************************************
**
**																				2. RANDOMSPAWN SECTION
**
** inherit_type: enemy_room
** This function handles the Random Spawn configuration. This system relies on one ROOM attribute: "cycle". This attribute determines which tier of Enemy is to be spawned. Using the default enemies mongbat1 is fairly weak, mongbat5 is the stronger of all mongbats, and the same applies to Ettins, Ogres, and Orcs. The idea behind the cycle is to increase the difficulty the next time the player enters the ROOM, and so players are not facing the same enemy repeatedly.

** The Respawn function uses all the weaker enemies to spawn into a Room after the first time the player entered and eliminated all the enemies. Respawn only works with RandomSpawn, but it coexists with the other features too.

** NOTE: These spawn separately from the QUEST ENEMY, and the SPAWNFORROOM.
**
********************************************************************************
**
**																				3. SPAWNFORROOM SECTION
**
** inherit_type: tab_room
** This function handles Enemy Spawns for a given Room, and should be called if the Enemy Spawns tabs for the Room have been configured. Call function: SpawnForRoom (this) (where (this) refers to the Room that called the function. The ROOM must inherit enemy_room and tab_room.

** NOTE: These spawn separately from the QUEST ENEMY, and the RANDOMSPAWN.
********************************************************************************
**
**																				4. FEATURE CODE SECTIONS
**
**																					A. ENEMY SPAWNS TAB SECTION (type)
**
** Once an Enemy Type is selected from the Enemy Spawns tab, a secondary tab will appear showing the available enemies of that type. Each type has 5 different enemies, generally ranging in difficulty from 1 to 5, e.g. mongbat1, mongbat2, mongbat3, mongbat4, mongbat5. More than 1 Enemy can be selected at a time, but it is not recommended to have more than 3-4, or all their various Loot will clog up the Places and Objects pane, and the game window.

** NOTE: These spawn separately from the QUEST ENEMY, and the RANDOMSPAWN.
-->
  <tab>
    <parent>_ObjectEditor</parent>
    <mustnotinherit>editor_object</mustnotinherit>
    <caption>Enemy Spawns</caption>

    <control>
      <controltype>title</controltype>
      <caption>Enemy Types for this Room</caption>
    </control>
    <control>
      <controltype>checkbox</controltype>
      <caption>Spawn enemy?</caption>
      <attribute>room_spawns_enemies</attribute>
    </control>
    <control>
      <controltype>checkbox</controltype>
      <caption>Mongbats?</caption>
      <attribute>room_spawns_mongbat</attribute>
      <onlydisplayif>this.room_spawns_enemies</onlydisplayif>
    </control>
    <control>
      <controltype>checkbox</controltype>
      <caption>Ettins?</caption>
      <attribute>room_spawns_ettin</attribute>
      <onlydisplayif>this.room_spawns_enemies</onlydisplayif>
    </control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Ogres?</caption>
      <attribute>room_spawns_ogre</attribute>
      <onlydisplayif>this.room_spawns_enemies</onlydisplayif>
    </control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Orcs?</caption>
      <attribute>room_spawns_orc</attribute>
      <onlydisplayif>this.room_spawns_enemies</onlydisplayif>
    </control>
  </tab>

<!--
********************************************************************************
**																					B. ENEMY SELECTION SECTION (specific)
**
** After selecting an Enemy Type, another tab appears for that Room with all the enemies of that Enemy Type.
**
** NOTE: These spawn separately from the QUEST ENEMY, and the RANDOMSPAWN.
********************************************************************************
**																						i. MONGBAT SECTION
-->
  <tab>
    <parent>_ObjectEditor</parent>
    <caption>Mongbats to Spawn</caption>
    <onlydisplayif>this.room_spawns_mongbat</onlydisplayif>

    <control>
      <controltype>title</controltype>
      <caption>Mongbats to Spawn</caption>
      <onlydisplayif>this.room_spawns_mongbat</onlydisplayif>
    </control>
    <control>
      <controltype>checkbox</controltype>
      <caption>Mossy Mongbat</caption>
      <attribute>_spawn_mongbat_mongbat1_</attribute>
      <onlydisplayif>this.room_spawns_mongbat</onlydisplayif>
    </control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Greater Mongbat</caption>
      <attribute>_spawn_mongbat_mongbat2_</attribute>
      <onlydisplayif>this.room_spawns_mongbat</onlydisplayif>
    </control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Super Mongbat</caption>
      <attribute>_spawn_mongbat_mongbat3_</attribute>
      <onlydisplayif>this.room_spawns_mongbat</onlydisplayif>
    </control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Mutant Mongbat</caption>
      <attribute>_spawn_mongbat_mongbat4_</attribute>
      <onlydisplayif>this.room_spawns_mongbat</onlydisplayif>
    </control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Strong Mongbat</caption>
      <attribute>_spawn_mongbat_mongbat5_</attribute>
      <onlydisplayif>this.room_spawns_mongbat</onlydisplayif>
    </control>    
  </tab>

<!--
********************************************************************************
**																						ii. ETTIN SECTION
-->
  <tab>
    <parent>_ObjectEditor</parent>
    <caption>Ettins to Spawn</caption>
    <onlydisplayif>this.room_spawns_ettin</onlydisplayif>

    <control>
      <controltype>title</controltype>
      <caption>Ettins to Spawn</caption>
      <onlydisplayif>this.room_spawns_ettin</onlydisplayif>
    </control>
    <control>
      <controltype>checkbox</controltype>
      <caption>Moldy Ettin</caption>
      <attribute>_spawn_ettin_ettin1_</attribute>
      <onlydisplayif>this.room_spawns_ettin</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Grumpy Ettin</caption>
      <attribute>_spawn_ettin_ettin2_</attribute>
      <onlydisplayif>this.room_spawns_ettin</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Giant Ettin</caption>
      <attribute>_spawn_ettin_ettin3_</attribute>
      <onlydisplayif>this.room_spawns_ettin</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Massive Ettin</caption>
      <attribute>_spawn_ettin_ettin4_</attribute>
      <onlydisplayif>this.room_spawns_ettin</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Enraged Ettin</caption>
      <attribute>_spawn_ettin_ettin5_</attribute>
      <onlydisplayif>this.room_spawns_ettin</onlydisplayif>
    </control>
  </tab>

<!--
********************************************************************************
**																						iii. OGRE SECTION
-->
  <tab>
    <parent>_ObjectEditor</parent>
    <caption>Ogres to Spawn</caption>
    <onlydisplayif>this.room_spawns_ogre</onlydisplayif>
    
    <control>
      <controltype>title</controltype>
      <caption>Ogres to Spawn</caption>
      <onlydisplayif>this.room_spawns_ogre</onlydisplayif>
    </control>
    <control>
      <controltype>checkbox</controltype>
      <caption>Grouchy Ogre</caption>
      <attribute>_spawn_ogre_ogre1_</attribute>
      <onlydisplayif>this.room_spawns_ogre</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Angry Ogre</caption>
      <attribute>_spawn_ogre_ogre2_</attribute>
      <onlydisplayif>this.room_spawns_ogre</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Stinky Ogre</caption>
      <attribute>_spawn_ogre_ogre3_</attribute>
      <onlydisplayif>this.room_spawns_ogre</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Tough Ogre</caption>
      <attribute>_spawn_ogre_ogre4_</attribute>
      <onlydisplayif>this.room_spawns_ogre</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Putrid Ogre</caption>
      <attribute>_spawn_ogre_ogre5_</attribute>
      <onlydisplayif>this.room_spawns_ogre</onlydisplayif>
    </control>
  </tab>

<!--
********************************************************************************
**																						iv. ORC SECTION
-->
  <tab>
    <parent>_ObjectEditor</parent>
    <caption>Orcs to Spawn</caption>
    <onlydisplayif>this.room_spawns_orc</onlydisplayif>
  
    <control>
      <controltype>title</controltype>
      <caption>Orcs to Spawn</caption>
      <onlydisplayif>this.room_spawns_orc</onlydisplayif>
    </control>
  	<control>
      <controltype>checkbox</controltype>
      <caption>Mangy Orc</caption>
      <attribute>_spawn_orc_orc1_</attribute>
      <onlydisplayif>this.room_spawns_orc</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Hated Orc</caption>
      <attribute>_spawn_orc_orc2_</attribute>
      <onlydisplayif>this.room_spawns_orc</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Chaos Orc</caption>
      <attribute>_spawn_orc_orc3_</attribute>
      <onlydisplayif>this.room_spawns_orc</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Blitzed Orc</caption>
      <attribute>_spawn_orc_orc4_</attribute>
      <onlydisplayif>this.room_spawns_orc</onlydisplayif>
    </control>    
    <control>
      <controltype>checkbox</controltype>
      <caption>Tainted Orc</caption>
      <attribute>_spawn_orc_orc5_</attribute>
      <onlydisplayif>this.room_spawns_orc</onlydisplayif>
    </control>
  </tab>

<!--
********************************************************************************
**
**																				5. SAMPLE ROOM: CROSSROADS1
**
** NOTE: This Room does not have an Exit by default. It is meant to be used as an example of how to set up other Rooms.
**
-->
  <object name="crossroads1">
    <inherit name="editor_room" />
    <inherit name="enemy_room" />
    <inherit name="tab_room" />
    <inherit name="map_room" />
    <alias>Crossroads</alias>
    <description>This large, open-area looks as if it might have once been used as a gathering hall of some sort. Perhaps for music and dance, since the floor appears to be well-cared for, in spite of the immense layers of dust everywhere. Off towards the hallway, you can see several large cobwebs drapped in several corners.</description>
    <descprefix>You are at</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <attr name="_spawn_ogre_ogre4_" type="boolean">false</attr>
    <attr name="room_spawns_ogre" type="boolean">false</attr>
    <attr name="room_spawns_enemies" type="boolean">false</attr>
    <attr name="room_spawns_ettin" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin1_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin3_" type="boolean">false</attr>
    <enemy_mongbat1 />
    <attr name="room_spawns_mongbat" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat1_" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat2_" type="boolean">false</attr>
    <attr name="room_spawns_orc" type="boolean">false</attr>
    <attr name="_spawn_orc_orc1_" type="boolean">false</attr>
    <attr name="_mongbat1" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat3_" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat4_" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat5_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin2_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin4_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin5_" type="boolean">false</attr>
    <attr name="_spawn_ogre_ogre1_" type="boolean">false</attr>
    <attr name="_spawn_ogre_ogre3_" type="boolean">false</attr>
    <attr name="_spawn_ogre_ogre2_" type="boolean">false</attr>
    <attr name="_spawn_ogre_ogre5_" type="boolean">false</attr>
    <attr name="_spawn_orc_orc2_" type="boolean">false</attr>
    <attr name="_spawn_orc_orc3_" type="boolean">false</attr>
    <attr name="_spawn_orc_orc4_" type="boolean">false</attr>
    <attr name="_spawn_orc_orc5_" type="boolean">false</attr>
    <mapz>rpgmainzoom.png</mapz>
    <attr name="map_zoom">rpgmainzoom.png</attr>
    <roommap>rpgmainzoom.png</roommap>
    <dropdestination type="object">crossroads1</dropdestination>
    <onexit type="script">
      ClearScreen
      Cleanup (this)
    </onexit>
    <beforeenter type="script">
      RandomSpawn (this)
    </beforeenter>
    <beforefirstenter type="script">
    </beforefirstenter>
    <enter type="script">
    </enter>
    <firstenter type="script">
    </firstenter>
  </object>
<!--
********************************************************************************
**
**																				6. ENEMY ROOM: old_chamber
**
-->
  <object name="old_chamber">
    <inherit name="editor_room" />
    <alias>junk room</alias>
    <description />
    <descprefix>You are inside</descprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <dropdestination type="object">old_chamber</dropdestination>
    <onexit type="script">
    </onexit>
    <object name="wingbat5_for_questGiverBig">
      <inherit name="editor_object" />
      <alias>Strong wing</alias>
    </object>
    <object name="wingbat4_for_questGiverBig">
      <inherit name="editor_object" />
      <alias>Mutant wing</alias>
    </object>
    <object name="wingbat3_for_questGiverBig">
      <inherit name="editor_object" />
      <alias>Super wing</alias>
    </object>
    <object name="wingbat2_for_questGiverBig">
      <inherit name="editor_object" />
      <alias>Greater wing</alias>
    </object>
    <object name="wingbat1_for_questGiverBig">
      <inherit name="editor_object" />
      <alias>Mossy wing</alias>
    </object>
    <object name="wingbat1">
      <inherit name="editor_object" />
      <alias>Mossy wing</alias>
      <givesingle />
      <drop type="boolean">false</drop>
      <listalias>Mossy wing</listalias>
      <scenery type="boolean">false</scenery>
      <visible />
      <volume type="int">1</volume>
      <pic>wingbat_12.png</pic>
      <feature_usegive />
      <use type="boolean">false</use>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Give</value>
      </inventoryverbs>
      <alt type="stringlist">
        <value>mossy wng</value>
      </alt>
      <look type="script"><![CDATA[
        msg ("<br>One of the wings from a Mossy Mongbat. It has been said they are quite tasty after having been roasted.<br>")
        // Picture ("wingbat_12.png")
        msg ("<br>")
      ]]></look>
      <take type="script"><![CDATA[
        if (QuestState(wingbat1_for_questGiverBig) = "Active") {
          if (not Got(wingbat1)) {
            msg ("You pick it up.<br>")
            QuestNext (wingbat1_for_questGiverBig, "Return the Mossy wing to questGiverBig.<br>")
            IncScore ("Quest: Mossy wing", 1)
            msg ("The wing seems to twitch, but you guess it was just your imagination.<br>")
            MoveObject (wingbat1, player)
          }
          else {
            PrintCentered ("There is no need for greed. Leave the other one behind for someone else that needs it.")
          }
        }
        else {
          msg ("Only those with an -- [Active] Mossy wing -- quest may pick this up.<br>")
        }
      ]]></take>
      <ontake type="script">
      </ontake>
    </object>
    <object name="wingbat2">
      <inherit name="editor_object" />
      <alias>Greater wing</alias>
      <givesingle />
      <drop type="boolean">false</drop>
      <listalias>Greater wing</listalias>
      <scenery type="boolean">false</scenery>
      <visible />
      <volume type="int">1</volume>
      <pic>wingbat_12.png</pic>
      <feature_usegive />
      <use type="boolean">false</use>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Give</value>
      </inventoryverbs>
      <alt type="stringlist">
        <value>greater wng</value>
      </alt>
      <look type="script"><![CDATA[
        msg ("<br>One of the wings from a Greater Mongbat. It has been said they are not as tasty as Mossy Mongbat wings, even after having been roasted.<br>")
        // Picture ("wingbat_12.png")
        msg ("<br>")
      ]]></look>
      <take type="script"><![CDATA[
        if (QuestState(wingbat2_for_questGiverBig) = "Active") {
          if (not Got(wingbat2)) {
            msg ("You pick it up.<br>")
            QuestNext (wingbat2_for_questGiverBig, "Return the Greater wing to questGiverBig.<br>")
            IncScore ("Quest: Greater wing", 1)
            msg ("The wing seems to twitch, but you guess it was just your imagination.<br>")
            MoveObject (wingbat2, player)
          }
          else {
            PrintCentered ("There is no need for greed. Leave the other one behind for someone else that needs it.")
          }
        }
        else {
          msg ("Only those with an -- [Active] Greater wing -- quest may pick this up.<br>")
        }
      ]]></take>
      <ontake type="script">
      </ontake>
    </object>
    <object name="wingbat3">
      <inherit name="editor_object" />
      <alias>Super wing</alias>
      <givesingle />
      <drop type="boolean">false</drop>
      <listalias>Super wing</listalias>
      <scenery type="boolean">false</scenery>
      <visible />
      <volume type="int">1</volume>
      <pic>wingbat_34.png</pic>
      <feature_usegive />
      <use type="boolean">false</use>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Give</value>
      </inventoryverbs>
      <alt type="stringlist">
        <value>super wng</value>
      </alt>
      <look type="script"><![CDATA[
        msg ("<br>One of the wings from a Super Mongbat. It has been said they are not as tasty as Greater Mossy Mongbat wings, even after having been roasted.<br>")
        // Picture ("wingbat_34.png")
        msg ("<br>")
      ]]></look>
      <take type="script"><![CDATA[
        if (QuestState(wingbat3_for_questGiverBig) = "Active") {
          if (not Got(wingbat3)) {
            msg ("You pick it up.<br>")
            QuestNext (wingbat3_for_questGiverBig, "Return the Super wing to questGiverBig.<br>")
            IncScore ("Quest: Super wing", 1)
            msg ("The wing seems to twitch, but you guess it was just your imagination.<br>")
            MoveObject (wingbat3, player)
          }
          else {
            PrintCentered ("There is no need for greed. Leave the other one behind for someone else that needs it.")
          }
        }
        else {
          msg ("Only those with an -- [Active] Super wing -- quest may pick this up.<br>")
        }
      ]]></take>
      <ontake type="script">
      </ontake>
    </object>
    <object name="wingbat4">
      <inherit name="editor_object" />
      <alias>Mutant wing</alias>
      <givesingle />
      <drop type="boolean">false</drop>
      <listalias>Mutant wing</listalias>
      <scenery type="boolean">false</scenery>
      <visible />
      <volume type="int">1</volume>
      <pic>wingbat_34.png</pic>
      <feature_usegive />
      <use type="boolean">false</use>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Give</value>
      </inventoryverbs>
      <alt type="stringlist">
        <value>mutant wng</value>
      </alt>
      <look type="script"><![CDATA[
        msg ("<br>One of the wings from a Mutant Mongbat. It has been said that if you even considered tasting one, that your tongue would roll itself up and crawl down your throat.<br>")
        // Picture ("wingbat_34.png")
        msg ("<br>")
      ]]></look>
      <take type="script"><![CDATA[
        if (QuestState(wingbat4_for_questGiverBig) = "Active") {
          if (not Got(wingbat4)) {
            msg ("You pick it up.<br>")
            QuestNext (wingbat4_for_questGiverBig, "Return the Mutant wing to questGiverBig.<br>")
            IncScore ("Quest: Mutant wing", 1)
            msg ("The wing seems to twitch, but you guess it was just your imagination.<br>")
            MoveObject (wingbat4, player)
          }
          else {
            PrintCentered ("There is no need for greed. Leave the other one behind for someone else that needs it.")
          }
        }
        else {
          msg ("Only those with an -- [Active] Mutant wing -- quest may pick this up.<br>")
        }
      ]]></take>
      <ontake type="script">
      </ontake>
    </object>
    <object name="wingbat5">
      <inherit name="editor_object" />
      <alias>Strong wing</alias>
      <givesingle />
      <drop type="boolean">false</drop>
      <listalias>Strong wing</listalias>
      <scenery type="boolean">false</scenery>
      <visible />
      <volume type="int">1</volume>
      <pic>wingbat_5.png</pic>
      <feature_usegive />
      <use type="boolean">false</use>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Give</value>
      </inventoryverbs>
      <alt type="stringlist">
        <value>strong wng</value>
      </alt>
      <look type="script"><![CDATA[
        msg ("<br>One of the wings from a Strong Mongbat. This wing is strong, like really incredibly strong.<br>")
        // Picture ("wingbat_5.png")
        msg ("<br>")
      ]]></look>
      <take type="script"><![CDATA[
        if (QuestState(wingbat5_for_questGiverBig) = "Active") {
          if (not Got(wingbat5)) {
            msg ("You pick it up.<br>")
            QuestNext (wingbat5_for_questGiverBig, "Return the Strong wing to questGiverBig.<br>")
            IncScore ("Quest: Strong wing", 1)
            msg ("The wing seems to twitch, but you guess it was just your imagination.<br>")
            MoveObject (wingbat5, player)
          }
          else {
            PrintCentered ("There is no need for greed. Leave the other one behind for someone else that needs it.")
          }
        }
        else {
          msg ("Only those with an -- [Active] Strong wing -- quest may pick this up.<br>")
        }
      ]]></take>
      <ontake type="script">
      </ontake>
    </object>
    <object name="mongbat1">
      <inherit name="editor_object" />
      <inherit name="mongbat_base" />
      <inherit name="mossy_type" />
    </object>
    <object name="mongbat2">
      <inherit name="editor_object" />
      <inherit name="mongbat_base" />
      <inherit name="greater_type" />
    </object>
    <object name="mongbat3">
      <inherit name="editor_object" />
      <inherit name="mongbat_base" />
      <inherit name="super_type" />
    </object>
    <object name="mongbat4">
      <inherit name="editor_object" />
      <inherit name="mongbat_base" />
      <inherit name="mutant_type" />
    </object>
    <object name="mongbat5">
      <inherit name="editor_object" />
      <inherit name="mongbat_base" />
      <inherit name="strong_type" />
    </object>
    <object name="ettin1">
      <inherit name="editor_object" />
      <inherit name="ettin_base" />
      <inherit name="moldy_type" />
    </object>
    <object name="ettin2">
      <inherit name="editor_object" />
      <inherit name="ettin_base" />
      <inherit name="grumpy_type" />
    </object>
    <object name="ettin3">
      <inherit name="editor_object" />
      <inherit name="ettin_base" />
      <inherit name="giant_type" />
    </object>
    <object name="ettin4">
      <inherit name="editor_object" />
      <inherit name="ettin_base" />
      <inherit name="massive_type" />
    </object>
    <object name="ettin5">
      <inherit name="editor_object" />
      <inherit name="ettin_base" />
      <inherit name="enraged_type" />
    </object>
    <object name="ogre1">
      <inherit name="editor_object" />
      <inherit name="ogre_base" />
      <inherit name="grouchy_type" />
    </object>
    <object name="ogre2">
      <inherit name="editor_object" />
      <inherit name="ogre_base" />
      <inherit name="angry_type" />
    </object>
    <object name="ogre3">
      <inherit name="editor_object" />
      <inherit name="ogre_base" />
      <inherit name="stinky_type" />
    </object>
    <object name="ogre4">
      <inherit name="editor_object" />
      <inherit name="ogre_base" />
      <inherit name="tough_type" />
    </object>
    <object name="ogre5">
      <inherit name="editor_object" />
      <inherit name="ogre_base" />
      <inherit name="putrid_type" />
    </object>
    <object name="orc1">
      <inherit name="editor_object" />
      <inherit name="orc_base" />
      <inherit name="mangy_type" />
    </object>
    <object name="orc2">
      <inherit name="editor_object" />
      <inherit name="orc_base" />
      <inherit name="hated_type" />
    </object>
    <object name="orc3">
      <inherit name="editor_object" />
      <inherit name="orc_base" />
      <inherit name="chaos_type" />
    </object>
    <object name="orc4">
      <inherit name="editor_object" />
      <inherit name="orc_base" />
      <inherit name="blitzed_type" />
    </object>
    <object name="orc5">
      <inherit name="editor_object" />
      <inherit name="orc_base" />
      <inherit name="tainted_type" />
    </object>
  </object>
<!--
********************************************************************************
**
**																				7. QUEST CREATION SECTION with QUEST ENEMY
**
** inherit_type: quest_room
** This tab is used to set up the Quest properties and assign the questObject to a QUEST ENEMY. This is a basic set up, with a single Quest Object, and a single Enemy to drop the questObject as Loot when they die. To create more advanced quests, questGiver1 contains multiple quests for Mongbat wings (wingbats), and can be used as a template to make more complex quests.

** NOTE: This QUEST ENEMY spawns separately from the SPAWNFORROOM, and the RANDOMSPAWN.
-->
  <tab>
      <parent>_GameEditor</parent>
      <mustnotinherit>editor_object</mustnotinherit>
      <caption>Quest Creation</caption>

	<control>
	  <controltype>title</controltype>
	  <caption>Quest Creation</caption>
	</control>

	<control>
      <controltype>checkbox</controltype>
	  <caption>Create a quest for this game?</caption>
      <attribute>create_quest_</attribute>
    </control>

	<control>
	  <controltype>objects</controltype>
	  <caption>Quest Object being edited</caption>
      <attribute>questObject</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>

	<control>
	  <controltype>title</controltype>
	  <caption>Quest Attributes</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>

	<control>
	  <controltype>label</controltype>
	  <caption>Once all fields are complete, put a CHECKMARK in the box at bottom.</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>

	<control>
	  <controltype>textbox</controltype>
      <caption>Give this Quest a NAME</caption>
      <attribute>questName</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	  <width>50</width>
    </control>
	<control>
	  <controltype>textbox</controltype>
      <caption>Give the questObject a NAME (this is the object the player has to have for the quest.)</caption>
      <attribute>quest_alias</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	  <width>50</width>
    </control>

	<control>
	  <controltype>number</controltype>
      <caption>Assign a WEIGHT to the questObject</caption>
      <attribute>quest_weight</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>

	<control>
	  <controltype>number</controltype>
      <caption>Assign Quest Gold value</caption>
      <attribute>quest_reward</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>

	<control>
	  <controltype>title</controltype>
	  <caption>Quest Settings</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>
	<control>
	  <controltype>label</controltype>
	  <caption>      (Change these values on the GAME attributes only, as needed. These values are used by default, and are shown here as reference.)</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>
	<control>
	  <controltype>label</controltype>
	  <caption>QuestState: "Inactive"</caption>
      <attribute>questStateInactive</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>QuestState: "Active"</caption>
      <attribute>questStateActive</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>QuestStateFinish: "Successful"</caption>
      <attribute>questFinishString</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>questEndString: "You have successfully completed the quest!"</caption>
      <attribute>questEndString</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>QuestStart: "Requested: 1 " + questObject.alias + "."</caption>
      <attribute>questStart</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>QuestNext1: "Take the " + questObject.alias + "."</caption>
      <attribute>questNext1</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>QuestNext2: "You took the " + questObject.alias + "."</caption>
      <attribute>QuestNext2</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>

	<control>
	  <controltype>label</controltype>
	  <caption>IncScoreString: "Quest: " + questObject.alias + "."</caption>
      <attribute>questIncScoreString</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>      (Changing the integer for IncScoreValue will change the Score amount awarded when the quest is finished. 100 is the default.)</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>
	<control>
	  <controltype>label</controltype>
	  <caption>IncScoreValue: 100</caption>
      <attribute>questIncScoreValue</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>

	<control>
	  <controltype>title</controltype>
	  <caption>Location and Quest Enemy Settings</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>
	<control>
	  <controltype>label</controltype>
	  <caption>Select the specific ROOM where the ENEMY should spawn:</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>
     <control>
      <controltype>objects</controltype>
      <caption>  Location</caption>
      <attribute>CarrierLocation</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>Select the specific Quest Enemy that should spawn, in addition to any already existing spawn configuration:</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>
     <control>
      <controltype>objects</controltype>
      <caption>  Quest Enemy</caption>
      <attribute>Carrier</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>

	<control>
	  <controltype>title</controltype>
	  <caption>Bonus Reward Code (optional)</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>
	<control>
	  <controltype>label</controltype>
	  <caption>Would you like to add any code to execute after completing the quest?</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>
	<control>
	  <controltype>script</controltype>
	  <caption>      (This should not be complex code. If something complex is needed, edit the code for the Quest function under "Success".)</caption>
      <attribute>questRscript</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>

	<control>
	  <controltype>title</controltype>
	  <caption>Save and Finish</caption>
      <onlydisplayif>this.create_quest_</onlydisplayif>
	</control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Finish and configure questObject?</caption>
      <attribute>complete</attribute>
      <onlydisplayif>this.create_quest_</onlydisplayif>
    </control>
  </tab>

<!--
********************************************************************************
**
**																				8. NPCs SETUP SECTION
**
** inherit_type: npcSetup_room
** This tab is used to set up some extra help for the player in the form of NPCs, or non-player characters. These special characters will work with the player to defeat enemies in a Room. There are 4 classes of NPC: Archer, Fighter, Mage, and Rogue. The player is limited to hiring up to 3. Anything more than that and the display gets cluttered quickly. Please edit the SPEAK TO for the RECRUITER in the npc_room, if you change any of the default values for the hiring fees. NPCs are separate from Enemies and Quests, but there is little point in having the NPCs without enemies.
-->
  <tab>
      <parent>_GameEditor</parent>
      <mustnotinherit>editor_object</mustnotinherit>
      <caption>NPCs Setup</caption>

	<control>
	  <controltype>title</controltype>
	  <caption>NPCs Setup</caption>
	</control>

	<control>
      <controltype>checkbox</controltype>
	  <caption>Create NPCs for this Game?</caption>
      <attribute>create_npcs_</attribute>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>The Hiring Fee is the cost, in gold, for that NPC's contract (the lower this is, the cheaper it is for players to buy NPCs).</caption>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
	</control>
	<control>
	  <controltype>title</controltype>
	  <caption>NPC Classes</caption>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
	</control>

	<control>
	  <controltype>label</controltype>
	  <caption>Fighters begin with Hit Chance of 30%. (this can be increased or decreased by equipping different weapons and/or armor.)</caption>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
	</control>
	<control>
      <controltype>checkbox</controltype>
	  <caption>Fighter?</caption>
      <attribute>fighter</attribute>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
    </control>
	<control>
      <controltype>number</controltype>
	  <caption>Hiring fee</caption>
      <attribute>fighter_fee</attribute>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
    </control>

	<control>
	  <controltype>label</controltype>
	  <caption>Archers begin with Hit Chance of 35%. (this can be increased or decreased by equipping different weapons and/or armor.)</caption>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
	</control>
	<control>
      <controltype>checkbox</controltype>
	  <caption>Archer?</caption>
      <attribute>archer</attribute>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
    </control>
	<control>
      <controltype>number</controltype>
	  <caption>Hiring fee</caption>
      <attribute>archer_fee</attribute>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
    </control>

	<control>
	  <controltype>label</controltype>
	  <caption>Mages begin with Hit Chance of 0%. (this can be increased with different spellbooks and weapons, but Mages cannot wear armor.)</caption>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
	</control>
	<control>
      <controltype>checkbox</controltype>
	  <caption>Mage?</caption>
      <attribute>mage</attribute>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
    </control>
	<control>
      <controltype>number</controltype>
	  <caption>Hiring fee</caption>
      <attribute>mage_fee</attribute>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
    </control>

	<control>
	  <controltype>label</controltype>
	  <caption>Rogues begin with Hit Chance of 78%. (this can be increased or decreased by equipping different weapons and/or armor.)</caption>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
	</control>
	<control>
      <controltype>checkbox</controltype>
	  <caption>Rogue?</caption>
      <attribute>rogue</attribute>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
    </control>
	<control>
      <controltype>number</controltype>
	  <caption>Hiring fee</caption>
      <attribute>rogue_fee</attribute>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
    </control>

	<control>
	  <controltype>title</controltype>
	  <caption>Save and Finish</caption>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
	</control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Finish and configure NPCs?</caption>
      <attribute>npcs</attribute>
      <onlydisplayif>this.create_npcs_</onlydisplayif>
    </control>
  </tab>
<!--
********************************************************************************
**
**																				9. BEGINNING OF NPCs ROOM: npc_room
**
**  The npc_room contains the NPC Hirelings, weapons for NPCs to start with, NPC Recruiter for players to hire NPCs, questGiver that has pre-configured retrieval quests for Wingbats, as well as the questObject, the thing the players have to get or do, and the playerQuestObject, which is the object players can use to start the quest from the Quest Creation tab.
-->
  <object name="npc_room">
    <inherit name="editor_room" />
    <alias>magical inn</alias>
    <mlist type="stringlist" />
    <dropdestination type="object">npc_room</dropdestination>
    <object name="assassinspike2">
      <inherit name="editor_object" />
      <inherit name="npcweapon_base" />
      <volume type="int">4</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Assassin Spike</alias>
      <pic type="string"></pic>
      <img>aspike_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">2</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">15</AosStrReq>
      <AosMinDam type="int">10</AosMinDam>
      <AosMaxDam type="int">12</AosMaxDam>
      <usedefaultprefix />
      <damage>ToInt((AosMinDam + AosMaxDam) /2)</damage>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
    </object>
    <object name="axe2">
      <inherit name="editor_object" />
      <inherit name="npcweapon_base" />
      <volume type="int">4</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Axe</alias>
      <pic type="string"></pic>
      <img>axe_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">1</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">35</AosStrReq>
      <AosMinDam type="int">14</AosMinDam>
      <AosMaxDam type="int">16</AosMaxDam>
      <usedefaultprefix />
      <damage>ToInt((AosMinDam + AosMaxDam) /2)</damage>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
    </object>
    <object name="bardiche2">
      <inherit name="editor_object" />
      <inherit name="npcweapon_base" />
      <volume type="int">7</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Bardiche</alias>
      <pic type="string"></pic>
      <img>bardiche_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">4</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">45</AosStrReq>
      <AosMinDam type="int">17</AosMinDam>
      <AosMaxDam type="int">18</AosMaxDam>
      <damage>ToInt((AosMinDam + AosMaxDam) /2)</damage>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
    </object>
    <object name="mace2">
      <inherit name="editor_object" />
      <inherit name="npcweapon_base" />
      <volume type="int">4</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Mace</alias>
      <pic type="string"></pic>
      <img>mace_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">3</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">45</AosStrReq>
      <AosMinDam type="int">12</AosMinDam>
      <AosMaxDam type="int">14</AosMaxDam>
      <damage>ToInt((AosMinDam + AosMaxDam) /2)</damage>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
    </object>
    <object name="bow2">
      <inherit name="editor_object" />
      <inherit name="npcweapon_base" />
      <volume type="int">6</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Bow</alias>
      <pic type="string"></pic>
      <img>bow_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">5</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">30</AosStrReq>
      <AosMinDam type="int">15</AosMinDam>
      <AosMaxDam type="int">19</AosMaxDam>
      <damage>ToInt((AosMinDam + AosMaxDam) /2)</damage>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
    </object>
    <object name="spear2">
      <inherit name="editor_object" />
      <inherit name="npcweapon_base" />
      <volume type="int">7</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Spear</alias>
      <pic type="string"></pic>
      <img>spear_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">6</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">50</AosStrReq>
      <AosMinDam type="int">13</AosMinDam>
      <AosMaxDam type="int">15</AosMaxDam>
      <damage>ToInt((AosMinDam + AosMaxDam) /2)</damage>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
    </object>
    <object name="warfork2">
      <inherit name="editor_object" />
      <inherit name="npcweapon_base" />
      <volume type="int">9</volume>
      <attr name="s_name" type="string"></attr>
      <alias>War Fork</alias>
      <pic type="string"></pic>
      <img>warfork_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">7</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">45</AosStrReq>
      <AosMinDam type="int">12</AosMinDam>
      <AosMaxDam type="int">13</AosMaxDam>
      <damage>ToInt((AosMinDam + AosMaxDam) /2)</damage>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
    </object>
    <object name="qstaff2">
      <inherit name="editor_object" />
      <inherit name="npcweapon_base" />
      <volume type="int">4</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Quarter Staff</alias>
      <pic type="string"></pic>
      <img>qstaff_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">8</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">30</AosStrReq>
      <AosMinDam type="int">11</AosMinDam>
      <AosMaxDam type="int">14</AosMaxDam>
      <damage>ToInt((AosMinDam + AosMaxDam) /2)</damage>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
    </object>
    <object name="longsword2">
      <inherit name="editor_object" />
      <inherit name="npcweapon_base" />
      <volume type="int">7</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Longsword</alias>
      <pic type="string"></pic>
      <img>longsword_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">9</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">35</AosStrReq>
      <AosMinDam type="int">15</AosMinDam>
      <AosMaxDam type="int">16</AosMaxDam>
      <damage>ToInt((AosMinDam + AosMaxDam) /2)</damage>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
        obj.rarity = GetRandomInt(1,99)
        Magical_Props2 (obj)
      </attr>
    </object>
    <object name="spellbook2">
      <inherit name="editor_object" />
      <inherit name="spellbooknpc_type" />
      <alias>Spellbook</alias>
      <inroomdescription>A thick, spined leather-bound, tome.</inroomdescription>
      <volume type="int">3</volume>
      <pic>sp_book1.png</pic>
      <usedefaultprefix />
      <prefix type="string"></prefix>
      <SpellDamage type="int">20</SpellDamage>
      <AosMinDam type="int">3</AosMinDam>
      <AosMaxDam type="int">5</AosMaxDam>
      <AosIntReq type="int">80</AosIntReq>
      <selfuseanything type="script">
        PrintCentered ("That will not work.")
      </selfuseanything>
      <look type="script">
        msg ("a thick, spined leather-bound tome with " + spellbook2.uses + " Charges remaining.")
        Picture ("sp_book1.png")
      </look>
    </object>
    <object name="Fighter">
      <inherit name="editor_object" />
      <inherit name="fighter_type" />
      <attr name="hiring_fee" type="int">45</attr>
      <weapon type="object">longsword2</weapon>
    </object>
    <object name="Mage">
      <inherit name="editor_object" />
      <inherit name="mage_type" />
      <attr name="hiring_fee" type="int">75</attr>
      <weapon type="object">spellbook2</weapon>
    </object>
    <object name="Archer">
      <inherit name="editor_object" />
      <inherit name="archer_type" />
      <attr name="hiring_fee" type="int">35</attr>
      <weapon type="object">bow2</weapon>
    </object>
    <object name="Rogue">
      <inherit name="editor_object" />
      <inherit name="rogue_type" />
      <attr name="hiring_fee" type="int">35</attr>
      <weapon type="object">warfork2</weapon>
    </object>
    <object name="Recruiter">
      <inherit name="editor_object" />
      <inherit name="recruiter_type" />
      <alias>Robins</alias>
      <alt type="stringlist" />
      <speak type="script"><![CDATA[
        val1 = Recruiter.archer_fee
        val2 = Recruiter.fighter_fee
        val3 = Recruiter.mage_fee
        val4 = Recruiter.rogue_fee
        options = Split("Archer;Fighter;Mage;Rogue", ";")
        if (player.gold < val1) {
          msg ("It looks like you lacking funding to contract with anyone.")
        }
        else {
          ShowMenu ("Hirelings<br>", options, false) {
            switch (result) {
              case ("Archer") {
                val1 = Recruiter.archer_fee
                if (player.gold <val1) {
                  msg ("It looks like you lack the funding to contract an Archer.")
                }
                else if (not GetBoolean(Archer, "visible")) {
                  msg ("I'm sorry, but the Archer is actually unavailable today.")
                }
                else {
                  if (not GetBoolean(player, "npc1")) {
                    player.gold = player.gold - val1
                    PrintCentered ("You sign a contract to pay the Archer " + val1 + " gold pieces to join you!<br>")
                    NPC_Archer_Add
                    MakeObjectInvisible (Archer)
                    set (player, "npc1", True)
                  }
                  else if (not GetBoolean(player, "npc2")) {
                    player.gold = player.gold - val1
                    PrintCentered ("You sign a contract to pay the Archer " + val1 + " gold pieces to join you!<br>")
                    NPC_Archer_Add
                    MakeObjectInvisible (Archer)
                    set (player, "npc2", True)
                  }
                  else if (not GetBoolean(player, "npc3")) {
                    player.gold = player.gold - val1
                    PrintCentered ("You sign a contract to pay the Archer " + val1 + " gold pieces to join you!<br>")
                    NPC_Archer_Add
                    MakeObjectInvisible (Archer)
                    set (player, "npc3", True)
                  }
                  else {
                    msg ("It appears that your group is full. If you add anyone else there will not be enough supplies to go around, and I do not sell supplies.")
                  }
                }
              }
              case ("Fighter") {
                val2 = Recruiter.fighter_fee
                if (player.gold <val2) {
                  msg ("It looks like you lack the funding to contract a Fighter.")
                }
                else if (not GetBoolean(Fighter, "visible")) {
                  msg ("I'm sorry, but the Fighter is actually unavailable today.")
                }
                else {
                  if (not GetBoolean(player, "npc1")) {
                    player.gold = player.gold - val2
                    PrintCentered ("You sign a contract to pay the Fighter " + val2 + " gold pieces to join you!<br>")
                    NPC_Fighter_Add
                    MakeObjectInvisible (Fighter)
                    set (player, "npc1", True)
                  }
                  else if (not GetBoolean(player, "npc2")) {
                    player.gold = player.gold - val2
                    PrintCentered ("You sign a contract to pay the Fighter " + val2 + " gold pieces to join you!<br>")
                    NPC_Fighter_Add
                    MakeObjectInvisible (Fighter)
                    set (player, "npc2", True)
                  }
                  else if (not GetBoolean(player, "npc3")) {
                    player.gold = player.gold - val2
                    PrintCentered ("You sign a contract to pay the Fighter " + val2 + " gold pieces to join you!<br>")
                    NPC_Fighter_Add
                    MakeObjectInvisible (Fighter)
                    set (player, "npc3", True)
                  }
                  else {
                    msg ("It appears that your group is full. If you add anyone else there will not be enough supplies to go around, and I do not sell supplies.")
                  }
                }
              }
              case ("Mage") {
                val3 = Recruiter.mage_fee
                if (player.gold <val3) {
                  msg ("It looks like you lack the funding to contract a Mage.")
                }
                else if (not GetBoolean(Mage, "visible")) {
                  msg ("I'm sorry, but the Mage is actually unavailable today.")
                }
                else {
                  if (not GetBoolean(player, "npc1")) {
                    player.gold = player.gold - val3
                    PrintCentered ("You sign a contract to pay the Mage " + val3 + " gold pieces to join you!<br>")
                    NPC_Mage_Add
                    MakeObjectInvisible (Mage)
                    set (player, "npc1", True)
                  }
                  else if (not GetBoolean(player, "npc2")) {
                    player.gold = player.gold - val3
                    PrintCentered ("You sign a contract to pay the Mage " + val3 + " gold pieces to join you!<br>")
                    NPC_Mage_Add
                    MakeObjectInvisible (Mage)
                    set (player, "npc2", True)
                  }
                  else if (not GetBoolean(player, "npc3")) {
                    player.gold = player.gold - val3
                    PrintCentered ("You sign a contract to pay the Mage " + val3 + " gold pieces to join you!<br>")
                    NPC_Mage_Add
                    MakeObjectInvisible (Mage)
                    set (player, "npc3", True)
                  }
                  else {
                    msg ("It appears that your group is full. If you add anyone else there will not be enough supplies to go around, and I do not sell supplies.")
                  }
                }
              }
              case ("Rogue") {
                val4 = Recruiter.rogue_fee
                if (player.gold <val4) {
                  msg ("It looks like you lack the funding to contract a Rogue.")
                }
                else if (not GetBoolean(Rogue, "visible")) {
                  msg ("I'm sorry, but the Rogue is actually unavailable today.")
                }
                else {
                  if (not GetBoolean(player, "npc1")) {
                    player.gold = player.gold - val4
                    PrintCentered ("You sign a contract to pay the Rogue " + val4 + " gold pieces to join you!<br>")
                    NPC_Rogue_Add
                    MakeObjectInvisible (Rogue)
                    set (player, "npc1", True)
                  }
                  else if (not GetBoolean(player, "npc2")) {
                    player.gold = player.gold - val4
                    PrintCentered ("You sign a contract to pay the Rogue " + val4 + " gold pieces to join you!<br>")
                    NPC_Rogue_Add
                    MakeObjectInvisible (Rogue)
                    set (player, "npc2", True)
                  }
                  else if (not GetBoolean(player, "npc3")) {
                    player.gold = player.gold - val4
                    PrintCentered ("You sign a contract to pay the Rogue " + val4 + " gold pieces to join you!<br>")
                    NPC_Rogue_Add
                    MakeObjectInvisible (Rogue)
                    set (player, "npc3", True)
                  }
                  else {
                    msg ("It appears that your group is full. If you add anyone else there will not be enough supplies to go around, and I do not sell supplies.")
                  }
                }
              }
              default {
                PrintCentered ("You did not hire anyone.")
              }
            }
          }
        }
      ]]></speak>
    </object>
    <object name="questObject">
      <inherit name="editor_object" />
      <alias>Quest Object</alias>
      <weight type="int">0</weight>
      <assignInherit>questObject.name</assignInherit>
      <visible type="boolean">false</visible>
      <loc type="string"></loc>
      <questIncScoreValue type="int">0</questIncScoreValue>
      <questIncScoreString type="string"></questIncScoreString>
      <questNext2 type="string"></questNext2>
      <questNext1 type="string"></questNext1>
      <questStart type="string"></questStart>
      <questEndString type="string"></questEndString>
      <questFinishString type="string"></questFinishString>
      <questStateActive type="string"></questStateActive>
      <attr name="quest_alias" type="string"></attr>
      <questName type="string"></questName>
      <attr name="quest_reward" type="int">0</attr>
      <questStateInactive type="string"></questStateInactive>
      <carrier type="object">questObject</carrier>
      <take type="script"><![CDATA[
        if (QuestState(questObject) = "Active") {
          if (not Got(questObject)) {
            msg ("You pick it up.<br>")
            if (game.quest_reward > 0) {
              reward = game.quest_reward
              gold = player.gold
              msg ("You also earned: " + reward + " gold for this quest!")
              gold = (gold + reward)
            }
            IncScore ("Quest: " + questObject.alias + ".", 1)
            do (game, "questRscript")
          }
        }
        else {
          msg ("Only those with an -- [Active] " + questObject.alias + " -- quest may pick this up.<br>")
        }
      ]]></take>
      <questRscript type="script">
      </questRscript>
    </object>
    <object name="playerQuestObject">
      <inherit name="editor_object" />
      <alias>Personal Adventuring Assistant</alias>
      <weight type="int">0</weight>
      <attr name="quest_weight" type="string"></attr>
      <loc type="string"></loc>
      <questIncScoreValue type="int">0</questIncScoreValue>
      <questIncScoreString type="string"></questIncScoreString>
      <questNext2 type="string"></questNext2>
      <questNext1 type="string"></questNext1>
      <questStart type="string"></questStart>
      <questEndString type="string"></questEndString>
      <questFinishString type="string"></questFinishString>
      <assignInherit>questObject.name</assignInherit>
      <visible type="boolean">false</visible>
      <questStateActive type="string"></questStateActive>
      <feature_usegive />
      <inroomdescription type="string"></inroomdescription>
      <attr name="quest_alias" type="string"></attr>
      <drop type="boolean">false</drop>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </inventoryverbs>
      <questName type="string"></questName>
      <attr name="quest_reward" type="int">0</attr>
      <questStateInactive type="string"></questStateInactive>
      <carrier type="object">playerQuestObject</carrier>
      <take type="script">
      </take>
      <use type="script"><![CDATA[
        msg ("Welcome! I am your Personal Adventuring Assistant, or PAA for short. Allow me to check my records...<br>")
        if (this.questName <> null) {
          msg ("Ah, one quest for " + this.questName + " has been found! Processing...It appears that " + this.carrier.alias + " over near " + this.loc.prefix + " " + this.loc.alias + " has the quest item. Ready?<br>")
          Ask ("You are about to begin this quest. Is that your choice?<br>") {
            if (result) {
              msg ("Very well. Let the adventure begin!<br>")
              questLoot = game.Carrier.questLoot
              QuestStart (questLoot, "Start")
            }
            else {
              msg ("Alright, you can always start the quest again later.")
            }
          }
        }
      ]]></use>
      <look type="script"><![CDATA[
        msg ("A small, handheld device with a rectangular shape, several buttons with letters across the bottom, and a large button at the top that says <i>Press Me</i><br>")
        msg ("The device is currently holding a quest for: " + questObject.questName + ". Press the button to activate the device.<br>")
      ]]></look>
    </object>
    <object name="questGiverBig">
      <inherit name="editor_object" />
      <inherit name="quester_type" />
      <alias>Stevens</alias>
      <prefix>a county Quest Giver</prefix>
      <suffix type="string"></suffix>
      <drop type="boolean">false</drop>
      <feature_usegive />
      <avquests type="int">5</avquests>
      <tquests type="int">5</tquests>
      <pic>lady1.png</pic>
      <listalias>Stevens</listalias>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Speak</value>
      </displayverbs>
      <gender>they</gender>
      <article>them</article>
      <possessive>their</possessive>
      <inroomdescription>Leaning against a short wall attached to covered wagon, is Stevens, a county Quest Giver.</inroomdescription>
      <speak type="script"><![CDATA[
        options = Split("Strong Mongbats;Mutant Mongbats;Super Mongbats;Greater Mongbats;Mossy Mongbats;Accept All", ";")
        msg ("<br>Your task is to slay different mongbats and collect 1 wing from each of the 5 different species. You will have to use different types of spells against each kind and/or combine weapon attacks as well.<br><br> If you have enough Spell Power, you might be able to see which elemental types you should attack with.<br>")
        ShowMenu ("Quests<br>", options, true) {
          switch (result) {
            case ("Strong Mongbats") {
              if (QuestState(wingbat5_for_questGiverBig) = "Successful") {
                msg ("Wonderful! Thank you for the Strong wing.<br>")
                IncScore ("Completed quest:<br> Strong wing.", 5)
                MoveObject (wingbat5, old_chamber)
                Ask ("Would you like to get more for me?<br>") {
                  if ((result)) {
                    msg ("Bring me a Strong wing, please.")
                    QuestStart (wingbat5_for_questGiverBig, "Requested: 1 Strong wing.")
                    IncScore ("Repeat Quest:<br> Strong wing.", 2)
                    DecreaseObjectCounter (questGiverBig, "avquests")
                    msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                    ListExits
                  }
                  else {
                    msg ("Perhaps another time then. Thank you for your efforts!")
                  }
                }
              }
              else if (QuestState(wingbat5_for_questGiverBig) = "Inactive") {
                msg ("Bring me a Strong wing, please.")
                QuestStart (wingbat5_for_questGiverBig, "Requested: 1 Strong wing.")
                IncScore ("Quest:<br> Strong wing.", 1)
                DecreaseObjectCounter (questGiverBig, "avquests")
                msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                ListExits
              }
              else if (Got(wingbat5)) {
                msg ("Please [Give] the Strong wing to me.")
              }
              else {
                msg ("Where is the Strong wing that I asked for?")
              }
            }
            case ("Mutant Mongbats") {
              if (QuestState(wingbat4_for_questGiverBig) = "Successful") {
                msg ("Wonderful! Thank you for the Mutant wing.<br>")
                IncScore ("Completed quest:<br> Mutant wing.", 5)
                MoveObject (wingbat4, old_chamber)
                Ask ("Would you like to get more for me?<br>") {
                  if ((result)) {
                    msg ("Bring me a Mutant wing, please.")
                    QuestStart (wingbat4_for_questGiverBig, "Requested: 1 Mutant wing.")
                    IncScore ("Repeat Quest:<br> Mutant wing.", 2)
                    DecreaseObjectCounter (questGiverBig, "avquests")
                    msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                    ListExits
                  }
                  else {
                    msg ("Perhaps another time then. Thank you for your efforts!")
                  }
                }
              }
              else if (QuestState(wingbat4_for_questGiverBig) = "Inactive") {
                msg ("Bring me a Mutant wing, please.")
                QuestStart (wingbat4_for_questGiverBig, "Requested: 1 Mutant wing.")
                IncScore ("Quest:<br> Mutant wing.", 1)
                DecreaseObjectCounter (questGiverBig, "avquests")
                msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                ListExits
              }
              else if (Got(wingbat4)) {
                msg ("Please [Give] the Mutant wing to me.")
              }
              else {
                msg ("Where is the Mutant wing that I asked for?")
              }
            }
            case ("Super Mongbats") {
              if (QuestState(wingbat3_for_questGiverBig) = "Successful") {
                msg ("Wonderful! Thank you for the Super wing.<br>")
                IncScore ("Completed quest:<br> Super wing.", 5)
                MoveObject (wingbat3, old_chamber)
                Ask ("Would you like to get more for me?<br>") {
                  if ((result)) {
                    msg ("Bring me a Super wing, please.")
                    QuestStart (wingbat3_for_questGiverBig, "Requested: 1 Super wing.")
                    IncScore ("Repeat Quest:<br> Super wing.", 2)
                    DecreaseObjectCounter (questGiverBig, "avquests")
                    msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                    ListExits
                  }
                  else {
                    msg ("Perhaps another time then. Thank you for your efforts!")
                  }
                }
              }
              else if (QuestState(wingbat3_for_questGiverBig) = "Inactive") {
                msg ("Bring me a Super wing, please.")
                QuestStart (wingbat3_for_questGiverBig, "Requested: 1 Super wing.")
                IncScore ("Quest:<br> Super wing.", 5)
                DecreaseObjectCounter (questGiverBig, "avquests")
                msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                ListExits
              }
              else if (Got(wingbat3)) {
                msg ("Please [Give] the Super wing to me.")
              }
              else {
                msg ("Where is the Super wing that I asked for?")
              }
            }
            case ("Greater Mongbats") {
              if (QuestState(wingbat2_for_questGiverBig) = "Successful") {
                msg ("Wonderful! Thank you for the Greater wing.<br>")
                IncScore ("Completed quest:<br> Greater wing.", 5)
                MoveObject (wingbat2, old_chamber)
                Ask ("Would you like to get more for me?<br>") {
                  if ((result)) {
                    msg ("Bring me a Greater wing, please.")
                    QuestStart (wingbat2_for_questGiverBig, "Requested: 1 Greater wing.")
                    IncScore ("Repeat Quest:<br> Greater wing.", 2)
                    DecreaseObjectCounter (questGiverBig, "avquests")
                    msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                    ListExits
                  }
                  else {
                    msg ("Perhaps another time then. Thank you for your efforts!")
                  }
                }
              }
              else if (QuestState(wingbat2_for_questGiverBig) = "Inactive") {
                msg ("Bring me a Greater wing, please.")
                QuestStart (wingbat2_for_questGiverBig, "Requested: 1 Greater wing.")
                IncScore ("Quest:<br> Greater wing.", 1)
                DecreaseObjectCounter (questGiverBigBig, "avquests")
                msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                ListExits
              }
              else if (Got(wingbat2)) {
                msg ("Please [Give] the Greater wing to me.")
              }
              else {
                msg ("Where is the Greater wing that I asked for?")
              }
            }
            case ("Mossy Mongbats") {
              if (QuestState(wingbat1_for_questGiverBig) = "Successful") {
                msg ("Wonderful! Thank you for the Mossy wing.<br>")
                IncScore ("Completed quest:<br> Mossy wing.", 5)
                MoveObject (wingbat1, old_chamber)
                Ask ("Would you like to get more for me?<br>") {
                  if ((result)) {
                    msg ("Bring me a Mossy wing, please.")
                    QuestStart (wingbat1_for_questGiverBig, "Requested: 1 Mossy wing.")
                    IncScore ("Repeat Quest:<br> Mossy wing.", 2)
                    DecreaseObjectCounter (questGiverBig, "avquests")
                    msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                    ListExits
                  }
                  else {
                    msg ("Perhaps another time then. Thank you for your efforts!")
                  }
                }
              }
              else if (QuestState(wingbat1_for_questGiverBig) = "Inactive") {
                msg ("Bring me a Mossy wing, please.")
                QuestStart (wingbat1_for_questGiverBig, "Requested: 1 Mossy wing.")
                IncScore ("Quest:<br> Mossy wing.", 1)
                DecreaseObjectCounter (questGiverBig, "avquests")
                msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
                ListExits
              }
              else if (Got(wingbat1)) {
                msg ("Would you please Give the Mossy wing to me.")
              }
              else {
                msg ("Where is the Mossy wing that I asked for?")
              }
            }
            case ("Accept All") {
              if (QuestState(wingbat5_for_questGiverBig) = "Inactive" and QuestState(wingbat4_for_questGiverBig) = "Inactive" and QuestState(wingbat3_for_questGiverBig) = "Inactive" and QuestState(wingbat2_for_questGiverBig) = "Inactive" and QuestState(wingbat1_for_questGiverBig) = "Inactive") {
                QuestStart (wingbat5_for_questGiver, "Requested: 1 Strong wing.")
                IncScore ("Quest:<br> Strong wing.", 1)
                DecreaseObjectCounter (questGiver, "avquests")
                QuestStart (wingbat4_for_questGiver, "Requested: 1 Super wing.")
                IncScore ("Quest:<br> Super wing.", 1)
                DecreaseObjectCounter (questGiver, "avquests")
                QuestStart (wingbat3_for_questGiver, "Requested: 1 Mutant wing.")
                IncScore ("Quest:<br> Mutant wing.", 1)
                DecreaseObjectCounter (questGiver, "avquests")
                QuestStart (wingbat2_for_questGiver, "Requested: 1 Greater wing.")
                IncScore ("Quest:<br> Greater wing.", 1)
                DecreaseObjectCounter (questGiver, "avquests")
                QuestStart (wingbat1_for_questGiver, "Requested: 1 Mossy wing.")
                IncScore ("Quest:<br> Mossy wing.", 1)
                DecreaseObjectCounter (questGiver, "avquests")
              }
              else if (QuestState(wingbat5_for_questGiverBig) = "Successful" and QuestState(wingbat4_for_questGiverBig) = "Successful" and QuestState(wingbat3_for_questGiverBig) = "Successful" and QuestState(wingbat2_for_questGiverBig) = "Successful" and QuestState(wingbat1_for_questGiverBig) = "Successful") {
                Ask ("Would you like to get more wings for me?<br>") {
                  if ((result)) {
                    QuestStart (wingbat1_for_questGiver, "Requested: 1 Mossy wing.")
                    IncScore ("Repeat Quest:<br> Mossy wing.", 2)
                    DecreaseObjectCounter (questGiver, "avquests")
                    QuestStart (wingbat2_for_questGiver, "Requested: 1 Greater wing.")
                    IncScore ("Repeat Quest:<br> Greater wing.", 2)
                    DecreaseObjectCounter (questGiver, "avquests")
                    QuestStart (wingbat3_for_questGiver, "Requested: 1 Super wing.")
                    IncScore ("Repeat Quest:<br> Super wing.", 2)
                    DecreaseObjectCounter (questGiver, "avquests")
                    QuestStart (wingbat4_for_questGiver, "Requested: 1 Mutant wing.")
                    IncScore ("Repeat Quest:<br> Mutant wing.", 2)
                    DecreaseObjectCounter (questGiver, "avquests")
                    QuestStart (wingbat5_for_questGiver, "Requested: 1 Strong wing.")
                    IncScore ("Repeat Quest:<br> Strong wing.", 2)
                    PrintCentered ("<br>")
                    DecreaseObjectCounter (questGiver, "avquests")
                  }
                  else {
                    msg ("Perhaps another time then. Thank you for your efforts!")
                  }
                }
              }
              else {
                msg ("One or more quests are already active. Please [Speak To] questGiverBig again to get the individual quest(s).<br>")
              }
              msg ("<br>questGiverBig has " + questGiverBig.tquests + " quests available.<br>With " + questGiverBig.avquests + " available to you.<br>")
              ListExits
            }
            default {
              PrintCentered ("You did not select a quest.")
            }
          }
        }
      ]]></speak>
      <giveanything type="script">
        msg ("I really do not have a need for that, but thank you for thinking of me.")
      </giveanything>
      <give type="scriptdictionary">
        <item key="wingbat5"><![CDATA[
          QuestEnd (wingbat5_for_questGiver, "You gave the questGiverBig a Strong Mongbat wing.")
          MoveObject (wingbat5, old_chamber)
          PrintCentered ("<br>")
          IncreaseObjectCounter (questGiver, "avquests")
          PrintCentered ("questGiverBig has " + questGiverBig.tquests + " quests available, with " + questGiverBig.avquests + " available to you.")
          PrintCentered ("<br>")
        ]]></item>
        <item key="wingbat4"><![CDATA[
          QuestEnd (wingbat4_for_questGiver, "You gave questGiverBig a Mutant Mongbat wing.")
          MoveObject (wingbat4, old_chamber)
          PrintCentered ("<br>")
          IncreaseObjectCounter (questGiver, "avquests")
          PrintCentered ("questGiverBig has " + questGiverBig.tquests + " quests available, with " + questGiverBig.avquests + " available to you.")
          PrintCentered ("<br>")
        ]]></item>
        <item key="wingbat3"><![CDATA[
          QuestEnd (wingbat3_for_questGiver, "You gave questGiverBig a Super Mongbat wing.")
          MoveObject (wingbat3, old_chamber)
          PrintCentered ("<br>")
          IncreaseObjectCounter (questGiver, "avquests")
          PrintCentered ("questGiverBig has " + questGiverBig.tquests + " quests available, with " + questGiverBig.avquests + " available to you.")
          PrintCentered ("<br>")
        ]]></item>
        <item key="wingbat2"><![CDATA[
          QuestEnd (wingbat2_for_questGiver, "You gave questGiverBig a Greater Mongbat wing.")
          MoveObject (wingbat2, old_chamber)
          PrintCentered ("<br>")
          IncreaseObjectCounter (questGiver, "avquests")
          PrintCentered ("questGiverBig has " + questGiverBig.tquests + " quests available, with " + questGiverBig.avquests + " available to you.")
          PrintCentered ("<br>")
        ]]></item>
        <item key="wingbat1"><![CDATA[
          QuestEnd (wingbat1_for_questGiver, "You gave questGiverBig a Mossy Mongbat wing.")
          MoveObject (wingbat1, old_chamber)
          PrintCentered ("<br>")
          IncreaseObjectCounter (questGiver, "avquests")
          PrintCentered ("questGiverBig has " + questGiverBig.tquests + " quests available, with " + questGiverBig.avquests + " available to you.")
          PrintCentered ("<br>")
        ]]></item>
      </give>
    </object>
	<object name="questGiverSmall">
      <inherit name="editor_object" />
      <inherit name="quester_type" />
      <alias>Cara</alias>
      <prefix>a local Quest Giver</prefix>
      <suffix type="string"></suffix>
      <drop type="boolean">false</drop>
      <feature_usegive />
      <avquests type="int">5</avquests>
      <tquests type="int">5</tquests>
      <pic>NPC_Vendor.png</pic>
      <listalias>Cara</listalias>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Speak</value>
      </displayverbs>
      <gender>they</gender>
      <article>them</article>
      <possessive>their</possessive>
    <inroomdescription>Perched on a beam attached to a covered trailer, sits Cara, a local Quest Giver.</inroomdescription>
      <giveanything type="script">
        msg ("I really do not have a need for that, but thank you for thinking of me.")
      </giveanything>
    </object>
  </object>

<!--
********************************************************************************
**
**																				10. MAP SECTION
**
** inherit_type: map_room
** Each ROOM must inherit map_room, which has 3 attributes: roommap, main_map, and mapz_yes. roommap contains the file name for that Room's Map, main_map contains the name of the main_map from the GAME object, and mapz_yes is True if the GAME object Map tab is set to allow Rooms to have maps. The player uses the MAP command to display the map, and the map_zoom images side-by-side if there is room, or stacked if not. If there is no map_zoom, it will only display the map. LIkewise if there is no map, it simply tells the player that a map is unavailable.
-->
  <tab>
    <parent>_GameEditor</parent>
    <mustnotinherit>editor_object</mustnotinherit>
    <caption>Map</caption>

    <control>
      <controltype>title</controltype>
      <caption>Game Map</caption>
    </control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Does this game have a map?</caption>
      <attribute>map_yes</attribute>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>The map itself is displayed using the MAP command while playing the GAME, and the layout is built by the code, (along with the description and exits).</caption>
      <onlydisplayif>this.map_yes</onlydisplayif>
	</control>
    <control>
      <controltype>title</controltype>
      <caption>Settings</caption>
      <onlydisplayif>this.map_yes</onlydisplayif>
    </control>
	<control>
	  <controltype>textbox</controltype>
      <caption>Type in the full URL of the Main Map image, (including http/https, e.g. https://www.YourDomain.com/images/).</caption>
      <attribute>http_img_dir</attribute>
      <onlydisplayif>this.map_yes</onlydisplayif>
	  <width>50</width>
    </control>
	<control>
	  <controltype>textbox</controltype>
      <caption>Type in the File name</caption>
      <attribute>map_main</attribute>
      <onlydisplayif>this.map_yes</onlydisplayif>
	  <width>50</width>
    </control>
    <control>
      <controltype>title</controltype>
      <caption>Room Maps (optional)</caption>
      <onlydisplayif>this.map_yes</onlydisplayif>
    </control>
	<control>
      <controltype>checkbox</controltype>
      <caption>Do you want the Rooms to have map images too? (requires game file reload)</caption>
      <attribute>map_room</attribute>
      <onlydisplayif>game.map_yes</onlydisplayif>
    </control>
  </tab>

  <tab>
	<parent>_ObjectEditor</parent>
    <mustnotinherit>editor_object</mustnotinherit>
    <caption>Room Map</caption>
    <onlydisplayif>game.map_room</onlydisplayif>

    <control>
      <controltype>title</controltype>
      <caption>Room Map</caption>
      <onlydisplayif>game.map_room</onlydisplayif>
    </control>
	<control>
	  <controltype>label</controltype>
	  <caption>Room Map is displayed by using the MAP command while playing a GAME. The Room Map appears next to the Game Map, (along with the description and exits, and uses the same image directory as the Game Map). </caption>
      <onlydisplayif>game.map_room</onlydisplayif>
	</control>
    <control>
      <controltype>title</controltype>
      <caption>Settings</caption>
      <onlydisplayif>game.map_room</onlydisplayif>
    </control>
	<control>
	  <controltype>textbox</controltype>
      <caption>Type in the File name</caption>
      <attribute>this_map_zoom</attribute>
      <onlydisplayif>game.map_room</onlydisplayif>
	  <width>50</width>
    </control>
  </tab>
<!--
********************************************************************************
**
**																				11. WEAPON SECTION
**
** The weap_room holds all of the Weapons that can drop as loot on enemies, or rewarded for completing quests, or simply given to players. These weapons all have various default values, but randomly inherit magical properties based on the Rarity assigned during the initialise. For example, if a Rarity is 10, then 1 Magical property will be added at Random, with Random values, but if the Rarity is 11, then 2 Magical Properties will be added at Random, with Random values, and so on in sets of 10 through 99, giving a weapon a max of 5 magical properties. This way, it will be rare for and 2 weapons to be identical beyond Rarity 10.
-->
  <object name="weap_room">
    <inherit name="editor_room" />
    <alias>wroom</alias>
    <mlist type="stringlist" />
    <dropdestination type="object">weap_room</dropdestination>
    <object name="assassinspike1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">4</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Assassin Spike</alias>
      <listalias>Assassin Spike</listalias>
      <pic type="string"></pic>
      <img>aspike_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">2</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">15</AosStrReq>
      <AosMinDam type="int">10</AosMinDam>
      <AosMaxDam type="int">12</AosMaxDam>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
      <attr name="_initialise_" type="script">
        obj = this
        set (obj, "pic", obj.addy + obj.img + obj.f_type)
      </attr>
    </object>
    <object name="axe1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">4</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Axe</alias>
      <listalias>Axe</listalias>
      <pic type="string"></pic>
      <img>axe_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">1</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">35</AosStrReq>
      <AosMinDam type="int">14</AosMinDam>
      <AosMaxDam type="int">16</AosMaxDam>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip the handle tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
    </object>
    <object name="bardiche1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">7</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Bardiche</alias>
      <listalias>Bardiche</listalias>
      <pic type="string"></pic>
      <img>bardiche_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">4</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">45</AosStrReq>
      <AosMinDam type="int">17</AosMinDam>
      <AosMaxDam type="int">18</AosMaxDam>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
    </object>
    <object name="mace1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">4</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Mace</alias>
      <listalias>Mace</listalias>
      <pic type="string"></pic>
      <img>mace_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">3</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">45</AosStrReq>
      <AosMinDam type="int">12</AosMinDam>
      <AosMaxDam type="int">14</AosMaxDam>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip the hilt tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
    </object>
    <object name="bow1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">6</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Bow</alias>
      <listalias>Bow</listalias>
      <pic type="string"></pic>
      <img>bow_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">5</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">30</AosStrReq>
      <AosMinDam type="int">15</AosMinDam>
      <AosMaxDam type="int">19</AosMaxDam>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You notch an arrow.</wearmsg>
      <removemsg>You sling the bow.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
    </object>
    <object name="spear1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">7</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Spear</alias>
      <listalias>Spear</listalias>
      <pic type="string"></pic>
      <img>spear_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">6</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">50</AosStrReq>
      <AosMinDam type="int">13</AosMinDam>
      <AosMaxDam type="int">15</AosMaxDam>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
    </object>
    <object name="warfork1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">9</volume>
      <attr name="s_name" type="string"></attr>
      <alias>War Fork</alias>
      <listalias>War Fork</listalias>
      <pic type="string"></pic>
      <img>warfork_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">7</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">45</AosStrReq>
      <AosMinDam type="int">12</AosMinDam>
      <AosMaxDam type="int">13</AosMaxDam>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
    </object>
    <object name="qstaff1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">4</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Quarter Staff</alias>
      <listalias>Quarter Staff</listalias>
      <pic type="string"></pic>
      <img>qstaff_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">8</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">30</AosStrReq>
      <AosMinDam type="int">11</AosMinDam>
      <AosMaxDam type="int">14</AosMaxDam>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grip it tightly.</wearmsg>
      <removemsg>You stow the weapon.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
    </object>
    <object name="longsword1">
      <inherit name="editor_object" />
      <inherit name="defaultweapon" />
      <inherit name="wearable" />
      <take />
      <volume type="int">7</volume>
      <attr name="s_name" type="string"></attr>
      <alias>Longsword</alias>
      <listalias>Longsword</listalias>
      <pic type="string"></pic>
      <img>longsword_1</img>
      <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
      <attr name="f_type"><![CDATA[.png'>]]></attr>
      <wtype type="int">9</wtype>
      <attr name="m_props" type="string"></attr>
      <AosStrReq type="int">35</AosStrReq>
      <AosMinDam type="int">15</AosMinDam>
      <AosMaxDam type="int">16</AosMaxDam>
      <feature_wearable />
      <wear_slots type="stringlist">
        <value>lefthand</value>
      </wear_slots>
      <wearmsg>You grasp the hilt tightly.</wearmsg>
      <removemsg>You sheath the sword.</removemsg>
      <usedefaultprefix />
      <attr name="wear_layer" type="int">0</attr>
      <wornverbs>Attack</wornverbs>
    </object>
    <object name="mag_props">
      <inherit name="editor_object" />
      <alphabetdict type="stringdictionary">
        <item>
          <key>AttackChance</key>
          <value>1</value>
        </item>
        <item>
          <key>BonusDex</key>
          <value>1</value>
        </item>
        <item>
          <key>BonusHits</key>
          <value>1</value>
        </item>
        <item>
          <key>BonusInt</key>
          <value>1</value>
        </item>
        <item>
          <key>BonusMana</key>
          <value>1</value>
        </item>
        <item>
          <key>BonusStam</key>
          <value>1</value>
        </item>
        <item>
          <key>BonusStr</key>
          <value>1</value>
        </item>
        <item>
          <key>Chaos</key>
          <value>1</value>
        </item>
        <item>
          <key>Cold</key>
          <value>1</value>
        </item>
        <item>
          <key>DefendChance</key>
          <value>1</value>
        </item>
        <item>
          <key>Direct</key>
          <value>1</value>
        </item>
        <item>
          <key>Energy</key>
          <value>1</value>
        </item>
        <item>
          <key>Fire</key>
          <value>1</value>
        </item>
        <item>
          <key>LowerManaCost</key>
          <value>1</value>
        </item>
        <item>
          <key>Luck</key>
          <value>1</value>
        </item>
        <item>
          <key>Physical</key>
          <value>1</value>
        </item>
        <item>
          <key>Poison</key>
          <value>1</value>
        </item>
        <item>
          <key>ReflectPhysical</key>
          <value>1</value>
        </item>
        <item>
          <key>RegenHits</key>
          <value>1</value>
        </item>
        <item>
          <key>RegenMana</key>
          <value>1</value>
        </item>
        <item>
          <key>RegenStam</key>
          <value>1</value>
        </item>
        <item>
          <key>ResistColdBonus</key>
          <value>1</value>
        </item>
        <item>
          <key>ResistEnergyBonus</key>
          <value>1</value>
        </item>
        <item>
          <key>ResistFireBonus</key>
          <value>1</value>
        </item>
        <item>
          <key>ResistPhysicalBonus</key>
          <value>1</value>
        </item>
        <item>
          <key>ResistPoisonBonus</key>
          <value>1</value>
        </item>
        <item>
          <key>SpellDamage</key>
          <value>1</value>
        </item>
        <item>
          <key>WeaponDamage</key>
          <value>1</value>
        </item>
        <item>
          <key>HitColdArea</key>
          <value>1</value>
        </item>
        <item>
          <key>HitDispel</key>
          <value>1</value>
        </item>
        <item>
          <key>HitEnergyArea</key>
          <value>1</value>
        </item>
        <item>
          <key>HitFireArea</key>
          <value>1</value>
        </item>
        <item>
          <key>HitFireball</key>
          <value>1</value>
        </item>
        <item>
          <key>HitHarm</key>
          <value>1</value>
        </item>
        <item>
          <key>HitLeechHits</key>
          <value>1</value>
        </item>
        <item>
          <key>HitLeechMana</key>
          <value>1</value>
        </item>
        <item>
          <key>HitLeechStam</key>
          <value>1</value>
        </item>
        <item>
          <key>HitLightning</key>
          <value>1</value>
        </item>
        <item>
          <key>HitLowerAttack</key>
          <value>1</value>
        </item>
        <item>
          <key>HitLowerDefend</key>
          <value>1</value>
        </item>
        <item>
          <key>HitMagicArrow</key>
          <value>1</value>
        </item>
        <item>
          <key>HitPhysicalArea</key>
          <value>1</value>
        </item>
      </alphabetdict>
    </object>
    <object name="alphabetdict">
      <inherit name="editor_object" />
      <alphabetdict type="stringdictionary">
        <item>
          <key>AttackChance</key>
          <value>Attack Chance</value>
        </item>
        <item>
          <key>BonusDex</key>
          <value>Bonus Dexterity</value>
        </item>
        <item>
          <key>BonusHits</key>
          <value>Bonus Hit Points</value>
        </item>
        <item>
          <key>BonusInt</key>
          <value>Bonus Intelligence</value>
        </item>
        <item>
          <key>BonusMana</key>
          <value>Bonus Mana</value>
        </item>
        <item>
          <key>BonusStam</key>
          <value>Bonus Stamina</value>
        </item>
        <item>
          <key>BonusStr</key>
          <value>Bonus Strength</value>
        </item>
        <item>
          <key>Chaos</key>
          <value>Chaos</value>
        </item>
        <item>
          <key>Cold</key>
          <value>Cold</value>
        </item>
        <item>
          <key>DefendChance</key>
          <value>Defense Chance</value>
        </item>
        <item>
          <key>Direct</key>
          <value>Direct</value>
        </item>
        <item>
          <key>Energy</key>
          <value>Energy</value>
        </item>
        <item>
          <key>Fire</key>
          <value>Fire</value>
        </item>
        <item>
          <key>LowerManaCost</key>
          <value>Lower Mana Cost</value>
        </item>
        <item>
          <key>Luck</key>
          <value>Luck</value>
        </item>
        <item>
          <key>Physical</key>
          <value>Physical</value>
        </item>
        <item>
          <key>Poison</key>
          <value>Poison</value>
        </item>
        <item>
          <key>ReflectPhysical</key>
          <value>Reflect Physical</value>
        </item>
        <item>
          <key>RegenHits</key>
          <value>Hit Point Regeneration</value>
        </item>
        <item>
          <key>RegenMana</key>
          <value>Mana Regeneration</value>
        </item>
        <item>
          <key>RegenStam</key>
          <value>Stamina Regeneration</value>
        </item>
        <item>
          <key>ResistColdBonus</key>
          <value>Cold Resistance</value>
        </item>
        <item>
          <key>ResistEnergyBonus</key>
          <value>Energy Resistance</value>
        </item>
        <item>
          <key>ResistFireBonus</key>
          <value>Fire Resistance</value>
        </item>
        <item>
          <key>ResistPhysicalBonus</key>
          <value>Physical Resistance</value>
        </item>
        <item>
          <key>ResistPoisonBonus</key>
          <value>Poison Resistance</value>
        </item>
        <item>
          <key>SpellDamage</key>
          <value>Spell Damage</value>
        </item>
        <item>
          <key>WeaponDamage</key>
          <value>Weapon Damage</value>
        </item>
        <item>
          <key>HitColdArea</key>
          <value>Hit Cold Area</value>
        </item>
        <item>
          <key>HitDispel</key>
          <value>Hit Dispel</value>
        </item>
        <item>
          <key>HitEnergyArea</key>
          <value>Hit Energy Area</value>
        </item>
        <item>
          <key>HitFireArea</key>
          <value>Hit Fire Area</value>
        </item>
        <item>
          <key>HitFireball</key>
          <value>Hit Fireball</value>
        </item>
        <item>
          <key>HitHarm</key>
          <value>Hit Harm</value>
        </item>
        <item>
          <key>HitLeechHits</key>
          <value>Leech Hit Points</value>
        </item>
        <item>
          <key>HitLeechMana</key>
          <value>Leech Mana</value>
        </item>
        <item>
          <key>HitLeechStam</key>
          <value>Leech Stamina</value>
        </item>
        <item>
          <key>HitLightning</key>
          <value>Hit Lightning</value>
        </item>
        <item>
          <key>HitLowerAttack</key>
          <value>Hit Lower Attack</value>
        </item>
        <item>
          <key>HitLowerDefend</key>
          <value>Hit Lower Defense</value>
        </item>
        <item>
          <key>HitMagicArrow</key>
          <value>Hit Magic Arrow</value>
        </item>
        <item>
          <key>HitPhysicalArea</key>
          <value>Hit Physical Area</value>
        </item>
      </alphabetdict>
    </object>
  </object>
<!--
********************************************************************************
**
**																				12. BASE TYPES SECTION (NPCs, Weapons, Enemies, Rooms)
-->
  <type name="fighter_type">
    <inherit name="editor_object" />
    <inherit name="hirling_type" />
    <alias>NPC Fighter</alias>
    <drop type="boolean">false</drop>
    <attr name="feature_usegive" type="boolean">false</attr>
    <pic>NPC_Fighter.png</pic>
    <visible type="boolean">false</visible>
    <health type="int">100</health>
    <attr name="max_dam" type="int">0</attr>
    <maxhealth type="int">100</maxhealth>
    <classType type="int">0</classType>
    <class type="string"></class>
    <attr name="hiring_fee" type="int">45</attr>
    <partner type="int">0</partner>
    <npc type="string"></npc>
    <look type="script"><![CDATA[
      msg ("<br />Before you stands, Page " + this.alias + " the Initiate.<br />" + this.alias + " has been a Page far longer than most, and is hoping to prove themselves in combat eventually.<br />")
      Picture ("NPC_Fighter.png")
      msg ("<br />")
      msg ("<div id='resists_div3'>")
      msg ("<table width='100%'><tbody id='resists_Fighter'><tr><td style='text-align:left;'>Fighter's Resists:</td></tr>")
      OutputTextNoBr ("<tr><td>P: <span class=\"phys-indicator\" style=\"background-color:pink;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.phys-indicator').css('padding-right', '" + (this.physical - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"fire-indicator\" style=\"background-color:orangered;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.fire-indicator').css('padding-right', '" + (this.fire - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"cold-indicator\" style=\"background-color:aqua;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.cold-indicator').css('padding-right', '" + (this.cold - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"poi-indicator\" style=\"background-color:yellowgreen;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.poi-indicator').css('padding-right', '" + (this.poison - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"ener-indicator\" style=\"background-color:yellow;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.ener-indicator').css('padding-right', '" + (this.energy - 7) + "px');")
    ]]></look>
  </type>
  <type name="mage_type">
    <inherit name="editor_object" />
    <inherit name="hirling_type" />
    <alias>NPC Mage</alias>
    <drop type="boolean">false</drop>
    <attr name="feature_usegive" type="boolean">false</attr>
    <pic>NPC_Mage.png</pic>
    <visible type="boolean">false</visible>
    <health type="int">100</health>
    <attr name="max_dam" type="int">0</attr>
    <maxhealth type="int">100</maxhealth>
    <classType type="int">0</classType>
    <class type="string"></class>
    <partner type="int">0</partner>
    <npc type="string"></npc>
    <HitChance type="double">0</HitChance>
    <look type="script"><![CDATA[
      msg ("<br />Before you stands, " + this.name + " the Shepherd.<br />" + this.name + " likes to pick up extra coin on the weekends with adventure contracts, but return before Monday morning!<br />")
      Picture ("NPC_Mage.png")
      msg ("<br />")
      msg ("<div id='resists_div3'>")
      msg ("<table width='100%'><tbody id='resists_Mage'><tr><td style='text-align:left;'>Mage's Resists:</td></tr>")
      OutputTextNoBr ("<tr><td>P: <span class=\"phys-indicator\" style=\"background-color:pink;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.phys-indicator').css('padding-right', '" + (this.physical - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"fire-indicator\" style=\"background-color:orangered;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.fire-indicator').css('padding-right', '" + (this.fire - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"cold-indicator\" style=\"background-color:aqua;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.cold-indicator').css('padding-right', '" + (this.cold - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"poi-indicator\" style=\"background-color:yellowgreen;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.poi-indicator').css('padding-right', '" + (this.poison - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"ener-indicator\" style=\"background-color:yellow;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.ener-indicator').css('padding-right', '" + (this.energy - 7) + "px');")
    ]]></look>
  </type>
  <type name="archer_type">
    <inherit name="editor_object" />
    <inherit name="hirling_type" />
    <alias>NPC Archer</alias>
    <drop type="boolean">false</drop>
    <attr name="feature_usegive" type="boolean">false</attr>
    <pic>NPC_Archer.png</pic>
    <visible type="boolean">false</visible>
    <health type="int">100</health>
    <attr name="max_dam" type="int">0</attr>
    <maxhealth type="int">100</maxhealth>
    <classType type="int">0</classType>
    <class type="string"></class>
    <partner type="int">0</partner>
    <npc type="string"></npc>
    <HitChance type="double">35</HitChance>
    <look type="script"><![CDATA[
      msg ("<br />Before you stands, " + this.name + " the Shepherd.<br />" + this.name + " is known in these parts as a creator of fine crafts, but very little work has set her on a new path.<br />")
      Picture ("NPC_Archer.png")
      msg ("<br />")
      msg ("<div id='resists_div3'>")
      msg ("<table width='100%'><tbody id='resists_Archer'><tr><td style='text-align:left;'>Archer's Resists:</td></tr>")
      OutputTextNoBr ("<tr><td>P: <span class=\"phys-indicator\" style=\"background-color:pink;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.phys-indicator').css('padding-right', '" + (this.physical - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"fire-indicator\" style=\"background-color:orangered;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.fire-indicator').css('padding-right', '" + (this.fire - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"cold-indicator\" style=\"background-color:aqua;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.cold-indicator').css('padding-right', '" + (this.cold - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"poi-indicator\" style=\"background-color:yellowgreen;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.poi-indicator').css('padding-right', '" + (this.poison - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"ener-indicator\" style=\"background-color:yellow;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.ener-indicator').css('padding-right', '" + (this.energy - 7) + "px');")
    ]]></look>
  </type>
  <type name="rogue_type">
    <inherit name="editor_object" />
    <inherit name="hirling_type" />
    <alias>NPC Rogue</alias>
    <drop type="boolean">false</drop>
    <attr name="feature_usegive" type="boolean">false</attr>
    <pic>NPC_Archer.png</pic>
    <visible type="boolean">false</visible>
    <health type="int">100</health>
    <attr name="max_dam" type="int">0</attr>
    <maxhealth type="int">100</maxhealth>
    <classType type="int">0</classType>
    <class type="string"></class>
    <partner type="int">0</partner>
    <npc type="string"></npc>
    <HitChance type="double">78</HitChance>
    <look type="script"><![CDATA[
      msg ("<br>Before you stands, " + this.name + " the Shepherd.<br />" + this.name + " new to the area, they are anxious to get to work..<br>")
      Picture ("NPC_Archer.png")
      msg ("<br>")
      msg ("<div id='resists_div3'>")
      msg ("<table width='100%'><tbody id='resists_Archer'><tr><td style='text-align:left;'>Rogue's Resists:</td></tr>")
      OutputTextNoBr ("<tr><td>P: <span class=\"phys-indicator\" style=\"background-color:pink;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.phys-indicator').css('padding-right', '" + (this.physical - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"fire-indicator\" style=\"background-color:orangered;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.fire-indicator').css('padding-right', '" + (this.fire - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"cold-indicator\" style=\"background-color:aqua;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.cold-indicator').css('padding-right', '" + (this.cold - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"poi-indicator\" style=\"background-color:yellowgreen;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.poi-indicator').css('padding-right', '" + (this.poison - 7) + "px');")
      OutputTextNoBr ("<tr><td>P: <span class=\"ener-indicator\" style=\"background-color:yellow;color:#000;font-size:smaller;\">&nbsp</span></td></tr><br />")
      JS.eval ("$('.ener-indicator').css('padding-right', '" + (this.energy - 7) + "px');")
    ]]></look>
  </type>
  <type name="recruiter_type">
    <inherit name="editor_object" />
    <inherit name="npc_base" />
    <alias>Robins</alias>
    <prefix type="string"></prefix>
    <suffix>the Local Recruiter</suffix>
    <drop type="boolean">false</drop>
    <feature_usegive />
    <pic>lady3.png</pic>
    <listalias>Robins</listalias>
    <alt type="stringlist">
      <value>Rob</value>
    </alt>
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Speak</value>
    </displayverbs>
    <gender>they</gender>
    <article>they</article>
    <possessive>theirs</possessive>
    <inroomdescription>Near the edge of the road is a small table, with a stool behind it, on top of which Robins is sitting.</inroomdescription>
    <partner type="int">1</partner>
    <archer type="boolean">false</archer>
    <attr name="archer_fee" type="int">0</attr>
    <fighter type="boolean">false</fighter>
    <attr name="fighter_fee" type="int">0</attr>
    <mage type="boolean">false</mage>
    <attr name="mage_fee" type="int">0</attr>
    <rogue type="boolean">false</rogue>
    <attr name="rogue_fee" type="int">0</attr>
    <giveanything type="script">
      msg ("I really do not have a need for that, but thank you for thinking of me.")
    </giveanything>
    <look type="script"><![CDATA[
      msg ("<br />Before you sits, Robins.<br />It is widely known throughout this shire that Robins was an excellent purveryor of adventuring talent, and even offered well-trained first timers <br />")
      Picture ("NPC_Vendor.png")
      msg ("<br />")
    ]]></look>
    <give type="scriptdictionary" />
  </type>
  <type name="quester_type">
    <inherit name="editor_object" />
    <inherit name="npc_base" />
    <alias>NPC Quester</alias>
    <prefix type="string"></prefix>
    <suffix>a Quest Giver</suffix>
    <drop type="boolean">false</drop>
    <feature_usegive />
    <pic>NPC_Vendor.png</pic>
    <displayverbs type="stringlist">
      <value>Look at</value>
    </displayverbs>
    <gender>they</gender>
    <article>they</article>
    <possessive>theirs</possessive>
    <partner type="int">4</partner>
    <giveanything type="script">
      msg ("I really do not have a need for that, but thank you for thinking of me.")
    </giveanything>
    <look type="script"><![CDATA[
      msg ("<br />Perched on a beam attached to a covered trailer, sits NPC Quester, a Quest Giver.<br />")
      Picture ("NPC_Vendor.png")
      msg ("<br />")
    ]]></look>
    <give type="scriptdictionary" />
  </type>
  <type name="vendor_type">
    <inherit name="editor_object" />
    <inherit name="npc_base" />
    <alias>NPC Vendor</alias>
    <pic>NPC_Vendor.png</pic>
    <visible />
    <health type="int">100</health>
    <attr name="max_dam" type="int">0</attr>
    <maxhealth type="int">100</maxhealth>
    <partner type="int">3</partner>
    <weapon type="object">qstaff2</weapon>
  </type>
  <type name="hirling_type">
    <inherit name="editor_object" />
    <inherit name="npc_base" />
    <alias>NPC</alias>
    <AttackChance type="int">0</AttackChance>
    <BonusDex type="int">0</BonusDex>
    <BonusHits type="int">0</BonusHits>
    <BonusInt type="int">0</BonusInt>
    <BonusMana type="int">0</BonusMana>
    <BonusStam type="int">0</BonusStam>
    <BonusStr type="int">0</BonusStr>
    <Chaos type="int">0</Chaos>
    <DefendChance type="int">0</DefendChance>
    <Direct type="int">0</Direct>
    <Luck type="int">0</Luck>
    <NightSight type="int">0</NightSight>
    <ReflectPhysical type="int">0</ReflectPhysical>
    <RegenHits type="int">0</RegenHits>
    <RegenMana type="int">0</RegenMana>
    <RegenStam type="int">0</RegenStam>
    <ResistColdBonus type="int">0</ResistColdBonus>
    <ResistEnergyBonus type="int">0</ResistEnergyBonus>
    <ResistFireBonus type="int">0</ResistFireBonus>
    <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
    <ResistPoisonBonus type="int">0</ResistPoisonBonus>
    <SpellDamage type="int">0</SpellDamage>
    <WeaponDamage type="int">0</WeaponDamage>
    <HitColdArea type="int">0</HitColdArea>
    <HitDispel type="int">0</HitDispel>
    <HitEnergyArea type="int">0</HitEnergyArea>
    <HitFireArea type="int">0</HitFireArea>
    <HitFireball type="int">0</HitFireball>
    <HitHarm type="int">0</HitHarm>
    <HitLeechHits type="int">0</HitLeechHits>
    <HitLeechMana type="int">0</HitLeechMana>
    <HitLeechStam type="int">0</HitLeechStam>
    <HitLightning type="int">0</HitLightning>
    <HitLowerAttack type="int">0</HitLowerAttack>
    <HitLowerDefend type="int">0</HitLowerDefend>
    <HitMagicArrow type="int">0</HitMagicArrow>
    <HitPhysicalArea type="int">0</HitPhysicalArea>
    <ColdResist type="int">0</ColdResist>
    <PhysicalResist type="int">0</PhysicalResist>
    <FireResist type="int">0</FireResist>
    <PoisonResist type="int">0</PoisonResist>
    <EnergyResist type="int">0</EnergyResist>
    <PhysicalDam type="int">0</PhysicalDam>
    <ColdDam type="int">0</ColdDam>
    <FireDam type="int">0</FireDam>
    <PoisonDam type="int">0</PoisonDam>
    <EnergyDam type="int">0</EnergyDam>
    <DirectDam type="int">0</DirectDam>
    <ChaosDam type="int">0</ChaosDam>
    <HitChance type="double">30</HitChance>
    <LowerManaCost type="int">0</LowerManaCost>
    <attr name="hiring_fee" type="int">75</attr>
  </type>
  <type name="npc_base">
    <inherit name="editor_object" />
    <alias>NPC</alias>
    <drop type="boolean">false</drop>
    <attr name="feature_usegive" type="boolean">false</attr>
    <str type="int">0</str>
    <int type="int">0</int>
    <dex type="int">0</dex>
    <dam type="int">1</dam>
    <stam type="int">0</stam>
    <mp type="int">0</mp>
    <Pluck type="int">0</Pluck>
    <maxhealth type="int">100</maxhealth>
    <objectType type="int">5</objectType>
    <giveanything type="script">
      msg ("I really do not have a need for that, but thank you for thinking of me.")
    </giveanything>
  </type>
  <type name="mossy_type">
    <inherit name="container_open" />
    <inherit name="mongbat_base" />
    <alias>Mossy Mongbat</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">255</attr>
    <attr name="max_hp" type="int">270</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Mossy Mongbat</listalias>
    <pic>mongbat_1.png</pic>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>mossy</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">mongbatdead_12.png</attr>
    <level type="int">1</level>
    <attr name="_initialise_" type="script">
      multiplier = 1
      gold_base = GetRandomInt(10,25)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(2,4) + multiplier))
      set (this, "energy", (GetRandomInt(30,40) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(255,270))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="greater_type">
    <inherit name="container_open" />
    <inherit name="mongbat_base" />
    <alias>Greater Mongbat</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">355</attr>
    <attr name="max_hp" type="int">370</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Greater Mongbat</listalias>
    <pic>mongbat_2.png</pic>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>greater</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">mongbatdead_12.png</attr>
    <level type="int">2</level>
    <attr name="_initialise_" type="script">
      multiplier = 2
      gold_base = GetRandomInt(15,35)
      set (this, "gold", (gold_base * multiplier))
      set (this, "gold", (gold_base + multiplier))
      set (this, "gold", (gold_base + multiplier))
      set (this, "max_dam", (GetRandomInt(8,10) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(30,40) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(355,370))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="super_type">
    <inherit name="container_open" />
    <inherit name="mongbat_base" />
    <alias>Super Mongbat</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">555</attr>
    <attr name="max_hp" type="int">570</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Super Mongbat</listalias>
    <pic>mongbat_3.png</pic>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>super</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">mongbatdead_34.png</attr>
    <level type="int">3</level>
    <attr name="_initialise_" type="script">
      multiplier = 3
      gold_base = GetRandomInt(25,40)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(10,14) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(30,40) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(30,40) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(555,570))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="mutant_type">
    <inherit name="container_open" />
    <inherit name="mongbat_base" />
    <alias>Mutant Mongbat</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">475</attr>
    <attr name="max_hp" type="int">525</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Mutant Mongbat</listalias>
    <pic>mongbat_4.png</pic>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>mutant</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">mongbatdead_34.png</attr>
    <level type="int">4</level>
    <attr name="_initialise_" type="script">
      multiplier = 4
      gold_base = GetRandomInt(35,45)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(16,18) + multiplier))
      set (this, "energy", (GetRandomInt(30,40) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(475,525))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="strong_type">
    <inherit name="editor_object" />
    <inherit name="mongbat_base" />
    <alias>Strong Mongbat</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">325</attr>
    <attr name="max_hp" type="int">375</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Strong Mongbat</listalias>
    <pic>mongbat_5.png</pic>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>strong</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">mongbatdead_5.png</attr>
    <level type="int">4</level>
    <attr name="_initialise_" type="script">
      multiplier = 5
      gold_base = GetRandomInt(40,50)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(22,24) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(30,40) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(325,375))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="mongbat_base">
    <inherit name="editor_object" />
    <inherit name="enemy_base" />
    <alias>Mongbat</alias>
    <attr name="current_hp" type="int">0</attr>
    <dam type="int">0</dam>
    <attr name="max_dam" type="int">0</attr>
    <mob type="int">1</mob>
    <alive />
    <not_poisoned />
    <poisoned type="boolean">false</poisoned>
    <feature_container />
    <close type="boolean">false</close>
    <hidechildren />
    <listchildren />
    <isopen type="boolean">false</isopen>
    <chaos type="int">0</chaos>
    <defense type="int">0</defense>
    <lootable type="double">0</lootable>
    <desclive>A tiny, brownish-green monkey, with wings.</desclive>
    <descdead>A tiny pile of brownish green-colored goo is all that remains of the small and fierce mongbat.</descdead>
    <carrier type="boolean">false</carrier>
    <questLoot type="object">questObject</questLoot>
    <attr name="changedcurrent_hp" type="script"><![CDATA[
      // dbglog ("[changedcurrent_hp for " + this.name + "] running...")
      if (this.current_hp < 1) {
        if (not HasAttribute(this, "times_killed")) {
          this.times_killed = 0
        }
        this.times_killed = this.times_killed + 1
        if (this.times_killed = 1) {
          if (GetBoolean(this, "poisoned")) {
            DisableTimer (poison_tick1)
          }
          if (GetBoolean(this, "carrier")) {
            CloneObjectAndMove (this.questLoot, this)
          }
          if (this.alias = "Mossy Mongbat") {
            CloneObjectAndMove (wingbat1, this)
          }
          else if (this.alias = "Greater Mongbat") {
            CloneObjectAndMove (wingbat2, this)
          }
          else if (this.alias = "Super Mongbat") {
            CloneObjectAndMove (wingbat3, this)
          }
          else if (this.alias = "Mutant Mongbat") {
            CloneObjectAndMove (wingbat4, this)
          }
          else if (this.alias = "Strong Mongbat") {
            CloneObjectAndMove (wingbat5, this)
          }
          // dbglog ("[changedcurrent_hp for " + this.name + "]: Calling HelperOpenObject(this).")
          // TODO: I don't know what this does, but it doesn't seem to list the objects contained.
          HelperOpenObject (this)
          // TODO: Raist may wish to change this text.
          if (not HasAttribute (temp_file, "obj_dict")) {
            // TODO: I need to make this bit into a function that sets an object list
            // as each script name's key.
            temp_file.obj_dict = NewObjectDictionary()
          }
          DictionaryAdd (temp_file.obj_dict, "changedcurrent_hp", this)
          // Using a SetTurnTimeout with 0 so this won't trigger until the end of the turn.
          // Otherwise, it says like "Thomas [attacks] the Mutant Mongbat (Dead)" or something like that.
          // TODO: That shouldn't happen. Thomas's dumb ass should not attack a dead enemy!
          SetTurnTimeout (0) {
            obj = temp_file.obj_dict["changedcurrent_hp"]
            DictionaryRemove (temp_file.obj_dict, "changedcurrent_hp")
            obj.alias = obj.alias + " (Dead)"
            obj.listalias = obj.alias
            // This makes it list the objects contained upon death.
            obj.hidechildren = false
            UpdateStatusAttributes
            CheckDarkness
            UpdateObjectLinks
          }
        }
        // dbglog (this.name + " just died.")
        if (this.times_killed > 1) {
          // dbglog ("....again. Times this has died: " + ToString(this.times_killed))
        }
        this.mob = 0
      }
    ]]></attr>
  </type>
  <type name="moldy_type">
    <inherit name="container_open" />
    <inherit name="ettin_base" />
    <alias>Moldy Ettin</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">255</attr>
    <attr name="max_hp" type="int">270</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Moldy Ettin</listalias>
    <pic>ettin_1.png</pic>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>moldy</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ettindead_1.png</attr>
    <level type="int">1</level>
    <attr name="_initialise_" type="script">
      multiplier = 1
      gold_base = GetRandomInt(10,25)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(2,4) + multiplier))
      set (this, "energy", (GetRandomInt(30,40) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(255,270))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="grumpy_type">
    <inherit name="container_open" />
    <inherit name="ettin_base" />
    <alias>Grumpy Ettin</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">355</attr>
    <attr name="max_hp" type="int">370</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Grumpy Ettin</listalias>
    <pic>ettin_2.png</pic>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>grumpy</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ettindead_1.png</attr>
    <level type="int">2</level>
    <attr name="_initialise_" type="script">
      multiplier = 2
      gold_base = GetRandomInt(15,35)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(8,10) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(30,40) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(355,370))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="giant_type">
    <inherit name="container_open" />
    <inherit name="ettin_base" />
    <alias>Giant Ettin</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">555</attr>
    <attr name="max_hp" type="int">570</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Giant Ettin</listalias>
    <pic>ettin_3.png</pic>
    <feature_container />
    <close type="boolean">false</close>
    <hidechildren />
    <listchildren />
    <isopen type="boolean">false</isopen>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>giant</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ettindead_1.png</attr>
    <level type="int">3</level>
    <attr name="_initialise_" type="script">
      multiplier = 3
      gold_base = GetRandomInt(25,40)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(10,14) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(30,40) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(30,40) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(555,570))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="massive_type">
    <inherit name="container_open" />
    <inherit name="ettin_base" />
    <alias>Massive Ettin</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">475</attr>
    <attr name="max_hp" type="int">525</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Massive Ettin</listalias>
    <pic>ettin_4.png</pic>
    <close type="boolean">false</close>
    <hidechildren />
    <listchildren />
    <isopen type="boolean">false</isopen>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>massive</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ettindead_1.png</attr>
    <level type="int">4</level>
    <attr name="_initialise_" type="script">
      multiplier = 4
      gold_base = GetRandomInt(35,45)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(16,18) + multiplier))
      set (this, "energy", (GetRandomInt(30,40) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(475,525))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="enraged_type">
    <inherit name="container_open" />
    <inherit name="ettin_base" />
    <alias>Enraged Ettin</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">325</attr>
    <attr name="max_hp" type="int">375</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Enraged Ettin</listalias>
    <pic>ettin_5.png</pic>
    <close type="boolean">false</close>
    <hidechildren />
    <listchildren />
    <isopen type="boolean">false</isopen>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>enraged</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ettindead_1.png</attr>
    <level type="int">5</level>
    <attr name="_initialise_" type="script">
      multiplier = 5
      gold_base = GetRandomInt(40,50)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(22,24) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(30,40) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(325,375))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="ettin_base">
    <inherit name="editor_object" />
    <inherit name="enemy_base" />
    <alias>Ettin</alias>
    <attr name="current_hp" type="int">0</attr>
    <dam type="int">0</dam>
    <attr name="max_dam" type="int">0</attr>
    <mob type="int">1</mob>
    <alive />
    <not_poisoned />
    <poisoned type="boolean">false</poisoned>
    <feature_container />
    <close type="boolean">false</close>
    <hidechildren />
    <listchildren />
    <isopen type="boolean">false</isopen>
    <chaos type="int">0</chaos>
    <defense type="int">0</defense>
    <lootable type="double">0</lootable>
    <desclive>A tall, brown, two-headed hulk.</desclive>
    <descdead>A large pile of brown goo is all that remains of the huge and terrifying ettin.</descdead>
    <attr name="changedcurrent_hp" type="script"><![CDATA[
      // dbglog ("[changedcurrent_hp for " + this.name + "] running...")if (this.current_hp < 1) {
        if (this.current_hp < 1) {
          if (not HasAttribute(this, "times_killed")) {
            this.times_killed = 0
          }
          this.times_killed = this.times_killed + 1
          if (this.times_killed = 1) {
            if (GetBoolean(this, "poisoned")) {
              DisableTimer (poison_tick1)
            }
            if (GetBoolean(this, "carrier")) {
              CloneObjectAndMove (this.questLoot, this)
            }
            if (this.alias = "Moldy Ettin") {
              CloneObjectAndMove (wingbat1, this)
            }
            else if (this.alias = "Grumpy Ettin") {
              CloneObjectAndMove (wingbat2, this)
            }
            else if (this.alias = "Giant Ettin") {
              CloneObjectAndMove (wingbat3, this)
            }
            else if (this.alias = "Massive Ettin") {
              CloneObjectAndMove (wingbat4, this)
            }
            else if (this.alias = "Enraged Ettin") {
              CloneObjectAndMove (wingbat5, this)
            }
            HelperOpenObject (this)
            if (not HasAttribute (temp_file, "obj_dict")) {
              // TODO: I need to make this bit into a function that sets an object list
              // as each script name's key.
              temp_file.obj_dict = NewObjectDictionary()
            }
            DictionaryAdd (temp_file.obj_dict, "changedcurrent_hp", this)
            // Using a SetTurnTimeout with 0 so this won't trigger until the end of the turn.
            // Otherwise, it says like "Thomas [attacks] the Mutant Mongbat (Dead)" or something like that.
            // TODO: That shouldn't happen. Thomas's dumb ass should not attack a dead enemy!
            SetTurnTimeout (0) {
              obj = temp_file.obj_dict["changedcurrent_hp"]
              DictionaryRemove (temp_file.obj_dict, "changedcurrent_hp")
              if (obj.poisoned = True) {
                DisableTimer (poison_tick1)
              }
              obj.alias = obj.alias + " (Dead)"
              obj.listalias = obj.alias
              // This makes it list the objects contained upon death.
              obj.hidechildren = false
              UpdateStatusAttributes
              CheckDarkness
              UpdateObjectLinks
            }
          }
          // dbglog (this.name + " just died.")
          if (this.times_killed > 1) {
            // dbglog ("....again. Times this has died: " + ToString(this.times_killed))
          }
          this.mob = 0
        }
    ]]></attr>
  </type>
  <type name="grouchy_type">
    <inherit name="container_open" />
    <inherit name="ogre_base" />
    <alias>Grouchy Ogre</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">255</attr>
    <attr name="max_hp" type="int">270</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Grouchy Ogre</listalias>
    <pic>ogre_1.png</pic>
    <direct type="int">0</direct>
    <alt type="stringlist">
      <value>grouchy</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ogredead_1.png</attr>
    <level type="int">1</level>
    <attr name="_initialise_" type="script">
      multiplier = 1
      gold_base = GetRandomInt(10,25)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(2,4) + multiplier))
      set (this, "energy", (GetRandomInt(30,40) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(255,270))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="angry_type">
    <inherit name="container_open" />
    <inherit name="ogre_base" />
    <alias>Angry Ogre</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">355</attr>
    <attr name="max_hp" type="int">370</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Angry Ogre</listalias>
    <pic>ogre_2.png</pic>
    <alt type="stringlist">
      <value>angry</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ogredead_1.png</attr>
    <level type="int">2</level>
    <attr name="_initialise_" type="script">
      multiplier = 2
      gold_base = GetRandomInt(15,35)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(8,10) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(30,40) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(355,370))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="stinky_type">
    <inherit name="container_open" />
    <inherit name="ogre_base" />
    <alias>Stinky Ogre</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">555</attr>
    <attr name="max_hp" type="int">570</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Stinky Ogre</listalias>
    <pic>ogre_3.png</pic>
    <alt type="stringlist">
      <value>stinky</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <chaos type="int">0</chaos>
    <lootable type="double">0</lootable>
    <status>Alive</status>
    <attr name="img_dead">ogredead_1.png</attr>
    <level type="int">3</level>
    <attr name="_initialise_" type="script">
      multiplier = 3
      gold_base = GetRandomInt(25,40)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(10,14) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(30,40) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(30,40) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(555,570))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="tough_type">
    <inherit name="container_open" />
    <inherit name="ogre_base" />
    <alias>Tough Ogre</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">475</attr>
    <attr name="max_hp" type="int">525</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Tough Ogre</listalias>
    <pic>ogre_4.png</pic>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ogredead_1.png</attr>
    <level type="int">4</level>
    <attr name="_initialise_" type="script">
      multiplier = 4
      gold_base = GetRandomInt(35,45)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(16,18) + multiplier))
      set (this, "energy", (GetRandomInt(30,40) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(475,525))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="putrid_type">
    <inherit name="container_open" />
    <inherit name="ogre_base" />
    <alias>Putrid Ogre</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">325</attr>
    <attr name="max_hp" type="int">375</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Putrid Ogre</listalias>
    <pic>ogre_5.png</pic>
    <alt type="stringlist">
      <value>putrid</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ogredead_1.png</attr>
    <level type="int">5</level>
    <attr name="_initialise_" type="script">
      multiplier = 5
      gold_base = GetRandomInt(40,50)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(22,24) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(30,40) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(325,375))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="ogre_base">
    <inherit name="editor_object" />
    <inherit name="enemy_base" />
    <alias>Ogre</alias>
    <attr name="current_hp" type="int">0</attr>
    <dam type="int">0</dam>
    <attr name="max_dam" type="int">0</attr>
    <mob type="int">1</mob>
    <alive />
    <not_poisoned />
    <poisoned type="boolean">false</poisoned>
    <feature_container />
    <close type="boolean">false</close>
    <hidechildren />
    <listchildren />
    <isopen type="boolean">false</isopen>
    <chaos type="int">0</chaos>
    <defense type="int">0</defense>
    <lootable type="double">0</lootable>
    <desclive>A big brown, bumbling ogre.</desclive>
    <descdead>A giant pile of brown goo is all that remains of the bothersome ogre.</descdead>
    <attr name="changedcurrent_hp" type="script"><![CDATA[
      // dbglog ("[changedcurrent_hp for " + this.name + "] running...")if (this.current_hp < 1) {
        if (this.current_hp < 1) {
          if (not HasAttribute(this, "times_killed")) {
            this.times_killed = 0
          }
          this.times_killed = this.times_killed + 1
          if (this.times_killed = 1) {
            if (GetBoolean(this, "poisoned")) {
              DisableTimer (poison_tick1)
            }
            if (GetBoolean(this, "carrier")) {
              CloneObjectAndMove (this.questLoot, this)
            }
            if (this.alias = "Grouchy Ogre") {
              CloneObjectAndMove (wingbat1, this)
            }
            else if (this.alias = "Angry Ogre") {
              CloneObjectAndMove (wingbat2, this)
            }
            else if (this.alias = "Stinky Ogre") {
              CloneObjectAndMove (wingbat3, this)
            }
            else if (this.alias = "Tough Ogre") {
              CloneObjectAndMove (wingbat4, this)
            }
            else if (this.alias = "Putrid Ogre") {
              CloneObjectAndMove (wingbat5, this)
            }
            // dbglog ("[changedcurrent_hp for " + this.name + "]: Calling HelperOpenObject(this).")
            // TODO: I don't know what this does, but it doesn't seem to list the objects contained.
            HelperOpenObject (this)
            // TODO: Raist may wish to change this text.
            if (not HasAttribute (temp_file, "obj_dict")) {
              // TODO: I need to make this bit into a function that sets an object list
              // as each script name's key.
              temp_file.obj_dict = NewObjectDictionary()
            }
            DictionaryAdd (temp_file.obj_dict, "changedcurrent_hp", this)
            // Using a SetTurnTimeout with 0 so this won't trigger until the end of the turn.
            // Otherwise, it says like "Thomas [attacks] the Mutant Mongbat (Dead)" or something like that.
            // TODO: That shouldn't happen. Thomas's dumb ass should not attack a dead enemy!
            SetTurnTimeout (0) {
              obj = temp_file.obj_dict["changedcurrent_hp"]
              DictionaryRemove (temp_file.obj_dict, "changedcurrent_hp")
              if (obj.poisoned = True) {
                DisableTimer (poison_tick1)
              }
              obj.alias = obj.alias + " (Dead)"
              obj.listalias = obj.alias
              // This makes it list the objects contained upon death.
              obj.hidechildren = false
              UpdateStatusAttributes
              CheckDarkness
              UpdateObjectLinks
            }
          }
          // dbglog (this.name + " just died.")
          if (this.times_killed > 1) {
            // dbglog ("....again. Times this has died: " + ToString(this.times_killed))
          }
          this.mob = 0
        }
    ]]></attr>
  </type>
  <type name="mangy_type">
    <inherit name="container_open" />
    <inherit name="orc_base" />
    <alias>Mangy Orc</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">255</attr>
    <attr name="max_hp" type="int">270</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Mangy Orc</listalias>
    <pic>ogre_1.png</pic>
    <alt type="stringlist">
      <value>mangy</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">orcdead_1.png</attr>
    <level type="int">1</level>
    <attr name="_initialise_" type="script">
      multiplier = 1
      gold_base = GetRandomInt(10,25)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(2,4) + multiplier))
      set (this, "energy", (GetRandomInt(30,40) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(255,270))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="hated_type">
    <inherit name="container_open" />
    <inherit name="orc_base" />
    <alias>Hated Orc</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">355</attr>
    <attr name="max_hp" type="int">370</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Hated Orc</listalias>
    <pic>ogre_2.png</pic>
    <alt type="stringlist">
      <value>hated</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">orcdead_1.png</attr>
    <level type="int">2</level>
    <attr name="_initialise_" type="script">
      multiplier = 2
      gold_base = GetRandomInt(15,35)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(8,10) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(30,40) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(355,370))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="chaos_type">
    <inherit name="container_open" />
    <inherit name="orc_base" />
    <alias>Chaos Orc</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">555</attr>
    <attr name="max_hp" type="int">570</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Chaos Orc</listalias>
    <pic>orc_3.png</pic>
    <alt type="stringlist">
      <value>chaos</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">orcdead_1.png</attr>
    <level type="int">3</level>
    <attr name="_initialise_" type="script">
      multiplier = 3
      gold_base = GetRandomInt(25,40)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(10,14) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(30,40) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(30,40) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(555,570))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="blitzed_type">
    <inherit name="container_open" />
    <inherit name="orc_base" />
    <alias>Blitzed Orc</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">475</attr>
    <attr name="max_hp" type="int">525</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Blitzed Orc</listalias>
    <pic>ogre_4.png</pic>
    <alt type="stringlist">
      <value>blitzed</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ogredead_1.png</attr>
    <level type="int">4</level>
    <attr name="_initialise_" type="script">
      multiplier = 4
      gold_base = GetRandomInt(35,45)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(16,18) + multiplier))
      set (this, "energy", (GetRandomInt(30,40) + multiplier))
      set (this, "poison", (GetRandomInt(90,100) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(475,525))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="tainted_type">
    <inherit name="container_open" />
    <inherit name="orc_base" />
    <alias>Tainted Orc</alias>
    <feature_startscript />
    <attr name="min_hp" type="int">325</attr>
    <attr name="max_hp" type="int">375</attr>
    <displayverbs type="stringlist">
      <value>Spell Attack</value>
      <value>Look at</value>
    </displayverbs>
    <drop type="boolean">false</drop>
    <notattacking />
    <listalias>Tainted Orc</listalias>
    <pic>orc_5.png</pic>
    <alt type="stringlist">
      <value>tainted</value>
    </alt>
    <attr name="current_mp" type="int">0</attr>
    <attr name="current_stam" type="int">0</attr>
    <status>Alive</status>
    <attr name="img_dead">ogredead_1.png</attr>
    <level type="int">5</level>
    <attr name="_initialise_" type="script">
      multiplier = 5
      gold_base = GetRandomInt(40,50)
      set (this, "gold", (gold_base * multiplier))
      set (this, "max_dam", (GetRandomInt(22,24) + multiplier))
      set (this, "energy", (GetRandomInt(90,100) + multiplier))
      set (this, "poison", (GetRandomInt(30,40) + multiplier))
      set (this, "cold", (GetRandomInt(90,100) + multiplier))
      set (this, "physical", (GetRandomInt(90,100) + multiplier))
      set (this, "fire", (GetRandomInt(90,100) + multiplier))
      set (this, "chaos", (GetRandomInt(90,100) + multiplier))
      set (this, "defense", (GetRandomInt(10,70) + multiplier))
      set (this, "current_hp", GetRandomInt(325,375))
      set (this, "level", multiplier)
    </attr>
  </type>
  <type name="orc_base">
    <inherit name="editor_object" />
    <inherit name="enemy_base" />
    <alias>Orc</alias>
    <attr name="current_hp" type="int">0</attr>
    <dam type="int">0</dam>
    <attr name="max_dam" type="int">0</attr>
    <mob type="int">1</mob>
    <alive />
    <not_poisoned />
    <poisoned type="boolean">false</poisoned>
    <feature_container />
    <close type="boolean">false</close>
    <hidechildren />
    <listchildren />
    <isopen type="boolean">false</isopen>
    <chaos type="int">0</chaos>
    <defense type="int">0</defense>
    <lootable type="double">0</lootable>
    <desclive>A medium-sized, brown forest orc.</desclive>
    <descdead>A giant pile of  brown goo is all that remains of the intrusive orc.</descdead>
    <attr name="changedcurrent_hp" type="script"><![CDATA[
      if (this.current_hp < 1) {
        if (HasAttribute(this, "questLoot")) {
          if (this.questLoot <> null) {
            CloneObjectAndMove (this.questLoot, this)
          }
        }
        if (not HasAttribute(this, "times_killed")) {
          this.times_killed = 0
        }
        this.times_killed = this.times_killed + 1
        if (this.times_killed = 1) {
          // Moved these next 2 lines of actual code here from LOOK script
          // dbglog ("[changedcurrent_hp for " + this.name + "]: Moving wingbat1 clone to 'this'.")
          CloneObjectAndMove (wingbat1, this)
          // dbglog ("[changedcurrent_hp for " + this.name + "]: Calling HelperOpenObject(this).")
          // TODO: I don't know what this does, but it doesn't seem to list the objects contained.
          HelperOpenObject (this)
          // TODO: Raist may wish to change this text.
          if (not HasAttribute (temp_file, "obj_dict")) {
            // TODO: I need to make this bit into a function that sets an object list
            // as each script name's key.
            temp_file.obj_dict = NewObjectDictionary()
          }
          DictionaryAdd (temp_file.obj_dict, "changedcurrent_hp", this)
          // Using a SetTurnTimeout with 0 so this won't trigger until the end of the turn.
          // Otherwise, it says like "Thomas [attacks] the Mutant Mongbat (Dead)" or something like that.
          // TODO: That shouldn't happen. Thomas's dumb ass should not attack a dead enemy!
          SetTurnTimeout (0) {
            obj = temp_file.obj_dict["changedcurrent_hp"]
            DictionaryRemove (temp_file.obj_dict, "changedcurrent_hp")
            if (obj.poisoned = True) {
              DisableTimer (poison_tick1)
            }
            obj.alias = obj.alias + " (Dead)"
            obj.listalias = obj.alias
            // This makes it list the objects contained upon death.
            obj.hidechildren = false
            UpdateStatusAttributes
            CheckDarkness
            UpdateObjectLinks
          }
        }
        // dbglog (this.name + " just died.")
        if (this.times_killed > 1) {
          // dbglog ("....again. Times this has died: " + ToString(this.times_killed))
        }
        this.mob = 0
      }
    ]]></attr>
  </type>
  <type name="enemy_base">
    <inherit name="editor_object" />
    <alias>Enemy</alias>
    <physical type="int">0</physical>
    <fire type="int">0</fire>
    <cold type="int">0</cold>
    <energy type="int">0</energy>
    <poison type="int">0</poison>
    <questLoot type="string"></questLoot>
    <level type="int">0</level>
    <gold type="int">0</gold>
    <objectType type="int">3</objectType>
    <addscript type="script">
      msg ("You cannot put anything inside of there.")
    </addscript>
    <look type="script"><![CDATA[
      if (this.alive = True) {
        if (game.pov.SpellDamage > 20) {
          msg ("<div id='livetable'><table id='liveleft'><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='enem' align='center'>" + GetImgDivWithFallback(this.pic) + "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='ename' align='center'>" +(this.alias)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='estat' align='center'>" +(this.status)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table><table id='liveright'><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='ephys'>P: " +(this.physical)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='efire'>F: " +(this.fire)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='ecold'>C: " +(this.cold)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='epois'>P: " +(this.poison)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='eener'>E: " +(this.energy)+ "</div></td><td>&nbsp;</td></tr></tbody></table></div><br>")
        }
        else if (game.pov.SpellDamage < 19) {
          msg ("<div id='livetable2'><table id='liveleft'><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='enem' align='center'>" + GetImgDivWithFallback(this.pic) + "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='ename' align='center'>" +(this.alias)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='estat' align='center'>" +(this.status)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table><table id='liveright'><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='ephys2'>&nbsp;</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='efire2'>&nbsp;</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='ecold2'>&nbsp;</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='epois2'>&nbsp;</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='eener2'>&nbsp;</div></td><td>&nbsp;</td></tr></tbody></table><br /></div><br>")
        }
        else {
        }
      }
      else if (this.current_hp < 1) {
        DecreaseObjectCounter (this, "mob")
        set (this, "alive", False)
        if (this.isopen = true) {
          msg ("<div id='deathtable'><table id='death'><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='enem' align='center'>" + GetImgDivWithFallback(this.img_dead, "enem_img_dead") + "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='ename2' align='center'>" +(this.alias)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='estat' align='center'>" +(this.status)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table><br /></div><br>")
        }
        else {
          // [ ] = TODO: What is this next line? I need to look up CloneObjectAndMove in the docs
          msg ("<div id='deathtable'><table id='death'><tbody><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='enem' align='center'>" + GetImgDivWithFallback(this.img_dead, "enem_img_dead") + "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='ename2' align='center'>" +(this.alias)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td><div id='estat' align='center'>" +(this.status)+ "</div></td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table><br /></div><br>")
          set (this.parent, "spawn", False)
        }
      }
    ]]></look>
    <attack type="script"><![CDATA[
      options = Split("<span id='spvf_1'>Vas Flam</span>;<span id='spcp_1'>Corp Por</span>;<span id='spkvv_1'>Kal Vas Vlam<span>;<span id='spvof_1'>Vas Ort Flam</span>;<span id='spin_1'>In Nox</span>;<span id='sppog_1'>Por Ort Grav</span>;<span id='spam_1'>An Mani</span>;<span id='spipy_1'>In Por Ylem</span>;<span id='sppcw_1'>Por Corp Wis</span>", ";")
      if (this.current_hp > 0) {
        temp_file.obj = this
        ShowMenu ("Attack:", options, false) {
          switch (result) {
            case ("<span id='spvf_1'>Vas Flam</span>") {
              msg (CommandLink("vas flam " + temp_file.obj.alias + "", "Vas Flam the " + temp_file.obj.alias + "?"))
            }
            case ("<span id='spcp_1'>Corp Por</span>") {
              msg (CommandLink("corp por " + temp_file.obj.alias + "", "Corp Por the " + temp_file.obj.alias + "?"))
            }
            case ("<span id='spkvv_1'>Kal Vas Vlam<span>") {
              msg (CommandLink("kal vas vlam " + temp_file.obj.alias + "", "Kal Vas Vlam the "  + temp_file.obj.alias + "?"))
            }
            case ("<span id='spvof_1'>Vas Ort Flam</span>") {
              msg (CommandLink("vas ort flam " + temp_file.obj.alias + "", "Vas Ort Flam the "  + temp_file.obj.alias + "?"))
            }
            case ("<span id='spin_1'>In Nox</span>") {
              msg (CommandLink("in nox " + temp_file.obj.alias + "", "In Nox the " + temp_file.obj.alias + "?"))
            }
            case ("<span id='sppog_1'>Por Ort Grav</span>") {
              msg (CommandLink("por ort grav " + temp_file.obj.alias + "", "Por Ort Grav the " + temp_file.obj.alias + "?"))
            }
            case ("<span id='spam_1'>An Mani</span>") {
              msg (CommandLink("an mani " + temp_file.obj.alias + "", "An Mani the " + temp_file.obj.alias + "?"))
            }
            case ("<span id='spipy_1'>In Por Ylem</span>") {
              msg (CommandLink("in por ylem " + temp_file.obj.alias + "", "In Por Ylem the " + temp_file.obj.alias + "?"))
            }
            case ("<span id='sppcw_1'>Por Corp Wis</span>") {
              msg (CommandLink("por corp wis " + temp_file.obj.alias + "", "Por Corp Wis the " + temp_file.obj.alias + "?"))
            }
            default {
              PrintCentered ("Your attack failed.")
            }
          }
        }
      }
      else {
        PrintCentered ("The poor " + temp_file.obj.alias + " has been killed already. You cannot kill it twice.")
      }
    ]]></attack>
  </type>
  <type name="spellbooknpc_type">
    <inherit name="editor_object" />
    <inherit name="npcweapon_base" />
    <alias>NPC Spellbook</alias>
    <inroomdescription>A thick, spined leather-bound, tome.</inroomdescription>
    <uses type="int">300</uses>
    <take type="boolean">false</take>
    <not_all />
    <volume type="int">3</volume>
    <pic>sp_book1.png</pic>
    <wtype type="int">2</wtype>
  </type>
  <type name="npcweapon_base">
    <inherit name="editor_object" />
    <inherit name="defaultweapon" />
    <attr name="m_props" type="string"></attr>
    <usedefaultprefix />
    <prefix type="string"></prefix>
    <visible type="boolean">false</visible>
    <scenery />
    <drop type="boolean">false</drop>
    <objectType type="int">4</objectType>
    <use type="script">
    </use>
    <selfuseanything type="script">
      PrintCentered ("That will not work.")
    </selfuseanything>
  </type>
  <type name="defaultweapon">
    <visible />
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Take</value>
    </displayverbs>
    <feature_startscript />
    <inventoryverbs type="stringlist">
      <value>Look at</value>
      <value>Wear</value>
      <value>Export</value>
      <value>Delete</value>
      <value>Drop</value>
    </inventoryverbs>
    <take type="boolean">false</take>
    <use type="boolean">false</use>
    <givesingle type="boolean">false</givesingle>
    <drop />
    <gender>it</gender>
    <article>it</article>
    <possessive>its</possessive>
    <isopen type="boolean">false</isopen>
    <open type="boolean">false</open>
    <close type="boolean">false</close>
    <container type="boolean">false</container>
    <descprefix>You are in</descprefix>
    <objectslistprefix>You can see</objectslistprefix>
    <exitslistprefix>You can go</exitslistprefix>
    <contentsprefix>containing</contentsprefix>
    <description type="string"></description>
    <attr name="implementation_notes" type="string"></attr>
    <scenery type="boolean">false</scenery>
    <hidechildren type="boolean">false</hidechildren>
    <listchildren type="boolean">false</listchildren>
    <usedefaultprefix />
    <volume type="int">0</volume>
    <price type="int">0</price>
    <dark type="boolean">false</dark>
    <lightstrength type="string"></lightstrength>
    <darklevel type="boolean">false</darklevel>
    <attr name="grid_width" type="int">1</attr>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_fill">White</attr>
    <attr name="grid_border">Black</attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <attr name="grid_bordersides" type="int">15</attr>
    <attr name="grid_render" type="boolean">false</attr>
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_label_colour">Black</attr>
    <grid_parent_offset_auto />
    <attr name="grid_parent_offset_x" type="int">0</attr>
    <attr name="grid_parent_offset_y" type="int">0</attr>
    <attr name="pov_alias">me</attr>
    <pov_alt type="stringlist">
      <value>me</value>
      <value>myself</value>
      <value>self</value>
    </pov_alt>
    <attr name="pov_look">Looking good.</attr>
    <attr name="pov_gender">you</attr>
    <attr name="pov_article">yourself</attr>
    <attr name="pov_possessive">your</attr>
    <attr name="feature_usegive" type="boolean">false</attr>
    <attr name="feature_container" type="boolean">false</attr>
    <attr name="feature_switchable" type="boolean">false</attr>
    <attr name="feature_edible" type="boolean">false</attr>
    <attr name="feature_player" type="boolean">false</attr>
    <attr name="feature_lightdark" type="boolean">false</attr>
    <visited type="boolean">false</visited>
    <hasbeenmoved type="boolean">false</hasbeenmoved>
    <rarity type="int">0</rarity>
    <pic type="string"></pic>
    <wtype type="int">0</wtype>
    <saveable type="int">1</saveable>
    <img type="string"></img>
    <addy><![CDATA[<img src='http://www.uoexpanse.com/quests/images/]]></addy>
    <attr name="f_type"><![CDATA[.png'>]]></attr>
    <attr name="m_props" type="string"></attr>
    <AttackChance type="int">0</AttackChance>
    <BonusDex type="int">0</BonusDex>
    <BonusHits type="int">0</BonusHits>
    <BonusInt type="int">0</BonusInt>
    <BonusMana type="int">0</BonusMana>
    <BonusStam type="int">0</BonusStam>
    <BonusStr type="int">0</BonusStr>
    <Chaos type="int">0</Chaos>
    <Cold type="int">0</Cold>
    <DefendChance type="int">0</DefendChance>
    <Direct type="int">0</Direct>
    <Energy type="int">0</Energy>
    <Fire type="int">0</Fire>
    <HitColdArea type="int">0</HitColdArea>
    <HitDispel type="int">0</HitDispel>
    <HitEnergyArea type="int">0</HitEnergyArea>
    <HitFireArea type="int">0</HitFireArea>
    <HitFireball type="int">0</HitFireball>
    <HitHarm type="int">0</HitHarm>
    <HitLeechHits type="int">0</HitLeechHits>
    <HitLeechMana type="int">0</HitLeechMana>
    <HitLeechStam type="int">0</HitLeechStam>
    <HitLightning type="int">0</HitLightning>
    <HitLowerAttack type="int">0</HitLowerAttack>
    <HitLowerDefend type="int">0</HitLowerDefend>
    <HitMagicArrow type="int">0</HitMagicArrow>
    <HitPhysicalArea type="int">0</HitPhysicalArea>
    <LowerManaCost type="int">0</LowerManaCost>
    <Luck type="int">0</Luck>
    <MageWeapon type="int">0</MageWeapon>
    <NightSight type="int">0</NightSight>
    <Physical type="int">0</Physical>
    <Poison type="int">0</Poison>
    <ReflectPhysical type="int">0</ReflectPhysical>
    <RegenHits type="int">0</RegenHits>
    <RegenMana type="int">0</RegenMana>
    <RegenStam type="int">0</RegenStam>
    <ResistColdBonus type="int">0</ResistColdBonus>
    <ResistEnergyBonus type="int">0</ResistEnergyBonus>
    <ResistFireBonus type="int">0</ResistFireBonus>
    <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
    <ResistPoisonBonus type="int">0</ResistPoisonBonus>
    <SpellChanneling type="int">0</SpellChanneling>
    <SpellDamage type="int">0</SpellDamage>
    <WeaponDamage type="int">0</WeaponDamage>
    <AttackChance2 type="string"></AttackChance2>
    <BonusDex2 type="string"></BonusDex2>
    <BonusHits2 type="string"></BonusHits2>
    <BonusInt2 type="string"></BonusInt2>
    <BonusMana2 type="string"></BonusMana2>
    <BonusStam2 type="string"></BonusStam2>
    <BonusStr2 type="string"></BonusStr2>
    <Chaos2 type="string"></Chaos2>
    <Cold2 type="string"></Cold2>
    <DefendChance2 type="string"></DefendChance2>
    <Direct2 type="string"></Direct2>
    <Energy2 type="string"></Energy2>
    <Fire2 type="string"></Fire2>
    <HitColdArea2 type="string"></HitColdArea2>
    <HitDispel2 type="string"></HitDispel2>
    <HitEnergyArea2 type="string"></HitEnergyArea2>
    <HitFireArea2 type="string"></HitFireArea2>
    <HitFireball2 type="string"></HitFireball2>
    <HitHarm2 type="string"></HitHarm2>
    <HitLeechHits2 type="string"></HitLeechHits2>
    <HitLeechMana2 type="string"></HitLeechMana2>
    <HitLeechStam2 type="string"></HitLeechStam2>
    <HitLightning2 type="string"></HitLightning2>
    <HitLowerAttack2 type="string"></HitLowerAttack2>
    <HitLowerDefend2 type="string"></HitLowerDefend2>
    <HitMagicArrow2 type="string"></HitMagicArrow2>
    <HitPhysicalArea2 type="string"></HitPhysicalArea2>
    <LowerManaCost2 type="string"></LowerManaCost2>
    <Luck2 type="string"></Luck2>
    <MageWeapon2 type="string"></MageWeapon2>
    <NightSight2 type="string"></NightSight2>
    <Physical2 type="string"></Physical2>
    <Poison2 type="string"></Poison2>
    <ReflectPhysical2 type="string"></ReflectPhysical2>
    <RegenHits2 type="string"></RegenHits2>
    <RegenMana2 type="string"></RegenMana2>
    <RegenStam2 type="string"></RegenStam2>
    <ResistColdBonus2 type="string"></ResistColdBonus2>
    <ResistEnergyBonus2 type="string"></ResistEnergyBonus2>
    <ResistFireBonus2 type="string"></ResistFireBonus2>
    <ResistPhysicalBonus2 type="string"></ResistPhysicalBonus2>
    <ResistPoisonBonus2 type="string"></ResistPoisonBonus2>
    <SpellChanneling2 type="string"></SpellChanneling2>
    <SpellDamage2 type="string"></SpellDamage2>
    <WeaponDamage2 type="string"></WeaponDamage2>
    <attr name="s_name" type="string"></attr>
    <saved type="int">0</saved>
    <objectType type="int">2</objectType>
    <look type="script"><![CDATA[
      obj = this
      if (not Got(obj)) {
        msg ("You see the " + obj.alias + " waiting for you to pick it up.")
      }
      else if (Got(obj)) {
        if (obj.wtype = 1) {
          a = ("Axe")
        }
        else if (obj.wtype = 2) {
          a = ("Knife")
        }
        else if (obj.wtype = 3) {
          a = ("Mace")
        }
        else if (obj.wtype = 4) {
          a = ("Polearm")
        }
        else if (obj.wtype = 5) {
          a = ("Ranged")
        }
        else if (obj.wtype = 6) {
          a = ("Spear")
        }
        else if (obj.wtype = 7) {
          a = ("Fork")
        }
        else if (obj.wtype = 8) {
          a = ("Staff")
        }
        else if (obj.wtype = 9) {
          a = ("Sword")
        }
        else if (obj.wtype = 9) {
          a = ("Spellbook")
        }
        else {
          a = ("Unknown")
        }
        if (GetInt(obj, "saveable") = 1) {
          PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
        }
        else if (GetInt(obj, "saveable") = 0) {
          if (GetInt(obj, "saved") = 1) {
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
          else if (GetInt(obj, "saved") = 0) {
            set (obj, "m_props", (obj.AttackChance2+obj.BonusDex2+obj.BonusHits2+obj.BonusInt2+obj.BonusMana2+obj.BonusStam2+obj.BonusStr2+obj.Chaos2+obj.Cold2+obj.DefendChance2+obj.Direct2+obj.Energy2+obj.Fire2+obj.LowerManaCost2+obj.Luck2+obj.Physical2+obj.Poison2+obj.ReflectPhysical2+obj.RegenHits2+obj.RegenMana2+obj.RegenStam2+obj.ResistColdBonus2+obj.ResistEnergyBonus2+obj.ResistFireBonus2+obj.ResistPhysicalBonus2+obj.ResistPoisonBonus2+obj.SpellDamage2+obj.WeaponDamage2+obj.HitColdArea2+obj.HitDispel2+obj.HitEnergyArea2+obj.HitFireArea2+obj.HitFireball2+obj.HitHarm2+obj.HitLeechHits2+obj.HitLeechMana2+obj.HitLeechStam2+obj.HitLightning2+obj.HitLowerAttack2+obj.HitLowerDefend2+obj.HitMagicArrow2+obj.HitPhysicalArea2))
            set (obj, "saved", 1)
            PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.s_name) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
          }
        }
        else {
          PrintCentered ("<div id=\"itemfr\"><div id=\"itemfrimg\"> " + (obj.pic) + " </div><br>Name: " + (obj.alias) + " <br>" + (obj.m_props) + "Weight: " + (obj.volume) + " stones<br>Type: " + (a) + " </div><br>")
        }
      }
    ]]></look>
    <onafterwear type="script"><![CDATA[
      obj = this
      player.physical = player.physical+obj.Physical
      player.fire = player.fire+obj.Fire
      player.cold = player.cold+obj.Cold
      player.poison = player.poison+obj.Poison
      player.energy = player.energy+obj.Energy
      player.HitColdArea = player.HitColdArea+obj.HitColdArea
      player.HitDispel = player.HitDispel+obj.HitDispel
      player.HitEnergyArea = player.HitEnergyArea+obj.HitEnergyArea
      player.HitFireArea = player.HitFireArea+obj.HitFireArea
      player.HitFireball = player.HitFireball+obj.HitFireball
      player.HitHarm = player.HitHarm+obj.HitHarm
      player.HitLeechHits = player.HitLeechHits+obj.HitLeechHits
      player.HitLeechStam = player.HitLeechStam+obj.HitLeechStam
      player.HitLightning = player.HitLightning+obj.HitLightning
      player.HitLowerAttack = player.HitLowerAttack+obj.HitLowerAttack
      player.HitLowerDefend = player.HitLowerDefend+obj.HitLowerDefend
      player.HitMagicArrow = player.HitMagicArrow+obj.HitMagicArrow
      player.HitPhysicalArea = player.HitPhysicalArea+obj.HitPhysicalArea
      player.AttackChance = player.AttackChance+obj.AttackChance
      player.dex = player.dex+obj.BonusDex
      game.pov.health = game.pov.health+obj.BonusHits
      player.int = player.int+obj.BonusInt
      player.mp = player.mp+obj.BonusMana
      player.stam = player.stam+obj.BonusStam
      player.str = player.str+obj.BonusStr
      player.DefendChance = player.DefendChance+obj.DefendChance
      player.SpellDamage = player.SpellDamage+obj.SpellDamage
      player.WeaponDamage = player.WeaponDamage+obj.WeaponDamage
      player.ResistColdBonus = player.ResistColdBonus+obj.ResistColdBonus
      player.ResistEnergyBonus = player.ResistEnergyBonus+obj.ResistEnergyBonus
      player.ResistFireBonus = player.ResistFireBonus+obj.ResistFireBonus
      player.ResistPhysicalBonus = player.ResistPhysicalBonus+obj.ResistPhysicalBonus
      player.ResistPoisonBonus = player.ResistPoisonBonus+obj.ResistPoisonBonus
      player.LowerManaCost = player.LowerManaCost+obj.LowerManaCost
      player.RegenHits = player.RegenHits+obj.RegenHits
      player.RegenMana = player.RegenMana+obj.RegenMana
      player.RegenStam = player.RegenStam+obj.RegenStam
      player.Pluck = player.Pluck+obj.Luck
      player.ReflectPhysical = player.ReflectPhysical+obj.ReflectPhysical
      player.weapon = obj.alias
      resists_table
      if (player.RegenHits > 0) {
        DisableTimer (stat_regen1)
        EnableTimer (hp_regen1)
      }
      if (player.RegenMana > 0) {
        DisableTimer (stat_regen1)
        EnableTimer (mp_regen1)
      }
      if (player.RegenStam > 0) {
        DisableTimer (stat_regen1)
        EnableTimer (stam_regen1)
      }
    ]]></onafterwear>
    <onafterremove type="script"><![CDATA[
      obj = this
      player.physical = player.physical-obj.Physical
      player.fire = player.fire-obj.Fire
      player.cold = player.cold-obj.Cold
      player.poison = player.poison-obj.Poison
      player.energy = player.energy-obj.Energy
      player.HitColdArea = player.HitColdArea-obj.HitColdArea
      player.HitDispel = player.HitDispel-obj.HitDispel
      player.HitEnergyArea = player.HitEnergyArea-obj.HitEnergyArea
      player.HitFireArea = player.HitFireArea-obj.HitFireArea
      player.HitFireball = player.HitFireball-obj.HitFireball
      player.HitHarm = player.HitHarm-obj.HitHarm
      player.HitLeechHits = player.HitLeechHits-obj.HitLeechHits
      player.HitLeechStam = player.HitLeechStam-obj.HitLeechStam
      player.HitLightning = player.HitLightning-obj.HitLightning
      player.HitLowerAttack = player.HitLowerAttack-obj.HitLowerAttack
      player.HitLowerDefend = player.HitLowerDefend-obj.HitLowerDefend
      player.HitMagicArrow = player.HitMagicArrow-obj.HitMagicArrow
      player.HitPhysicalArea = player.HitPhysicalArea-obj.HitPhysicalArea
      player.AttackChance = player.AttackChance-obj.AttackChance
      player.dex = player.dex-obj.BonusDex
      game.pov.health = game.pov.health-obj.BonusHits
      player.int = player.int-obj.BonusInt
      player.mp = player.mp-obj.BonusMana
      player.stam = player.stam-obj.BonusStam
      player.str = player.str-obj.BonusStr
      player.DefendChance = player.DefendChance-obj.DefendChance
      player.SpellDamage = player.SpellDamage-obj.SpellDamage
      player.WeaponDamage = player.WeaponDamage-obj.WeaponDamage
      player.ResistColdBonus = player.ResistColdBonus-obj.ResistColdBonus
      player.ResistEnergyBonus = player.ResistEnergyBonus-obj.ResistEnergyBonus
      player.ResistFireBonus = player.ResistFireBonus-obj.ResistFireBonus
      player.ResistPhysicalBonus = player.ResistPhysicalBonus-obj.ResistPhysicalBonus
      player.ResistPoisonBonus = player.ResistPoisonBonus-obj.ResistPoisonBonus
      player.LowerManaCost = player.LowerManaCost-obj.LowerManaCost
      player.RegenHits = player.RegenHits-obj.RegenHits
      player.RegenMana = player.RegenMana-obj.RegenMana
      player.RegenStam = player.RegenStam-obj.RegenStam
      player.Pluck = player.Pluck-obj.Luck
      player.ReflectPhysical = player.ReflectPhysical-obj.ReflectPhysical
      player.weapon = ""
      resists_table
      if (player.RegenHits < 1) {
        EnableTimer (stat_regen1)
        DisableTimer (hp_regen1)
      }
      if (player.RegenMana < 1) {
        EnableTimer (stat_regen1)
        DisableTimer (mp_regen1)
      }
      if (player.RegenStam < 1) {
        EnableTimer (stat_regen1)
        DisableTimer (stam_regen1)
      }
    ]]></onafterremove>
    <attack type="script"><![CDATA[
      mlist = targets()
      ShowMenu ("Attack what?", mlist, false) {
        mob = (result)
        if (GetInt(mob, "current_hp") > 0) {
          msg (CommandLink("Attack", "Attack"))
        }
        else {
          PrintCentered ("The poor " + mob.alias + " has been killed already. You cannot kill it twice.")
        }
      }
    ]]></attack>
    <attr name="_initialise_" type="script">
      obj = this
      set (obj, "pic", obj.addy + obj.img + obj.f_type)
      obj.rarity = GetRandomInt(1,99)
      Magical_Props2 (obj)
    </attr>
    <changedparent type="script">
      if (game.pov = this) {
        if (IsDefined("oldvalue")) {
          OnEnterRoom (oldvalue)
        }
        else {
          OnEnterRoom (null)
        }
        if (game.gridmap) {
          MergePOVCoordinates
        }
      }
      this.hasbeenmoved = true
    </changedparent>
    <changedisopen type="script">
      if (this.isopen and HasScript(this, "onopen")) {
        do (this, "onopen")
      }
      if (not this.isopen and HasScript(this, "onclose")) {
        do (this, "onclose")
      }
    </changedisopen>
    <changedlocked type="script">
      if (this.locked and HasScript(this, "onlock")) {
        do (this, "onlock")
      }
      if (not this.locked and HasScript(this, "onunlock")) {
        do (this, "onunlock")
      }
    </changedlocked>
    <changedswitchedon type="script">
      if (this.switchedon and HasScript(this, "onswitchon")) {
        do (this, "onswitchon")
      }
      if (not this.switchedon and HasScript(this, "onswitchoff")) {
        do (this, "onswitchoff")
      }
    </changedswitchedon>
    <m_props2 type="scriptdictionary" />
  </type>
  <type name="defaultarmor">
    <visible />
    <displayverbs type="stringlist">
      <value>Look at</value>
      <value>Take</value>
    </displayverbs>
    <inventoryverbs type="stringlist">
      <value>Look at</value>
      <value>Use</value>
      <value>Drop</value>
      <value>Export</value>
    </inventoryverbs>
    <take type="boolean">false</take>
    <use type="boolean">false</use>
    <givesingle type="boolean">false</givesingle>
    <drop />
    <gender>it</gender>
    <article>it</article>
    <possessive>its</possessive>
    <isopen type="boolean">false</isopen>
    <open type="boolean">false</open>
    <close type="boolean">false</close>
    <container type="boolean">false</container>
    <descprefix>You are in</descprefix>
    <objectslistprefix>You can see</objectslistprefix>
    <exitslistprefix>You can go</exitslistprefix>
    <contentsprefix>containing</contentsprefix>
    <description type="string"></description>
    <attr name="implementation_notes" type="string"></attr>
    <scenery type="boolean">false</scenery>
    <hidechildren type="boolean">false</hidechildren>
    <listchildren type="boolean">false</listchildren>
    <usedefaultprefix />
    <volume type="int">0</volume>
    <price type="int">0</price>
    <dark type="boolean">false</dark>
    <lightstrength type="string"></lightstrength>
    <darklevel type="boolean">false</darklevel>
    <attr name="grid_width" type="int">1</attr>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_fill">White</attr>
    <attr name="grid_border">Black</attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <attr name="grid_bordersides" type="int">15</attr>
    <attr name="grid_render" type="boolean">false</attr>
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_label_colour">Black</attr>
    <grid_parent_offset_auto />
    <attr name="grid_parent_offset_x" type="int">0</attr>
    <attr name="grid_parent_offset_y" type="int">0</attr>
    <attr name="pov_alias">me</attr>
    <pov_alt type="stringlist">
      <value>me</value>
      <value>myself</value>
      <value>self</value>
    </pov_alt>
    <attr name="pov_look">Looking good.</attr>
    <attr name="pov_gender">you</attr>
    <attr name="pov_article">yourself</attr>
    <attr name="pov_possessive">your</attr>
    <attr name="feature_usegive" type="boolean">false</attr>
    <attr name="feature_container" type="boolean">false</attr>
    <attr name="feature_switchable" type="boolean">false</attr>
    <attr name="feature_edible" type="boolean">false</attr>
    <attr name="feature_player" type="boolean">false</attr>
    <attr name="feature_lightdark" type="boolean">false</attr>
    <visited type="boolean">false</visited>
    <hasbeenmoved type="boolean">false</hasbeenmoved>
    <BasePhysicalResist type="int">0</BasePhysicalResist>
    <BaseFireResist type="int">0</BaseFireResist>
    <BaseColdResist type="int">0</BaseColdResist>
    <BasePoisonResist type="int">0</BasePoisonResist>
    <BaseEnergyResist type="int">0</BaseEnergyResist>
    <AosStrReq type="int">0</AosStrReq>
    <ArmorBase type="int">0</ArmorBase>
    <AttackChance type="int">0</AttackChance>
    <BonusDex type="int">0</BonusDex>
    <BonusHits type="int">0</BonusHits>
    <BonusInt type="int">0</BonusInt>
    <BonusStam type="int">0</BonusStam>
    <BonusStr type="int">0</BonusStr>
    <Chaos type="int">0</Chaos>
    <Cold type="int">0</Cold>
    <DefendChance type="int">0</DefendChance>
    <Direct type="int">0</Direct>
    <Energy type="int">0</Energy>
    <Fire type="int">0</Fire>
    <LowerManaCost type="int">0</LowerManaCost>
    <Luck type="int">0</Luck>
    <NightSight type="int">0</NightSight>
    <Physical type="int">0</Physical>
    <Poison type="int">0</Poison>
    <ReflectPhysical type="int">0</ReflectPhysical>
    <RegenHits type="int">0</RegenHits>
    <RegenMana type="int">0</RegenMana>
    <RegenStam type="int">0</RegenStam>
    <ResistColdBonus type="int">0</ResistColdBonus>
    <ResistEnergyBonus type="int">0</ResistEnergyBonus>
    <ResistFireBonus type="int">0</ResistFireBonus>
    <ResistPhysicalBonus type="int">0</ResistPhysicalBonus>
    <ResistPoisonBonus type="int">0</ResistPoisonBonus>
    <SpellChanneling type="int">0</SpellChanneling>
    <SpellDamage type="int">0</SpellDamage>
    <WeaponDamage type="int">0</WeaponDamage>
    <pic type="string"></pic>
    <attr name="arm_type" type="int">0</attr>
    <saveable type="int">1</saveable>
    <changedparent type="script">
      if (game.pov = this) {
        if (IsDefined("oldvalue")) {
          OnEnterRoom (oldvalue)
        }
        else {
          OnEnterRoom (null)
        }
        if (game.gridmap) {
          MergePOVCoordinates
        }
      }
      this.hasbeenmoved = true
    </changedparent>
    <changedisopen type="script">
      if (this.isopen and HasScript(this, "onopen")) {
        do (this, "onopen")
      }
      if (not this.isopen and HasScript(this, "onclose")) {
        do (this, "onclose")
      }
    </changedisopen>
    <changedlocked type="script">
      if (this.locked and HasScript(this, "onlock")) {
        do (this, "onlock")
      }
      if (not this.locked and HasScript(this, "onunlock")) {
        do (this, "onunlock")
      }
    </changedlocked>
    <changedswitchedon type="script">
      if (this.switchedon and HasScript(this, "onswitchon")) {
        do (this, "onswitchon")
      }
      if (not this.switchedon and HasScript(this, "onswitchoff")) {
        do (this, "onswitchoff")
      }
    </changedswitchedon>
  </type>
  <type name="tab_room">
    <cycle type="int">0</cycle>
    <attr name="room_spawns_enemies" type="boolean">false</attr>
    <attr name="room_spawns_ettin" type="boolean">false</attr>
    <attr name="room_spawns_mongbat" type="boolean">false</attr>
    <attr name="room_spawns_ogre" type="boolean">false</attr>
    <attr name="room_spawns_orc" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat1_" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat2_" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat3_" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat4_" type="boolean">false</attr>
    <attr name="_spawn_mongbat_mongbat5_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin1_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin2_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin3_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin4_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ettin5_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ogre1_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ogre2_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ogre3_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ogre4_" type="boolean">false</attr>
    <attr name="_spawn_ettin_ogre5_" type="boolean">false</attr>
    <attr name="_spawn_ettin_orc1_" type="boolean">false</attr>
    <attr name="_spawn_ettin_orc2_" type="boolean">false</attr>
    <attr name="_spawn_ettin_orc3_" type="boolean">false</attr>
    <attr name="_spawn_ettin_orc4_" type="boolean">false</attr>
    <attr name="_spawn_ettin_orc5_" type="boolean">false</attr>
    <mlist type="stringlist" />
    <spawn type="object">player</spawn>
    <beforeenter type="script">
      SpawnForRoom (this)
    </beforeenter>
  </type>
  <type name="quest_room">
    <spawns type="int">0</spawns>
    <attr name="quest_alias" type="string"></attr>
    <attr name="quest_weight" type="int">0</attr>
    <attr name="quest_reward" type="int">0</attr>
    <complete type="boolean">false</complete>
    <questStateInactive type="string"></questStateInactive>
    <questStateActive type="string"></questStateActive>
    <questIncScoreValue type="int">0</questIncScoreValue>
    <questNext1 type="string"></questNext1>
    <questNext2 type="string"></questNext2>
    <questIncScoreString type="string"></questIncScoreString>
    <questEndString type="string"></questEndString>
    <questStart type="string"></questStart>
    <questFinishString type="string"></questFinishString>
    <questName type="string"></questName>
    <questObject type="object">questObject</questObject>
    <CarrierLocation type="object">player</CarrierLocation>
    <Carrier type="object">player</Carrier>
    <questRscript type="script">
    </questRscript>
  </type>
  <type name="npcSetup_room">
    <fighter type="boolean">false</fighter>
    <attr name="fighter_fee" type="int">0</attr>
    <archer type="boolean">false</archer>
    <attr name="archer_fee" type="int">0</attr>
    <mage type="boolean">false</mage>
    <attr name="mage_fee" type="int">0</attr>
    <rogue type="boolean">false</rogue>
    <attr name="rogue_fee" type="int">0</attr>
    <attr name="create_npcs_" type="boolean">false</attr>
  </type>
  <type name="enemy_room">
    <beforeenter type="script">
      RandomSpawn (this)
    </beforeenter>
  </type>
  <type name="map_room">
    <roommap type="string"></roommap>
    <attr name="main_map" type="string"></attr>
    <mapz_yes />
  </type>

<!--
********************************************************************************
**
**																				13. FUNCTIONS SECTION
-->
  <function name="ListRemove" parameters="list, item"><![CDATA[
    if (list <> null) {
      if (ListContains(list, item)) {
        list remove (list, item)
      }
    }
  ]]></function>
  <function name="ListAdd" parameters="list, item"><![CDATA[
    if (not list <> null) {
      list = NewList()
    }
    list add (list, item)
  ]]></function>
  <function name="LessThan" parameters="value1, value2" type="boolean"><![CDATA[
    return (value1 < value2)
  ]]></function>
  <function name="GreaterThan" parameters="value1, value2" type="boolean"><![CDATA[
    return (value1 > value2)
  ]]></function>
  <function name="dbglog" parameters="txt">
    if (GetBoolean(game,"debugging")) {
      Log (ToString(txt))
    }
  </function>
  <function name="dbgmsg" parameters="txt"><![CDATA[
    if (GetBoolean(game,"debugging")) {
      msg ("{color:red:DEBUGGING:}  "+txt+"<br />")
    }
  ]]></function>
  <function name="GetHTMLElement" parameters="elem, txt, id, elem_class, style, etc"><![CDATA[
    if (not id <> null) {
      id = ""
    }
    if (not elem_class <> null) {
      elem_class = ""
    }
    if (not style <> null) {
      style = ""
    }
    if (not etc <> null) {
      etc = ""
    }
    if (not txt <> null) {
      // only 1 parameter sent. returning it in a DIV element as a fallback.
      return ("<div>" + elem + "</div>")
    }
    return ("<" + elem + " id='" + id + "' class='" + elem_class + "' style='" + style + "' " + etc + ">" + txt + "</" + elem + ">")
  ]]></function>
  <function name="SetHyperlinkStatus" parameters="setting">
    if (setting = "on") {
      bool = "true"
    }
    else if (setting = "off") {
      bool = "false"
    }
    else {
      // Incorrect input.  Just turn the links on.
      bool = "true"
    }
    JS.eval ("var linksEnabled = "+bool+";")
    if (bool = "false") {
      game.suppresshyperlinks = true
      JS.eval ("$('.cmdlink,.commandlink').each(function(){$(this).addClass('disabled');});")
    }
    else {
      game.suppresshyperlinks = false
    }
  </function>
  <function name="MakeCurrentExitsVisible"><![CDATA[
    if (not HasAttribute(game, "current_exits")) {
      // Do nothing.
    }
    else if (not ListCount(game.current_exits)<1) {
      foreach (exit, game.current_exits) {
        exit.visible = true
      }
      game.current_exits = NewObjectList()
      msg ("Play has resumed.")
    }
  ]]></function>
  <function name="MakeCurrentExitsInvisible">
    if (not HasAttribute(game, "current_exits")) {
      game.current_exits = NewObjectList()
    }
    game.current_exits = ScopeUnlockedExitsForRoom(game.pov.parent)
    foreach (exit, game.current_exits) {
      exit.visible = false
    }
  </function>
  <function name="SetMakeCurrentExitsInvisibleTimeout" parameters="time">
    MakeCurrentExitsInvisible
    SetTimeout (time) {
      MakeCurrentExitsVisible
    }
  </function>
  <function name="SetHideCommandBarAndPanesTimeout" parameters="time">
    JS.uiHide ("#txtCommand")
    JS.uiHide ("#gamePanes")
    SetTimeout (time) {
      JS.uiShow ("#txtCommand")
      JS.uiShow ("#gamePanes")
    }
  </function>
  <function name="AddJsScript" parameters="script"><![CDATA[
    JS.addScript ("<script>"+script+"</script>")
  ]]></function>
  <function name="AddCssStyle" parameters="style"><![CDATA[
    JS.eval ("$('head').append('<style>"+style+"</style>');")
  ]]></function>
  <function name="GetDisplayNameLink" parameters="obj, type" type="string"><![CDATA[
    verbs = GetDisplayVerbs(obj)
    if (verbs <> null) {
      verbCount = ListCount(verbs)
    }
    else {
      verbCount = 0
    }
    if (type = "exit" and verbCount = 1) {
      if (not game.enablehyperlinks) {
        result = GetDisplayAlias(obj)
      }
      else {
        result = "{exit:" + obj.name + "}"
      }
    }
    else if (type = "") {
      result = GetDisplayAlias(obj)
      if (not HasAttribute(game,"lastobjects")) {
        game.lastobjects = NewObjectList()
      }
      if (not obj = game.pov.parent) {
        list add (game.lastobjects, obj)
      }
    }
    else {
      result = "{object:" + obj.name + "}"
      if (not HasAttribute(game,"lastobjects")) {
        game.lastobjects = NewObjectList()
      }
      list add (game.lastobjects, obj)
    }
    if (not GetBoolean(obj, "usedefaultprefix")) {
      if (obj.prefix = null) {
        prefix = ""
      }
      else {
        prefix = obj.prefix
      }
    }
    else if (type = "exit") {
      prefix = ""
    }
    else {
      prefix = GetDefaultPrefix(obj)
    }
    if (LengthOf(prefix) > 0) {
      prefix = prefix + " "
    }
    result = prefix + result
    if (not GetBoolean(obj, "usedefaultprefix") and HasString(obj, "suffix")) {
      if (LengthOf(obj.suffix) > 0) {
        result = result + " " + obj.suffix
      }
    }
    return (result)
  ]]></function>
  <function name="InitUserInterface">
    if (StartsWith(GetFileURL("foo"),"quest") or StartsWith(GetFileURL("bar"),"https://textadventures.blob.core.windows.net")) {
      // The GetFileURL string tells us we are either playing in the desktop player or online on the textadventures site.
      SetTimeout (1) {
        MakePrettyPanesLists
      }
    }
    else {
      // we must be playing a converted HTML version
      JS.eval ("setTimeout(1000, function(){MakePrettyPanesLists();})")
    }
  </function>
  <function name="MakePrettyPanesLists"><![CDATA[
    foreach (o, ListExclude(ScopeVisible(),game.pov)) {
      if (not HasAttribute(o, "listalias")) {
        o.listalias = GetDisplayAlias(o)
      }
      o.listalias = Replace(o.listalias,"&nbsp;","")
      containers = ListExclude(ListParents(o), game.pov)
      containers = ListExclude(containers, ListParents(game.pov))
      foreach (c, containers) {
        o.listalias = "&nbsp;&nbsp;" + o.listalias
      }
    }
  ]]></function>
  <function name="PrintPrettyInventory"><![CDATA[
    stuff = ScopeInventory()
    list = ""
    int = 0
    foreach (o, stuff) {
      int = int + 1
      o.prettyalias = GetDisplayName(o)
      foreach (c, ListExclude(ListParents(o), game.pov)) {
        if (ListContains (stuff, c)) {
          o.prettyalias = "&nbsp;&nbsp;" + o.prettyalias
        }
      }
      br = ""
      if (int > 1) {
        br = "<br />"
      }
      list = list + br + o.prettyalias
    }
    msg ("You are carrying:")
    msg (list)
  ]]></function>
  <function name="AddSidenavCmdLink" parameters="cmd"><![CDATA[
    JS.eval ("$('#mySidenav').append('<a href=\"#\" class=\"sidenav-cmdlink\" onclick=\"navCmdClick($(this).html())\">"+cmd+"</a><br />');")
  ]]></function>
  <function name="AddSidenavContactLink"><![CDATA[
    JS.eval ("$('#mySidenav').append('<a href=\"mailto:"+game.contactaddress+"?subject="+game.gamename+"\">Contact</a><br />');")
  ]]></function>
  <function name="CreateSidenav"><![CDATA[
    // Setup navCmdClick() function to handle sideNav command link clicks
    JS.eval ("function navCmdClick(cmd){addText('<br />>'+cmd+'<br />');ASLEvent('HandleSingleCommand', cmd);scrollToEnd();}")
    // Add the CSS
    JS.eval ("var sidenavStyle = \"<style> .sidenav  {  height: 100%;    width: 0;    position: fixed;  transition: 0.5s;  z-index: 999;    top: 0;    right: 0;    background-color: #111;    overflow-x: hidden;    padding-top: 60px;   } .sidenav a {   padding: 8px 8px 8px 32px;    text-decoration: none;  transition: 0.5s;  font-size: 25px;    color: #818181;    display: block;   } .sidenav a:hover {   color: #f1f1f1;  } .sidenav .closebtn {   position: absolute;    top: 0;    right: 25px;    font-size: 36px;    margin-left: 50px; }#sidenav-open{top:25px;}</style>\";$('body').append(sidenavStyle);")
    // Add the sidenav element
    JS.eval ("var sidenavDiv = \"<div id='mySidenav' class='sidenav'><br />    <a href='#' class='closebtn' onclick='closeNav();'>&times;</a> <center><span id='map-holder' /></center></div><span id='sidenav-open' style='font-size:30px;cursor:pointer;top:0;position:fixed;right:0;top:0' onclick='openNav()'>&#9776;</span>'\";$('body').append(sidenavDiv);")
    // Move it to the body element
    JS.eval ("$('body').append($('#mySidenav'));")
    // Move the button, too.
    JS.eval ("$('body').append($('#sidenav-open'));")
    // Set up the openNav() and closeNav() functions
    JS.eval ("function openNav() { $('#mySidenav').width(($(window).width() - $('#gameBorder').width()) / 2);}; function closeNav() {  $('#mySidenav').width('0');};")
  ]]></function>
  <function name="FormatObjectList" parameters="preList, parent, preFinal, postList" type="string"><![CDATA[
    // KVMOD for Oxford Comma
    result = ""
    count = 0
    list = RemoveSceneryObjects(GetDirectChildren(parent))
    if (CheckDarkness()) {
      list = RemoveDarkObjects(list)
    }
    listLength = ListCount(list)
    foreach (item, list) {
      if (LengthOf(result) = 0) {
        result = preList + " "
      }
      result = result + GetDisplayNameLink(item, "object")
      if (CanSeeThrough(item)) {
        result = result + FormatObjectList(" (" + item.contentsprefix, item, preFinal, ")")
      }
      count = count + 1
      if (count = listLength - 1) {
        if (HasAttribute(game,"oxford_comma")) {
          if ((game.oxford_comma) and listLength>2) {
            result = result + ", " + preFinal + " "
          }
          else {
            result = result + " " + preFinal + " "
          }
        }
        else {
          result = result + preFinal + " "
        }
      }
      else if (count < listLength) {
        result = result + ", "
      }
      else {
        result = result + postList
      }
    }
    return (result)
  ]]></function>
  <function name="FormatExitList" parameters="preList, list, preFinal, postList" type="string"><![CDATA[
    // KVMOD for Oxford comma
    result = ""
    listLength = ListCount(list)
    if (listLength > 0) {
      count = 0
      result = preList + " "
      foreach (item, list) {
        result = result + GetDisplayNameLink(item, "exit")
        count = count + 1
        if (count = listLength - 1) {
          if (HasAttribute(game,"oxford_comma")) {
            if ((game.oxford_comma) and listLength>2) {
              result = result + ", " + preFinal + " "
            }
            else {
              result = result + " " + preFinal + " "
            }
          }
          else {
            result = result + preFinal + " "
          }
        }
        else if (count < listLength) {
          result = result + ", "
        }
      }
      result = result + postList
    }
    return (result)
  ]]></function>
  <function name="FormatList" parameters="list, joiner, lastjoiner, nothing" type="string"><![CDATA[
    // KVMOD for Oxford comma
    if (ListCount (list) = 0) {
      return (nothing)
    }
    else {
      result = ""
      count = 0
      listLength = ListCount(list)
      foreach (item, list) {
        if (TypeOf(item) = "object") {
          result = result + GetDisplayName(item)
        }
        else {
          result = result + item
        }
        count = count + 1
        if (count = listLength - 1) {
          if (not IsRegexMatch("^\\W", lastjoiner)) {
            result = result + " "
          }
          if (HasAttribute(game,"oxford_comma")) {
            if (game.oxford_comma) {
              result = result + ", " + lastjoiner + " "
            }
          }
          else {
            result = result + lastjoiner + " "
          }
        }
        else if (count < listLength) {
          result = result + joiner + " "
        }
      }
      return (Trim (result))
    }
  ]]></function>
  <function name="GetImgDivWithFallback" parameters="imgname, id, classname, style" type="string"><![CDATA[
    // @param {string} imgname The name of the image file. Example: myimagename.png
    // @param {string} id Optional. If exists, will be set as the element's ID
    // @param {string} classname Optional. If exists, will be set as the element's CLASS
    // @return {string} An HTML element to display the image from local file OR from Raist's site as a fallback
    if (not IsDefined("id")) {
      id = ""
    }
    if (not IsDefined("classname")) {
      classname = ""
    }
    if (not IsDefined("style")) {
      style = ""
    }
    return ("<img id=\"" + id + "\" class=\"" + classname + "\" style=\"" + style + "\" src=\"" + GetFileURL(imgname) + "\" type=\"image/png\" onerror=\"this.src='" + game.http_img_dir + imgname + "'\" />")
  ]]></function>
  <function name="Picture" parameters="img">
    msg (GetImgDivWithFallback (img))
  </function>
  <function name="PreLoadImage" parameters="href"><![CDATA[
    s = "<link rel=\"preload\" as=\"image\" href=\"" + href + "\" />"
    JS.eval ("$('head').append('" + s + "');")
  ]]></function>
  <function name="SetWalkthroughRunning" parameters="bool">
    // Quest Retro ONLY
    if (not IsDefined("bool")) {
      bool = false
    }
    game.walkthrough_is_running = Eval(bool)
  </function>
  <function name="WalkthroughIsRunning" type="boolean">
    // Quest Retro ONLY
    return (GetBoolean(game, "walkthrough_is_running"))
  </function>
  <function name="HideGameElement">
    JS.eval ("$('#gameBorder').hide();")
  </function>
  <function name="ShowGameElement">
    JS.eval ("$('#gameBorder').show();")
  </function>
  <function name="ListExits"><![CDATA[
    desc = ""
    for (i, 1, 4) {
      if (i = game.autodescription_youcango) {
        exits = FormatExitList(game.pov.parent.exitslistprefix, GetExitsList(), Template("Or"), ".")
        desc = AddDescriptionLine(desc, exits)
        if (game.autodescription_youcango_newline) {
          msg (desc + "<br />")
          desc = ""
        }
      }
    }
  ]]></function>
  <function name="GetListDisplayAlias" parameters="obj" type="string">
    // TODO: Why is this copied to the game file?
    if (HasString(obj, "listalias")) {
      result = ProcessText(obj.listalias)
    }
    else {
      result = GetDisplayAlias(obj)
    }
    return (result)
  </function>
  <function name="GetListDisplayPic" parameters="obj" type="string">
    if (HasString(obj, "pic")) {
      result = obj.pic
    }
    else {
      result = GetDisplayPic(obj)
    }
    return (result)
  </function>
  <function name="GetDisplayPic" parameters="obj" type="string">
    if (HasString(obj, "pic")) {
      result = obj.pic
    }
    else {
      // result = msg("No image available")
      result = "No image available"
    }
    return (result)
  </function>
  <function name="Gen_Loot" parameters="object"><![CDATA[
    if (GetInt(object, "level") > 0) {
      if (GetInt(object, "level") = 1) {
        payoff = (ToInt(ToString(object.gold)))
      }
      else if (GetInt(object, "level") = 2) {
        payoff = (ToInt(ToString(object.gold)))
      }
      else if (GetInt(object, "level") = 3) {
        payoff = (ToInt(ToString(object.gold)))
      }
      else if (GetInt(object, "level") = 4) {
        payoff = (ToInt(ToString(object.gold)))
      }
      else if (GetInt(object, "level") = 5) {
        payoff = (ToInt(ToString(object.gold)))
      }
      switch (true) {
        case (object.level = 1) {
          if (RandomChance(15)) {
            newobj = Create_Loot(assassinspike1)
            MoveObject (newobj, object)
          }
          else {
            newobj = Create_Loot(axe1)
            MoveObject (newobj, object)
          }
        }
        case (object.level = 2) {
          if (RandomChance(15)) {
            newobj = Create_Loot(axe1)
            MoveObject (newobj, object)
          }
          else {
            newobj = Create_Loot(bardiche1)
            MoveObject (newobj, object)
          }
        }
        case (object.level = 3) {
          if (RandomChance(15)) {
            newobj = Create_Loot(bow1)
            MoveObject (newobj, object)
          }
          else {
            newobj = Create_Loot(longsword1)
            MoveObject (newobj, object)
          }
        }
        case (object.level = 4) {
          if (RandomChance(15)) {
            newobj = Create_Loot(mace1)
            MoveObject (newobj, object)
          }
          else {
            newobj = Create_Loot(qstaff1)
            MoveObject (newobj, object)
          }
        }
        case (object.level = 5) {
          if (RandomChance(15)) {
            newobj = Create_Loot(spear1)
            MoveObject (newobj, object)
          }
          else {
            newobj = Create_Loot(warfork1)
            MoveObject (newobj, object)
          }
        }
        default {
          newobj = Create_Loot(assassinspike1)
          MoveObject (newobj, object)
        }
      }
      PrintCentered ("<br>You received " +(payoff)+ " gp after the demise of " +object.alias+ ".<br><br>")
      player.gold = (player.gold) + (payoff)
      set (object, "level", 0)
    }
  ]]></function>
  <function name="Gen_Mag_Props" parameters="object"><![CDATA[
    obj = object
    if (GetBoolean(obj, "wtype")) {
      list add (magical_props, AttackChance)
      list add (magical_props, BonusDex)
      list add (magical_props, BonusHits)
      list add (magical_props, BonusInt)
      list add (magical_props, BonusMana)
      list add (magical_props, BonusStam)
      list add (magical_props, BonusStr)
      list add (magical_props, Chaos)
      list add (magical_props, Cold)
      list add (magical_props, DefendChance)
      list add (magical_props, Direct)
      list add (magical_props, Energy)
      list add (magical_props, Fire)
      list add (magical_props, LowerManaCost)
      list add (magical_props, Luck)
      list add (magical_props, NightSight)
      list add (magical_props, Physical)
      list add (magical_props, Poison)
      list add (magical_props, ReflectPhysical)
      list add (magical_props, RegenHits)
      list add (magical_props, RegenMana)
      list add (magical_props, RegenStam)
      list add (magical_props, ResistColdBonus)
      list add (magical_props, ResistEnergyBonus)
      list add (magical_props, ResistFireBonus)
      list add (magical_props, ResistPhysicalBonus)
      list add (magical_props, ResistPoisonBonus)
      list add (magical_props, SpellChanneling)
      list add (magical_props, SpellDamage)
      list add (magical_props, WeaponDamage)
      list add (magical_props, HitColdArea)
      list add (magical_props, HitDispel)
      list add (magical_props, HitEnergyArea)
      list add (magical_props, HitFireArea)
      list add (magical_props, HitFireball)
      list add (magical_props, HitHarm)
      list add (magical_props, HitLeechHits)
      list add (magical_props, HitLeechMana)
      list add (magical_props, HitLeechStam)
      list add (magical_props, HitLightning)
      list add (magical_props, HitLowerAttack)
      list add (magical_props, HitLowerDefend)
      list add (magical_props, HitMagicArrow)
      list add (magical_props, HitPhysicalArea)
      list add (magical_props, MageWeapon)
      if (GetInt(obj, "rarity") < 10) {
        PrintCentered ("One magical property has randomly been added...")
      }
    }
    else if (GetBoolean(obj, "arm_type")) {
      dictionary add (magical_props, "1", AttackChance)
      dictionary add (magical_props, "2", BonusDex)
      dictionary add (magical_props, "3", BonusHits)
      dictionary add (magical_props, "4", BonusInt)
      dictionary add (magical_props, "5", BonusMana)
      dictionary add (magical_props, "6", BonusStam)
      dictionary add (magical_props, "7", BonusStr)
      dictionary add (magical_props, "8", Chaos)
      dictionary add (magical_props, "9", Cold)
      dictionary add (magical_props, "10", DefendChance)
      dictionary add (magical_props, "11", Direct)
      dictionary add (magical_props, "12", Energy)
      dictionary add (magical_props, "13", Fire)
      dictionary add (magical_props, "14", LowerManaCost)
      dictionary add (magical_props, "15", Luck)
      dictionary add (magical_props, "16", NightSight)
      dictionary add (magical_props, "17", Physical)
      dictionary add (magical_props, "18", Poison)
      dictionary add (magical_props, "19", ReflectPhysical)
      dictionary add (magical_props, "20", RegenHits)
      dictionary add (magical_props, "21", RegenMana)
      dictionary add (magical_props, "22", RegenStam)
      dictionary add (magical_props, "23", ResistColdBonus)
      dictionary add (magical_props, "24", ResistEnergyBonus)
      dictionary add (magical_props, "25", ResistFireBonus)
      dictionary add (magical_props, "26", ResistPhysicalBonus)
      dictionary add (magical_props, "27", ResistPoisonBonus)
      dictionary add (magical_props, "28", SpellChanneling)
      dictionary add (magical_props, "29", SpellDamage)
      dictionary add (magical_props, "30", WeaponDamage)
    }
    if (GetInt(obj, "rarity") > 10) {
      PrintCentered ("One magical property added...")
    }
  ]]></function>
  <function name="ShowMenuNoNumbers" parameters="caption, options, allowCancel, callback"><![CDATA[
    outputsection = StartNewOutputSection()
    msg (caption)
    count = 0
    game.menuoptionskeys = NewStringList()
    foreach (option, options) {
      list add (game.menuoptionskeys, option)
      count = count + 1
      if (TypeOf(options) = "stringlist") {
        optionText = option
      }
      else {
        optionText = StringDictionaryItem(options, option)
      }
      msg ("<a class=\"cmdlink\" style=\"" + GetCurrentLinkTextFormat() + "\" onclick=\"ASLEvent('ShowMenuResponse','" + option + "')\">" + optionText + "</a>")
    }
    game.menuopt = option
    EndOutputSection (outputsection)
    game.menuoptions = options
    game.menuallowcancel = allowCancel
    game.menucallback = callback
    game.menuoutputsection = outputsection
  ]]></function>
  <function name="g_higherres1"><![CDATA[
    ClearScreen
    set (player, "energy", GetRandomInt(40,60))
    set (player, "poison", GetRandomInt(40,60))
    set (player, "cold", GetRandomInt(40,60))
    set (player, "physical", GetRandomInt(40,60))
    set (player, "fire", GetRandomInt(40,60))
    set (player, "str", GetRandomInt(10,50))
    set (player, "dex", GetRandomInt(75,90))
    set (player, "int", GetRandomInt(25,40))
    player.stam = ((player.dex) * (player.str)) / 10
    player.stam = ToInt(ToString(player.stam))
    player.mp = ((player.int) * 3) / 2
    player.mp = ToInt(ToString(player.mp))
    player.maxstam = (player.stam)
    player.maxmp = (player.mp)
    set (player, "max_dam", (GetRandomInt(1,3) + (player.str)))
    set (player, "dam", (game.pov.dam + game.pov.max_dam))
    set (player, "Pluck", GetRandomInt(75,90))
    set (player, "SpellDamage", (((player.int) * 4)  / 10) + (player.SpellDamage))
    player.SpellDamage = ToInt(ToString(player.SpellDamage))
    SetObjectFlagOff (player, "not_set")
    SetObjectFlagOff (player, "reg_resist")
    PrintCentered ("Very well. Let us hope, for your sake, that was the correct choice. Your resistance bases have been boosted by 20 points! <i>LOOK</i> at the spellbook in the bottom-right corner (it will be moved to your backpack). Then you will see the shortcut bar appear. Click the [HELP] button for more information. Let us now begin the adventure...")
    MoveObject (spellbook1, player)
  ]]></function>
  <function name="g_higherpow1"><![CDATA[
    ClearScreen
    set (player, "energy", GetRandomInt(20,40))
    set (player, "poison", GetRandomInt(20,40))
    set (player, "cold", GetRandomInt(20,40))
    set (player, "physical", GetRandomInt(20,40))
    set (player, "fire", GetRandomInt(20,40))
    set (player, "str", GetRandomInt(3,9))
    set (player, "dex", GetRandomInt(75,90))
    set (player, "int", GetRandomInt(100,150))
    player.stam = ((player.dex) * (player.str)) / 10
    player.stam = ToInt(ToString(player.stam))
    player.mp = ((player.int) * 3) / 2
    player.mp = ToInt(ToString(player.mp))
    player.maxstam = (player.stam)
    player.maxmp = (player.mp)
    set (player, "max_dam", (GetRandomInt(5,9) + (player.str)))
    set (player, "dam", (game.pov.dam + game.pov.max_dam))
    set (player, "Pluck", GetRandomInt(75,90))
    set (player, "SpellDamage", (((player.int) * 5)  / 10))
    player.SpellDamage = ToInt(ToString(player.SpellDamage))
    player.PoisonDam = ToInt(ToString(player.SpellDamage+player.dam))
    SetObjectFlagOff (player, "not_set")
    SetObjectFlagOff (player, "reg_dam")
    PrintCentered ("Ah, so it will be more power! Very well. Let us hope, for your sake, that was the correct choice. The damage and healing from your Words of Power have been boosted by " + player.SpellDamage + "%! <i>LOOK</i> at the spellbook in the bottom-right corner (it will be moved to your backpack). Then you will see the shortcut bar appear. Click the [HELP] button for more information. Let us now begin the adventure...")
    MoveObject (spellbook1, player)
  ]]></function>
  <function name="g_regresist1">
    set (player, "energy", GetRandomInt(20,40))
    set (player, "poison", GetRandomInt(20,40))
    set (player, "cold", GetRandomInt(20,40))
    set (player, "physical", GetRandomInt(20,40))
    set (player, "fire", GetRandomInt(20,40))
    set (player, "str", GetRandomInt(10,50))
    set (player, "dex", GetRandomInt(75,90))
    set (player, "int", GetRandomInt(25,40))
    player.stam = ((player.dex) * (player.str)) / 10
    player.stam = ToInt(ToString(player.stam))
    player.mp = ((player.int) * 3) / 2
    player.mp = ToInt(ToString(player.mp))
    player.maxstam = (player.stam)
    player.maxmp = (player.mp)
    set (player, "SpellDamage", (((player.int) * 4)  / 10) + (player.SpellDamage))
    player.SpellDamage = ToInt(ToString(player.SpellDamage))
    set (player, "Pluck", GetRandomInt(75,90))
    ShowRoomDescription
    play sound ("Minocpos.mp3", false, true)
  </function>
  <function name="g_regdam1">
    set (player, "max_dam", GetRandomInt(1,5))
    set (player, "dam", (game.pov.dam + game.pov.max_dam))
    set (player, "str", GetRandomInt(10,50))
    set (player, "dex", GetRandomInt(75,90))
    set (player, "int", GetRandomInt(25,40))
    player.stam = ((player.dex) * (player.str)) / 10
    player.stam = ToInt(ToString(player.stam))
    player.mp = ((player.int) * 3) / 2
    player.mp = ToInt(ToString(player.mp))
    player.maxstam = (player.stam)
    player.maxmp = (player.mp)
    set (player, "SpellDamage", (((player.int) * 4)  / 10) + (player.SpellDamage))
    player.SpellDamage = ToInt(ToString(player.SpellDamage))
    set (player, "Pluck", GetRandomInt(75,90))
    ShowRoomDescription
  </function>
  <function name="Bank"><![CDATA[
    if (player.gold = 1) {
      PrintCentered ("<table id='oneg'><tr><td>You are currently carrying: " +player.gold+ " gp in your coin pouch.</td></tr></table>")
    }
    else if (player.gold > 1) {
      PrintCentered ("<table id='gps'><tr><td>You are currently carrying: " +player.gold+ " gps in your coin pouch.</td></tr></table>")
    }
    else if (player.gold < 1) {
      PrintCentered ("<table id='ngps'><tr><td>You are currently carrying: nothing in your coin pouch.</td></tr></table>")
    }
    else {
      PrintCentered ("<table id='vgps'><tr><td>You are currently carrying: a bottomless void of nothingness, because something has broken.</td></tr></table>")
    }
  ]]></function>
  <function name="faq_home"><![CDATA[
    // Library TEHelp_Lib
    options = Split("What is this?;How do I play?;Can I Save my game?;What do I do?;Why we fight.;Known Bugs", ";")
    ShowMenu ("<div id='faq'>FAQs</div>", options, true) {
      switch (result) {
        case ("What is this?") {
          PrintCentered ("<div id='what'>What is this?<br>- The Expanse Offline Quest System<br></div><br /><a onclick=\"bottomFunction()\" id=\"myBtn\" class=\"btn btn-mini\" title=\"Go to the bottom\"><i class=\"icon-down\"></i></a>")
          msg ("<div id='whatcon'>This system is based upon Ultima and Ultima Online with some custom features added and pop culture content. It was designed to offer a different way to play Ultima Online, or UO. The idea grew and eventually exploded into this vast system of inter-connecting quests.<br /><br />While a traditional UO game offers an isometric view (looking down from above, but at a slight angle) and animations with a point and click interface, The Expanse OQS utilizes a mainly text-based platform, with static images built into a web page. The browser \"hosts\" each quest just like any other website and it utilizes javascript for many of the \"background\" operations; i.e. handling turn-based combat, etc.<br /><br />Since this system is based upon The Expanse UO freeshard, many of the quests are recreations of existing quests available on the freeshard, which had a strong, pre-Stygian Abyss, emulation system (actual UO client version was 7.0.12.1, emulated with RunUO/ServUO).<br></div>")
          msg ("<br>")
          Ask ("<div id='helpful'>Was this helpful?</div>") {
            if ((result)) {
              Ask ("<div id='backhome'>Would you like to go back to the FAQ Home?</div>") {
                if ((result)) {
                  faq_home
                }
                else if (not (result)) {
                  Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                    if ((result)) {
                      PrintCentered ("<br>Please enter your question topic below and a brief description and then Enter:<br>")
                      get input {
                        text = (result)
                        msg ("<br>Click the link below to launch your local email client, if installed...<br>")
                        msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a>")
                        msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br>")
                      }
                    }
                    else {
                      PrintCentered ("Resuming game...<br />")
                      ShowRoomDescription
                      PrintCentered ("<br />Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.")
                    }
                  }
                }
                else {
                  PrintCentered ("Resuming game...")
                  ShowRoomDescription
                  PrintCentered ("<br />Game resumed.<br />")
                }
              }
            }
            else {
              Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                if ((result)) {
                  PrintCentered ("<br />Please enter your question topic and a brief description and then Enter:<br>")
                  get input {
                    text = (result)
                    msg ("<br>Click the link below to launch your local email client, if installed...<br>")
                    msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a>")
                    msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br>")
                  }
                }
                else {
                  PrintCentered ("Resuming game...<br />")
                  ShowRoomDescription
                  PrintCentered ("Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br>")
                }
              }
            }
          }
        }
        case ("How do I play?") {
          PrintCentered ("<div id='how'>How do I play?<br>- The Expanse Offline Quest System<br></div><br /><a onclick=\"bottomFunction()\" id=\"myBtn\" class=\"btn btn-mini\" title=\"Go to the bottom\"><i class=\"icon-down\"></i></a>")
          msg ("<div id='howcon'>This is mainly a text-based Choose-Your-Own-Adventure, or SUD (single user dungeon). The framework of the system operates through javascript and displays in a browser window, so you won't need any special software to play.<br /><br />Depending on the device you are using to interact with this platform, the basic concept is \"read, point and click, with more reading\". The \"point and click\" could be your fingertip or stylus if you are using a smartphone or tablet. At this time, the interface itself is a tad wide for most smartphones. A future update will address this issue (likely with a sliding interface). Until then, every effort has been made to make sure all the text is visible, with the images being a secondary consideration. Text that can be interacted with is usually colored differently than the text surrounding it. If an item has an image, you can interact with it.<br /><br />NOTE: In the event you are not a huge fan of reading a game in order to play it; there is a lot of reading that is optional. Sure you can skim across the text, survive combat and still complete each quest, in many different ways (because these quests are more fluid than a traditional Choose-Your-Own-Adventure). However, a vast part of the appeal to text-based adventures was the level of being immersed in the story that one felt that was provided by the descriptive text. The Expanse OQS attempts to balance some of the reading, with images from Ultima Online (including some custom graphics designed by Raist/AJ). In most instances, the descriptive text just adds a lot more ambience, like the description of a room for example.<br></div>")
          msg ("<br>")
          Ask ("<div id='helpful'>Was this helpful?</div>") {
            if ((result)) {
              Ask ("<div id='backhome'>Would you like to go back to the FAQ Home?</div>") {
                if ((result)) {
                  faq_home
                }
                else if (not (result)) {
                  Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                    if ((result)) {
                      PrintCentered ("<br />Please enter your question topic and a brief description and then Enter:<br>")
                      get input {
                        text = (result)
                        msg ("<br />Click the link below to launch your local email client, if installed...<br />")
                        msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a><br />")
                        msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br />")
                      }
                    }
                    else {
                      PrintCentered ("Resuming game...<br />")
                      ShowRoomDescription
                      PrintCentered ("<br />Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br />")
                    }
                  }
                }
                else {
                  PrintCentered ("Resuming game...")
                  ShowRoomDescription
                  PrintCentered ("Game resumed.<br />")
                }
              }
            }
            else {
              Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                if ((result)) {
                  PrintCentered ("Please enter your question topic and a brief description and then Enter:<br>")
                  get input {
                    text = (result)
                    msg ("Click the link below to launch your local email client, if installed...<br />")
                    msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a><br />")
                    msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br />")
                  }
                }
                else {
                  PrintCentered ("Resuming game...<br />")
                  ShowRoomDescription
                  PrintCentered ("<br />Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br />")
                }
              }
            }
          }
        }
        case ("Can I Save my game?") {
          PrintCentered ("<div id='can'>Can I Save my game?<br>- The Expanse Offline Quest System<br></div><br /><a onclick=\"bottomFunction()\" id=\"myBtn\" class=\"btn btn-mini\" title=\"Go to the bottom\"><i class=\"icon-down\"></i></a>")
          msg ("<div id='cancon'>While you cannot locally save a quest while you are playing it, if you close your browser and DO NOT DELETE TEMPORARY INTERNET FILES, when you go back to the website address of the quest, your game will continue where you left off. If you stop playing a game and begin a new game or begin a new game from another link, that data will overwrite the previous game you stopped playing. Only one game at a time is stored in the Temporary Internet Files.<br /><br /><div id='secthead'>Saving Items</div><br><br />Even though you cannot save your actual game (and even though it is stored in your temporary internet files), you may Save certain Items in your inventory from each game and then Load them into a different game, in order to gain any benefits a particular item might offer such as: magical properties for weapons and armor that increase Luck or Strength, offer a different type of damage (direct damage, fire damage, cold damage, etc) and other options with more features planned in the future.<br /><br /><div id='secthead'>To Save an Item</div><br><br />The item must be in your inventory in order to be Saved. If an item has not been looted (removed from a deceased character) or remains \"on the ground\", it cannot be Saved.<br /><br />Only specific items can be Saved. Quest-related items cannot be Saved, but weapons, armor and most other looted items can be Saved. If an item can be Saved, you will see an Export button when you select that item in your inventory. When you select Export a separate dialog window will appear with instructions for Saving that item (you are actually saving a \"personal copy\" of the actual Item). Once you have Saved your Item, simply continue playing (the Save/Load processes operate as each being ONE turn).<br /><br /><div id='secthead'>To Load an Item</div><br><br />Simply type Import and a separate dialog window will appear with instructions for Loading an Item. Repeat as needed for multiple items. Once you have finished the Loading process, simply continue playing (the Save/Load processes operate as each being ONE turn).<br /><br /><div id='notes'>NOTE: If you have your browser set to Delete Temp Files when closed, you will lose your progress and have to begin a new game. If you have already completed the Save process with an Item, deleting temporary files has no effect on the Saved item (since you are saving the information locally on your computer in a text file).<br></div>")
          msg ("<br>")
          Ask ("<div id='helpful'>Was this helpful?</div>") {
            if ((result)) {
              Ask ("<div id='backhome'>Would you like to go back to the FAQ Home?</div>") {
                if ((result)) {
                  faq_home
                }
                else if ((result)) {
                  Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                    if (not (result)) {
                      PrintCentered ("<br />Please enter your question topic and a brief description and then Enter:<br>")
                      get input {
                        text = (result)
                        msg ("Click the link below to launch your local email client, if installed...<br />")
                        msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a><br />")
                        msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br />")
                      }
                    }
                    else {
                      PrintCentered ("Resuming game...<br />")
                      ShowRoomDescription
                      PrintCentered ("<br />Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br />")
                    }
                  }
                }
                else {
                  PrintCentered ("Resuming game...")
                  ShowRoomDescription
                  PrintCentered ("Game resumed.<br />")
                }
              }
            }
            else {
              Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                if ((result)) {
                  PrintCentered ("Please enter your question topic and a brief description and then Enter:<br>")
                  get input {
                    text = (result)
                    msg ("Click the link below to launch your local email client, if installed...<br />")
                    msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a><br />")
                    msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br />")
                  }
                }
                else {
                  PrintCentered ("Resuming game...<br />")
                  ShowRoomDescription
                  PrintCentered ("Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br />")
                }
              }
            }
          }
        }
        case ("What do I do?") {
          PrintCentered ("<div id='whatdo'>What do I do?<br>- The Expanse Offline Quest System<br></div><br /><a onclick=\"bottomFunction()\" id=\"myBtn\" class=\"btn btn-mini\" title=\"Go to the bottom\"><i class=\"icon-down\"></i></a>")
          msg ("<div id='whatdocon'><div id='whatdocon_img'><img src='http://www.uoexpanse.com/quests/images/help_img_main_1.png' /></div>The gameplay window sections are each explained below.<br><div id='panelist'><br />1.) <img src='http://www.uoexpanse.com/quests/images/help_img2.png' /><br>Menu/Navigation - (clockwise, 5 dark buttons) Mal, Fel, Tram, Tok, Ilsh are buttons that are linked to navigation maps for each respective land. (2 light buttons) Arrow scrolls to the bottom of the page when clicked. Menu button contains Restart and other general information about the software as well as contact links.<br><br />2.) <img src='http://www.uoexpanse.com/quests/images/help_img3.png' /><br>The Gameplay Field - With the exception of Restarting, 99% of the gaming interaction will happen here. The other 1% being copying/pasting text to and from text files. This area also contains: Inventory, Character and Legend sections on the right, with the Command bar and Shortcut bar along the bottom (these are each explained in more detail farther down).<br><br />3.)<img src='http://www.uoexpanse.com/quests/images/help_img4.png' /><br> Inventory Backpack - Items you pickup and are given will most likely be shown here. In the event the content list grows beyond the boundaries of the backpack, a scrollbar shall appear inside the backpack. Inside the backpack, you can interact with most items in a different way and/or achieve different results than if the item were not in your possession. Be aware though that there are limits to the amount of weight a player can carry in their backpack. If you reach your limit, you will simply be unable to pick up anything else until you address the situation.<br><br />4.) <img src='http://www.uoexpanse.com/quests/images/help_img5.png' /><br>Character Information - This box contains pertinent information required for one's survival while playing. <div id='chartable'><table><tr><td>S. Dam <br>Spell Damage directly affects how much damage is generated by that spell each time it is successfully cast.<br></td></tr><tr><td><br>Mana <br>Fuel for spells (if it reaches  0, no spells)<br></td></tr><tr><td><br>Stam <br>Stamina, required to swing your handheld weapon (if 0, no attacking)<br></td></tr><tr><td><br>Luck <br>Luck, can play a role in loot amounts and other behind-the-scenes events<br></td></tr><tr><td><br>W. Dam <br>Weapon Damage directly affects how much damage is generated by that weapon for each round of [Combat].<br></td></tr><tr><td><br>Int <br>Intelligence directly affects the amount of Mana generated for each player for each game.<br></td></tr><tr><td><br>Dex <br>Dexterity affects one's Hit Chance, which determines if you actually [HIT] the target during combat.<br></td></tr><tr><td><br>Str <br>Strength affects the Weapon Damage and Stamina that is created.<br></td></tr><tr><td><br>Health <br>Health, if it reaches 0, [Game Over, man, Game Over!]</td></tr></table></div><br />5.) <img src='http://www.uoexpanse.com/quests/images/help_img6.png' /><br>Legend - Mostly NPCs and Monsters will appear here, but sometimes [special] exits as well.<br><br />6.) <img src='http://www.uoexpanse.com/quests/images/help_img7.png' /><br>Command Bar - While the majority of the playing time is spent [clicking], most everything you may [click] or [do], also has text counterpart. Alternatively, commands such as: Look, Look at Longsword, Go North, Go N and more could just be typed instead.<br><br />7.) <img src='http://www.uoexpanse.com/quests/images/help_img8.png' /><br>Shortcut Bar - (from left to right) <div id='shortable'><table><tr><td>Spellbook <br>provides a reference list of the Spells available and their [common names], as well as the [Charges Remaining]. If the spellbook has 0 Charges Remaining, it will have to be Recharged. Seek out a [qualified profession] that may recharge it for you. Be aware, sometimes this could cost you more than simply gold.<br></td></tr><tr><td><br>Look <br>Displays/Refreshes the text in the Gameplay Field.<br></td></tr><tr><td><br>In Vas Mani <br>This is your [HEALING SPELL] and it does NOT use Mana to cast, but it CAN fail.<br></td></tr><tr><td><br>Quest Log <br>If you have any Active Quests, they will be displayed after you [click] the button.<br></td></tr><tr><td><br>Help <br>Opens the Help/FAQ system at any time.<br></td></tr><tr><td><br>Coin Pouch <br>Displays the amount of [GOLD] one is currently carrying.<br></td></tr><tr><td><br>Travel Log <br>Accepting/Advancing/Completing quests, performing tasks and other things award [POINTS]. As items are added to the list, you will see: what you received points for and how many. (Feel free to share screenshots of final scores on social media with the hashtag [ #UOExpanseOQS ] please.)<br></td></tr><tr><td><br>Map <br>Opens the area map, specific for that area and indicates where the player is currently located.</td></tr></table></div><br />As you read through the text, you will see certain words that are a different color than the rest of the words around it. These are usually \"key\" words, in that you can click on them and interact in some way. Usually these are readily available elsewhere in the Gameplay Field, but offered in more than one location depending on playing style.</div></div>")
          msg ("<br>")
          Ask ("<div id='helpful'>Was this helpful?</div>") {
            if ((result)) {
              Ask ("<div id='backhome'>Would you like to go back to the FAQ Home?</div>") {
                if ((result)) {
                  faq_home
                }
                else if (not (result)) {
                  Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                    if ((result)) {
                      PrintCentered ("Please enter your question topic and a brief description and then Enter:<br>")
                      get input {
                        text = (result)
                        msg ("Click the link below to launch your local email client, if installed...<br />")
                        msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a><br />")
                        msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br />")
                      }
                    }
                    else {
                      PrintCentered ("Resuming game...<br />")
                      ShowRoomDescription
                      PrintCentered ("Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br />")
                    }
                  }
                }
                else {
                  PrintCentered ("Resuming game...")
                  ShowRoomDescription
                  PrintCentered ("Game resumed.<br />")
                }
              }
            }
            else {
              Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                if ((result)) {
                  PrintCentered ("Please enter your question topic and a brief description and then Enter:<br>")
                  get input {
                    text = (result)
                    msg ("Click the link below to launch your local email client, if installed...<br>")
                    msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a><br />")
                    msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br />")
                  }
                }
                else {
                  PrintCentered ("Resuming game...<br />")
                  ShowRoomDescription
                  PrintCentered ("Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br />")
                }
              }
            }
          }
        }
        case ("Why we fight.") {
          PrintCentered ("<div id='why'>Why we fight.<br>- The Expanse Offline Quest System<br></div><br /><a onclick=\"bottomFunction()\" id=\"myBtn\" class=\"btn btn-mini\" title=\"Go to the bottom\"><i class=\"icon-down\"></i></a>")
          msg ("<div id='whycon'>Combat is turned-based, so WATCH YOUR HEALTH. Casting a spell is actually a TWO-TURN process; selecting the spell is ONE turn and then casting it is the SECOND turn.<br /><br />Not every attack will be a HIT. If you miss with a weapon or a spell, you will see this message:<br><br /><br />A terrible event has occured and the streams have been crossed! No, sorry your spell just fizzled. Maybe you are hungry or thirsty or tired. Have you eaten anything or consumed any fluids recently? Did you sleep well? Perhaps this was just random chance...<br><br /><br />Simply try your attack again and better luck next time...WATCH YOUR HEALTH.<br></div>")
          msg ("<br>")
          Ask ("<div id='helpful'>Was this helpful?</div>") {
            if ((result)) {
              Ask ("<div id='backhome'>Would you like to go back to the FAQ Home?</div>") {
                if ((result)) {
                  faq_home
                }
                else if (not (result)) {
                  Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                    if ((result)) {
                      PrintCentered ("Please enter your question topic and a brief description and then Enter:<br>")
                      get input {
                        text = (result)
                        msg ("Click the link below to launch your local email client, if installed...<br />")
                        msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a><br />")
                        msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br />")
                      }
                    }
                    else {
                      PrintCentered ("Resuming game...<br />")
                      ShowRoomDescription
                      PrintCentered ("Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br />")
                    }
                  }
                }
                else {
                  PrintCentered ("Resuming game...")
                  ShowRoomDescription
                  PrintCentered ("Game resumed.<br />")
                }
              }
            }
            else {
              Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                if ((result)) {
                  PrintCentered ("Please enter your question topic and a brief description and then Enter:<br>")
                  get input {
                    text = (result)
                    msg ("Click the link below to launch your local email client, if installed...<br>")
                    msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a><br />")
                    msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br />")
                  }
                }
                else {
                  PrintCentered ("Resuming game...<br />")
                  ShowRoomDescription
                  PrintCentered ("Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br />")
                }
              }
            }
          }
        }
        case ("Known Bugs") {
          PrintCentered ("<div id='what'>Known Bugs<br>- The Expanse Offline Quest System<br></div><br /><a onclick=\"bottomFunction()\" id=\"myBtn\" class=\"btn btn-mini\" title=\"Go to the bottom\"><i class=\"icon-down\"></i></a>")
          msg ("<div id='whatcon'>Bugs are inevitable, but eventually they are either solved or simply ignored and worked around. While some bugs are slowly being hammered into functioning pieces of the whole, others will persist because they are a creative way to have Quest do something it was not intended to do. As a player, you are not expected to know the difference, but this list is here for reference:<br><ul>Bug List<br><br><li>1.) Respawns & Targets - If you do not eliminate monsters in a room and continue to move through the room, when you stop to fight, the target list will show multiple entries for the same target. (note: you can still target that enemy using any of the links in the list though.)</li><br><li>2.) Window Scrolling - If a bunch of information is displayed at once, you have to manually scroll to the bottom of the page. (note: a Page down button was added to make that easier.)<br></div>")
          msg ("<br>")
          Ask ("<div id='helpful'>Was this helpful?</div>") {
            if ((result)) {
              Ask ("<div id='backhome'>Would you like to go back to the FAQ Home?</div>") {
                if ((result)) {
                  faq_home
                }
                else if (not (result)) {
                  Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                    if ((result)) {
                      PrintCentered ("<br>Please enter your question topic below and a brief description and then Enter:<br>")
                      get input {
                        text = (result)
                        msg ("<br>Click the link below to launch your local email client, if installed...<br>")
                        msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a>")
                        msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br>")
                      }
                    }
                    else {
                      PrintCentered ("Resuming game...<br />")
                      ShowRoomDescription
                      PrintCentered ("<br />Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.")
                    }
                  }
                }
                else {
                  PrintCentered ("Resuming game...")
                  ShowRoomDescription
                  PrintCentered ("<br />Game resumed.<br />")
                }
              }
            }
            else {
              Ask ("<div id='rques'>Would you like to contact Raist/AJ with a question?</div>") {
                if ((result)) {
                  PrintCentered ("<br />Please enter your question topic and a brief description and then Enter:<br>")
                  get input {
                    text = (result)
                    msg ("<br>Click the link below to launch your local email client, if installed...<br>")
                    msg ("<a href=\"mailto:raist@uoexpanse.com?subject=Question%20about%20The%20Expanse%20Offline%20Quest%20System?body=(text)\">Launch</a>")
                    msg ("<br>When finished, simply continue playing. This does not count as a \"turn\".<br>")
                  }
                }
                else {
                  PrintCentered ("Resuming game...<br />")
                  ShowRoomDescription
                  PrintCentered ("Game resumed.<br /><br />Note: If you should choose to review the FAQ again, simply click the Help button.<br>")
                }
              }
            }
          }
        }
      }
    }
  ]]></function>
  <function name="BuyingPrice" parameters="object" type="int">
    return (object.price * 3)
  </function>
  <function name="SellingPrice" parameters="object" type="int">
    return (object.price)
  </function>
  <function name="StealObject" parameters="object">
    msg ("You cannot just steal stuff!")
  </function>
  <function name="SetupMerch" parameters="object"><![CDATA[
    obj = object
    if (not HasString(obj, "alias")) {
      obj.alias = obj.name
    }
    obj.scenery = true
    // obj.price = RandomRnd()
    obj.listalias2 = "<br>"+obj.alias + " (" + BuyingPrice(obj) + " gp)"
    obj.cloneme = true
    obj.take => {
      StealObject (this)
    }
    obj.buy => {
      BuyObject (this)
    }
  ]]></function>
  <function name="BuyObject" parameters="obj" type="object"><![CDATA[
    if (BuyingPrice(obj) > player.gold) {
      msg ("You can't afford that!")
    }
    else {
      if (GetBoolean(obj, "cloneme")) {
        newobj = CloneObject(obj)
        newobj.take = false
        newobj.parent = game.pov
        newobj.buy = null
        newobj.listalias2 = obj.alias
        newobj.scenery = false
        player.gold = player.gold - BuyingPrice(newobj)
        msg ("You buy " + newobj.article + " for " + BuyingPrice(newobj) + " gp.")
      }
      else {
        msg ("That is not available. Please, try something else.")
      }
      return (newobj)
    }
  ]]></function>
  <function name="ShopList" type="stringlist"><![CDATA[
    slist = NewStringList()
    foreach (object, AllObjects()) {
      if (GetInt(object, "saveable") = 1) {
        if (object.wtype > 0) {
          set (object, "scenery", True)
          SetupMerch (object)
          list add (slist, "<br>"+object.pic+object.listalias2+" <br>")
        }
      }
    }
    game.pov.slist = (slist)
    return (slist)
  ]]></function>
  <function name="This" type="object">
    if (DictionaryContains(game.pov.currentcommandresolvedelements,"object")) {
      return (DictionaryItem(game.pov.currentcommandresolvedelements,"object"))
    }
    else if (DictionaryContains(game.pov.currentcommandresolvedelements,"object1")) {
      return (DictionaryItem(game.pov.currentcommandresolvedelements,"object1"))
    }
  </function>
  <function name="SaveObject" parameters="object" type="string"><![CDATA[
    msg ("Please give the item a Unique Name with no spaces:")
    msg ("<br>Note: When you Load/Import your item, the name must match exactly as you type it here.<br>")
    get input {
      object.s_name = (result)
      // If this is a clone, save the prototype object's name to avoid loading errors.
      if (HasAttribute (object, "prototype")) {
        name = object.prototype.name
      }
      else {
        name = object.name
      }
      qson = "{name: " + name + ", s_name: " +object.s_name+ ",AosStrReq: "+object.AosStrReq+"__integer__,AosMinDam: "+object.AosMinDam+"__integer__,AosMaxDam: "+object.AosMaxDam+"__integer__,AttackChance: "+object.AttackChance+"__integer__,BonusDex: "+object.BonusDex+"__integer__,BonusHits: "+object.BonusHits+"__integer__,BonusInt: "+object.BonusInt+"__integer__,BonusMana: "+object.BonusMana+"__integer__,BonusStam: "+object.BonusStam+"__integer__,BonusStr: "+object.BonusStr+"__integer__,Chaos: "+object.Chaos+"__integer__,Cold: "+object.Cold+"__integer__,DefendeChance: "+object.DefendChance+"__integer__,Direct: "+object.Direct+"__integer__,Energy: "+object.Energy+"__integer__,Fire: "+object.Fire+"__integer__,LowerManaCost: "+object.LowerManaCost+"__integer__,Luck: "+object.Luck+"__integer__,Physical: "+object.Physical+"__integer__,Poison: "+object.Poison+"__integer__,ReflectPhysical: "+object.ReflectPhysical+"__integer__,RegenHits: "+object.RegenHits+"__integer__,RegenMana: "+object.RegenMana+"__integer__,RegenStam: "+object.RegenStam+"__integer__,ResistColdBonus: "+object.ResistColdBonus+"__integer__,ResistEnergyBonus: "+object.ResistEnergyBonus+"__integer__,ResistFireBonus: "+object.ResistFireBonus+"__integer__,ResistPhysicalBonus: "+object.ResistPhysicalBonus+"__integer__,ResistPoisonBonus: "+object.ResistPoisonBonus+"__integer__,SpellDamage: "+object.SpellDamage+"__integer__,WeaponDamage: "+object.WeaponDamage+"__integer__,HitColdArea: "+object.HitColdArea+"__integer__,HitDispel: "+object.HitDispel+"__integer__,HitEnergyArea: "+object.HitEnergyArea+"__integer__,HitFireArea: "+object.HitFireArea+"__integer__,HitFireball: "+object.HitFireball+"__integer__,HitHarm: "+object.HitHarm+"__integer__,HitLeechHits: "+object.HitLeechHits+"__integer__,HitLeechMana: "+object.HitLeechMana+"__integer__,HitLeechStam: "+object.HitLeechStam+"__integer__,HitLightning: "+object.HitLightning+"__integer__,HitLowerAttack: "+object.HitLowerAttack+"__integer__,HitLowerDefend: "+object.HitLowerDefend+"__integer__,HitMagicArrow: "+object.HitMagicArrow+"__integer__,HitPhysicalArea: "+object.HitPhysicalArea+"__integer__,wtype: "+object.wtype+"__integer__,img: "+object.img+"}"
      msg ("Copy and paste this into the Item Generation box below:<br>"+ qson +"")
      msg ("<iframe src=\"http://www.uoexpanse.com/quests/index2.html\" width=\"75%\" height=\"auto\"></iframe>")
    }
  ]]></function>
  <function name="LoadObject" parameters="data" type="object">
    // Return null if the object does not exist
    if (LoadObjectFromSaveData (data) = null) {
      return (null)
    }
    // Objects exists, so proceed
    object = LoadObjectFromSaveData (data)
    set (object, "saveable", 0)
    set (object, "scenery", False)
    MoveObject (object, player)
    ShowRoomDescription
    return (object)
  </function>
  <function name="ContainsClone" parameters="parent, prototype" type="boolean"><![CDATA[
    return (ListCount(GetDirectCloneChildren(parent,prototype))>0)
  ]]></function>
  <function name="GetRandomReachableCloneOf" parameters="prototype" type="object">
    // From TE_Items_Lib
    // ADDED RETURN VALUE
    PickOneObject (ScopeReachableClonesOf(prototype))
  </function>
  <function name="ScopeReachableClonesOf" parameters="prototype" type="objectlist">
    // From TE_Items_Lib
    // Fixed to return an object list
    return (FilterByAttribute(ScopeReachable(), "prototype", prototype))
  </function>
  <function name="AnyReachableCloneGetBoolean" parameters="prototype, attribute" type="boolean"><![CDATA[
    // Copied from TE_Items
    // It had no return type, when it needs to be 'boolean', and I had to move some )
    return (ListCount(FilterByAttribute(ScopeReachableClonesOf(prototype, attribute, true))) > 0)
  ]]></function>
  <function name="IsCloneOf" parameters="object, prototype" type="boolean">
    // From TEItems_Lib. Was missing return type.
    return (object.prototype == prototype)
  </function>
  <function name="GetReachableClonesWithBoolean" parameters="prototype, attribute" type="objectlist">
    // From TEItems_Lib. Was missing return type.
    return (FilterByAttribute(ScopeReachableClonesOf(prototype), attribute, true))
  </function>
  <function name="GetDirectCloneChildren" parameters="parent, prototype" type="objectlist">
    // From TEItems_Lib. Was missing return type.
    return (FilterByAttribute(GetDirectChildren(parent),"prototype", prototype))
  </function>
  <function name="ScopeVisibleForRoomClonesOf" parameters="room, prototype" type="objectlist">
    return (FilterByAttribute (ScopeVisibleForRoom(room), "prototype", prototype))
  </function>
  <function name="AnyVisibleForRoomCloneGetBoolean" parameters="room, prototype, attribute" type="boolean"><![CDATA[
    if (TypeOf(prototype) = "string") {
      prototype = GetObject(prototype)
    }
    if (prototype = null) {
      return (false)
    }
    return (ListCount(FilterByAttribute(ScopeVisibleForRoomClonesOf(room,prototype), attribute, true)) > 0)
  ]]></function>
  <function name="GetRandomVisibleForRoomCloneOf" parameters="room, prototype" type="object">
    return (PickOneObject (ScopeVisibleForRoomClonesOf(room, prototype)))
  </function>
  <function name="CloneObjectAndInitialiseAndMove" parameters="object, room" type="object">
    new_clone = CloneObjectAndInitialise (object)
    new_clone.parent = room
    return (new_clone)
  </function>
  <function name="CloneObjectAndInitialiseAndMoveHere" parameters="object" type="object">
    return (CloneObjectAndInitialiseAndMove(object, game.pov.parent))
  </function>
  <function name="RandomChance" parameters="percentile" type="boolean"><![CDATA[
    return (GetRandomInt(1,100) <= percentile)
  ]]></function>
  <function name="LoadObjectFromSaveData" parameters="data" type="object">
    data = Replace(Replace(data,"{",""),"}","")
    stuff = Split(data, ",")
    namestuff = stuff[0]
    list remove (stuff, stuff[0])
    namethings = Split(namestuff, ":")
    obj = namethings[1]
    obj = Trim(obj)
    if (not GetObject(obj) = null) {
      obj = GetObject(obj)
      newobj = CloneObject(obj)
    }
    else {
      PrintCentered ("That item does not exist. Please try a different item.")
      // Added by KV to exit the function
      return (null)
    }
    foreach (s, stuff) {
      s = Trim(s)
      ab = Split(s, ":")
      a = ab[0]
      b = ab[1]
      a = Trim(a)
      b = Trim(b)
      if (b = null or b = "") {
        error ("LoadFromSave: " + a +" has invalid value of '" +b+"'")
      }
      if (StartsWith(b, "game.")) {
        if (StartsWith(b, "game.pov.")) {
          b = Replace(b, "game.pov.", "")
          b = GetAttribute(game.pov, b)
        }
        else {
          b = Replace(b, "game.", "")
          b = GetAttribute(game, b)
        }
      }
      else if (EndsWith(b,"__double__")) {
        b = Replace(b, "__double__", "")
        if (not b = "") {
          b = ToDouble (b)
        }
        else {
          b = 0
        }
      }
      else if (EndsWith(b,"__integer__")) {
        b = Replace(b, "__integer__", "")
        if (not b = "") {
          b = ToInt (b)
        }
        else {
          b = 0
        }
      }
      else if (EndsWith(b, "__boolean__")) {
        b = Replace(b, "__boolean__", "")
        if (LCase(b) = "true") {
          b = true
        }
        else if (LCase(b) = "false") {
          b = false
        }
      }
      if (typeof(b) = "string") {
        if (not GetObject(b)  = null) {
          b = GetObject(b)
        }
      }
      set (newobj, a, b)
    }
    return (newobj)
  </function>
  <function name="PickFiveStrings" parameters="list" type="list">
    one = PickOneString(list)
    list = ListExclude(list, one)
    two = PickOneString(list)
    list = ListExclude(list, two)
    three = PickOneString(list)
    list = ListExclude(list, three)
    four = PickOneString(list)
    list = ListExclude(list, four)
    five = PickOneString (list)
    result = NewList()
    list add (result, one)
    list add (result, two)
    list add (result, three)
    list add (result, four)
    list add (result, five)
    return (result)
  </function>
  <function name="PickFourStrings" parameters="list" type="list">
    one = PickOneString(list)
    list = ListExclude(list, one)
    two = PickOneString(list)
    list = ListExclude(list, two)
    three = PickOneString(list)
    list = ListExclude(list, three)
    four = PickOneString(list)
    result = NewList()
    list add (result, one)
    list add (result, two)
    list add (result, three)
    list add (result, four)
    return (result)
  </function>
  <function name="PickThreeStrings" parameters="list" type="list">
    one = PickOneString(list)
    list = ListExclude(list, one)
    two = PickOneString(list)
    list = ListExclude(list, two)
    three = PickOneString(list)
    result = NewList()
    list add (result, one)
    list add (result, two)
    list add (result, three)
    return (result)
  </function>
  <function name="PickTwoStrings" parameters="list" type="list">
    one = PickOneString(list)
    list = ListExclude(list, one)
    two = PickOneString(list)
    result = NewList()
    list add (result, one)
    list add (result, two)
    return (result)
  </function>
  <function name="PickOneStrings" parameters="list" type="list">
    one = PickOneString(list)
    result = NewList()
    list add (result, one)
    return (result)
  </function>
  <function name="Magical_Props2" parameters="obj"><![CDATA[
    dict = mag_props.alphabetdict
    keys = NewStringList()
    foreach (key, dict) {
      list add (keys, key)
    }
    list = NewStringList()
    if (GetInt(obj, "rarity") > 11) {
      for (i, 1, GetInt(obj, "rarity"), 20) {
        list add (list, PickOneString(ListExclude (keys, list)))
      }
    }
    foreach (key, list) {
      val = DictionaryItem (dict, key)
      val2 = RandomRnd()
      if (IsInt (val)) {
        val = ToInt (val)
        val3 = (val + val2)
        val = (val3)
      }
      set (obj, key, val)
    }
    set (obj, "m_props2", (list))
    Properties_List3 (obj)
  ]]></function>
  <function name="Properties_List3" parameters="obj" type="list"><![CDATA[
    dict = mag_props.alphabetdict
    props = ""
    foreach (key, dict) {
      if (HasInt (obj, key)) {
        if (GetInt(obj, key) > 0) {
          val = UnCamelCase (key) + ": " + GetInt(obj, key) + "<br />"
          set (obj, key+2, val)
          props = props + val
        }
      }
    }
    set (obj, "m_props", props)
  ]]></function>
  <function name="UnCamelCase" parameters="input" type="string">
    output = ""
    for (i, 1, LengthOf(input)) {
      letter = Mid (input, i, 1)
      if (letter = UCase (letter) and not output = "") {
        output = output + " "
      }
      output = output + letter
    }
    return (output)
  </function>
  <function name="RandomRnd" type="int">
    val1 = GetRandomInt (1,10)
    val2 = GetRandomInt (1,10)
    val3 = GetRandomInt (1,10)
    val4 = GetRandomInt (1,10)
    val5 = GetRandomInt (1,10)
    val = val1+val2+val3+val4+val5
    return (val)
  </function>
  <function name="resists_table"><![CDATA[
    phys = phy()
    fire = fir()
    cold = col()
    pois = poi()
    ener = ene()
    do (player, "changedphysical")
    do (player, "changedfire")
    do (player, "changedcold")
    do (player, "changedpois")
    do (player, "changedener")
    player.changedphysical => {
      JS.eval ("$('.phys-indicator').css('padding-right', '" + (player.physical - 7) + "px');")
    }
    player.changedfire => {
      JS.eval ("$('.fire-indicator').css('padding-right', '" + (player.fire - 7) + "px');")
    }
    player.changedcold => {
      JS.eval ("$('.cold-indicator').css('padding-right', '" + (player.cold - 7) + "px');")
    }
    player.changedpois => {
      JS.eval ("$('.pois-indicator').css('padding-right', '" + (player.poison - 7) + "px');")
    }
    player.changedener => {
      JS.eval ("$('.ener-indicator').css('padding-right', '" + (player.energy - 7) + "px');")
    }
  ]]></function>
  <function name="phy" type="stringlist"><![CDATA[
    player.changedphysical => {
      OutputTextNoBr ("<tr><td><p>P: <span class=\"phys-indicator\" style=\"background-color:pink;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.phys-indicator').css('padding-right', '" + (player.physical - 7) + "px');")
    }
    phys = NewStringList()
    return (phys)
  ]]></function>
  <function name="fir" type="stringlist"><![CDATA[
    player.changedfire => {
      OutputTextNoBr ("<tr><td><p>F: <span class=\"fire-indicator\" style=\"background-color:orangered;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.fire-indicator').css('padding-right', '" + (player.fire - 7) + "px');")
    }
    fire = NewStringList()
    return (fire)
  ]]></function>
  <function name="col" type="stringlist"><![CDATA[
    player.changedcold => {
      OutputTextNoBr ("<tr><td><p>C: <span class=\"cold-indicator\" style=\"background-color:aqua;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.cold-indicator').css('padding-right', '" + (player.cold - 7) + "px');")
    }
    cold = NewStringList()
    return (cold)
  ]]></function>
  <function name="poi" type="stringlist"><![CDATA[
    player.changedpois => {
      OutputTextNoBr ("<tr><td><p>P: <span class=\"pois-indicator\" style=\"background-color:yellowgreen;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.pois-indicator').css('padding-right', '" + (player.poison - 7) + "px');")
    }
    pois = NewStringList()
    return (pois)
  ]]></function>
  <function name="ene" type="stringlist"><![CDATA[
    player.changedener => {
      OutputTextNoBr ("<tr><td><p>E: <span class=\"ener-indicator\" style=\"background-color:yellow;color:#000;font-size:smaller;\">&nbsp</span></p></td></tr>")
      JS.eval ("$('.ener-indicator').css('padding-right', '" + (player.energy - 7) + "px');")
    }
    ener = NewStringList()
    return (ener)
  ]]></function>
  <function name="combat_damage" parameters="weapon, target" type="int">
    p = game.pov.parent
    combat_leeches (weapon, target)
    combat_elemental (weapon, target)
    combat_hitspecials (weapon, target)
    weapon.dam = ((weapon.AosMinDam)+(weapon.AosMaxDam)/2)
    totdam = (player.dam)+(weapon.dam)
    return (totdam)
  </function>
  <function name="combat_elemental" parameters="object, target" type="int"><![CDATA[
    weapon = object
    obj = weapon
    obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
    weapdam = obj.dam
    if ((obj.Chaos) > 0) {
      if (target.current_hp > (obj.Chaos)) {
        if (obj.Chaos > 0) {
          chaosdam = (obj.Chaos)/100
          cdam = (weapdam) * (chaosdam)
          chaosres = (target.chaos)/100
          if ((cdam) - (chaosres) > 0) {
            cha = Round((cdam) - (chaosres))
            target.current_hp = (target.current_hp) - (cha)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(cha)+ " additional Chaos damage.<br>")
          }
          else if ((cdam) - (chaosres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Chaos damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Cold) > 0) {
      if (target.current_hp > (obj.Cold)) {
        if (obj.Cold > 0) {
          colddam = (obj.Cold)/100
          codam = (weapdam) * (colddam)
          coldres = (target.cold)/100
          if ((codam) - (coldres) > 0) {
            col = Round((codam) - (coldres))
            target.current_hp = (target.current_hp) - (col)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(col)+ " additional Cold damage.<br>")
          }
          else if ((codam) - (coldres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Cold damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Energy) > 0) {
      if (target.current_hp > (obj.Energy)) {
        if (obj.Energy > 0) {
          energydam = (obj.Energy)/100
          edam = (weapdam) * (energydam)
          eres = (target.energy)/100
          if ((edam) - (eres) > 0) {
            ene = Round((edam) - (eres))
            target.current_hp = (target.current_hp) - (ene)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(ene)+ " additional Energy damage.<br>")
          }
          else if ((edam) - (eres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Energy damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Fire) > 0) {
      if (target.current_hp > (obj.Fire)) {
        if (obj.Fire > 0) {
          firedam = (obj.Fire)/100
          fdam = (weapdam) * (firedam)
          fres = (target.fire)/100
          if ((fdam) - (fres) > 0) {
            fir = Round((fdam) - (fres))
            target.current_hp = (target.current_hp) - (fir)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(fir)+ " additional Fire damage.<br>")
          }
          else if ((fdam) - (fres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Fire damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Physical) > 0) {
      if (target.current_hp > (obj.Physical)) {
        if (obj.Physical > 0) {
          physdam = (obj.Physical)/100
          pdam = (weapdam) * (physdam)
          pres = (target.physical)/100
          if ((pdam) - (pres) > 0) {
            phy = Round((pdam) - (pres))
            target.current_hp = (target.current_hp) - (phy)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(phy)+ " additional Physical damage.<br>")
          }
          else if ((pdam) - (pres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Physical damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.Poison) > 0) {
      if (target.current_hp > (obj.Poison)) {
        if (obj.Poison > 0) {
          poisondam = (obj.Poison)/100
          poisdam = (weapdam) * (poisondam)
          poisres = (target.poison)/100
          if ((poisdam) - (poisres) > 0) {
            poi = Round((poisdam) - (poisres))
            target.current_hp = (target.current_hp) - (poi)
            PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(poi)+ " additional Poison damage.<br>")
          }
          else if ((poisdam) - (poisres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted Poison damage from your weapon.<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    return ((weapdam))
  ]]></function>
  <function name="combat_hitspecials" parameters="object, target"><![CDATA[
    weapon = object
    obj = weapon
    if ((obj.HitColdArea) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitColdArea)) {
        if (target.current_hp > (obj.HitColdArea)) {
          if (obj.HitColdArea > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hcadam = (obj.HitColdArea)/100
            hca = (weapdam) * (hcadam)
            coldres = (target.cold)/100
            if ((hca) - (coldres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hcadam = (obj.HitColdArea)/100
              hca = (weapdam) * (hcadam)
              coldres = (target.cold)/100
              hcahit = Round((hca) - (coldres))
              if ((target.current_hp - hcahit) > 0) {
                target.current_hp = (target.current_hp) - (hcahit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hcahit)+ " additional Cold damage from [Hit Cold Area].<br>")
              }
              else if ((target.current_hp - hcahit) < 1) {
                PrintCentered ("The [Hit Cold Area] property on your weapon has killed "+target.alias+"!")
                set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hca) - (coldres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Cold damage from [Hit Cold Area].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitDispel) > 0) {
      chance = GetRandomInt(1,100)
      if ((chance) < (obj.HitDispel)) {
        foreach (mob, targets()) {
          if (mob.summoned = true) {
            if (RandomChance(40)) {
              PrintCentered (""+mob.alias+" has been dispelled!")
              set (mob, "alive", false)
              set (mob, "current_hp", 0)
              list remove (game.pov.parent.mlist, mob.name)
            }
          }
        }
      }
    }
    if ((obj.HitEnergyArea) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitEnergyArea)) {
        if (target.current_hp > (obj.HitEnergyArea)) {
          if (obj.HitEnergyArea > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            headam = (obj.HitEnergyArea)/100
            hea = (weapdam) * (headam)
            enerres = (target.energy)/100
            if ((hea) - (enerres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              headam = (obj.HitEnergyArea)/100
              hea = (weapdam) * (headam)
              enerres = (target.energy)/100
              heahit = Round((hea) - (enerres))
              if ((target.current_hp - heahit) > 0) {
                target.current_hp = (target.current_hp) - (heahit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(heahit)+ " additional Energy damage from [Hit Energy Area].<br>")
              }
              else if ((target.current_hp - heahit) < 1) {
                PrintCentered ("The [Hit Energy Area] property on your weapon has killed "+target.alias+"!")
                set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hea) - (enerres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Energy damage from [Hit Energy Area].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitFireball) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitFireball)) {
        if (target.current_hp > (obj.HitFireball)) {
          if (obj.HitFireball > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hfbdam = (obj.HitFireball)/100
            hfb = (weapdam) * (hfbdam)
            fireres = (target.fire)/100
            if ((hfb) - (fireres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hfbdam = (obj.HitFireball)/100
              hfb = (weapdam) * (hfbdam)
              fireres = (target.fire)/100
              hfbhit = Round((hfb) - (fireres))
              if ((target.current_hp - hfbhit) > 0) {
                target.current_hp = (target.current_hp) - (hfbhit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hfbhit)+ " additional Fire damage from [Hit Fireball].<br>")
              }
              else if ((target.current_hp - hfbhit) < 1) {
                PrintCentered ("The [Hit Fireball] property on your weapon has killed "+target.alias+"!")
                set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hfb) - (fireres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Fire damage from [Hit Fireball].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitHarm) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitHarm)) {
        if (target.current_hp > (obj.HitHarm)) {
          if (obj.HitHarm > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hhdam = (obj.HitHarm)/100
            hh = (weapdam) * (hhdam)
            coldres = (target.cold)/100
            if ((hh) - (coldres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hhdam = (obj.HitHarm)/100
              hh = (weapdam) * (hhdam)
              coldres = (target.cold)/100
              hhhit = Round((hh) - (coldres))
              if ((target.current_hp - hhhit) > 0) {
                target.current_hp = (target.current_hp) - (hhhit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hhhit)+ " additional Cold damage from [Hit Cold Area].<br>")
              }
              else if ((target.current_hp - hhhit) < 1) {
                PrintCentered ("The [Hit Harm] property on your weapon has killed "+target.alias+"!")
                set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hh) - (coldres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Cold damage from [Hit Harm].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitLightning) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitLightning)) {
        if (target.current_hp > (obj.HitLightning)) {
          if (obj.HitLightning > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hldam = (obj.HitLightning)/100
            hl = (weapdam) * (hldam)
            enerres = (target.energy)/100
            if ((hl) - (enerres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hldam = (obj.HitLightning)/100
              hl = (weapdam) * (hldam)
              enerres = (target.energy)/100
              hlhit = Round((hl) - (enerres))
              if ((target.current_hp - hlhit) > 0) {
                target.current_hp = (target.current_hp) - (hlhit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hlhit)+ " additional Cold damage from [Hit Cold Area].<br>")
              }
              else if ((target.current_hp - hlhit) < 1) {
                PrintCentered ("The [Hit Lightning] property on your weapon has killed "+target.alias+"!")
                set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hl) - (enerres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Cold damage from [Hit Lightning].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitLowerAttack) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitLowerAttack)) {
        if (obj.HitLowerAttack > 0) {
          obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
          weapdam = obj.dam
          hladam = (obj.HitLowerAttack)/100
          hla = (weapdam) * (hladam)
          defres = (target.defense)/100
          if ((hla) - (defres) > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hladam = (obj.HitLowerAttack)/100
            hla = (weapdam) * (hladam)
            defres = (target.defense)/100
            hlahit = Round((hla) - (defres))
            if ((target.dam - hlahit) > 0) {
              target.dam = (target.dam) - (hlahit)
              PrintCentered ("<br>The " +target.alias+ " was not able to resist [Hit Lower Attack] and their attacks have been reduced by: " +(hlahit)+ "<br>")
            }
            else if ((target.dam - hlahit) < 1) {
              PrintCentered ("The [Hit Lower Attack] property on your weapon has reduced the attacks of "+target.alias+" to 1!")
              set (target, "dam", 1)
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
          else if ((hla) - (defres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted [Hit Lower Attack].<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.HitLowerDefend) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitLowerDefend)) {
        if (obj.HitLowerDefend > 0) {
          obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
          weapdam = obj.dam
          hlddam = (obj.HitLowerDefend)/100
          hld = (weapdam) * (hlddam)
          defres = (target.defense)/100
          if ((hld) - (defres) > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hlddam = (obj.HitLowerDefend)/100
            hld = (weapdam) * (hlddam)
            defres = (target.defense)/100
            hldhit = Round((hld) - (defres))
            if ((target.defense - hldhit) > 0) {
              target.defense = (target.defense) - (hldhit)
              PrintCentered ("<br>The " +target.alias+ " was not able to resist [Hit Lower Defense] and their defense have been reduced by: " +(hldhit)+ "<br>")
            }
            else if ((target.defense - hldhit) < 1) {
              PrintCentered ("The [Hit Lower Defense] property on your weapon has reduced the defense of "+target.alias+" to 1!")
              set (target, "defense", 1)
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
          else if ((hld) - (defres) < 1) {
            PrintCentered ("<br>The " +target.alias+ " resisted [Hit Lower Defense].<br>")
          }
          else {
            PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
          }
        }
      }
    }
    if ((obj.HitMagicArrow) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitMagicArrow)) {
        if (target.current_hp > (obj.HitMagicArrow)) {
          if (obj.HitMagicArrow > 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hmadam = (obj.HitMagicArrow)/100
            hma = (weapdam) * (hmadam)
            physres = (target.physical)/100
            if ((hma) - (physres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hmadam = (obj.HitMagicArrow)/100
              hma = (weapdam) * (hmadam)
              physres = (target.physical)/100
              hmahit = Round((hma) - (physres))
              if ((target.current_hp - hmahit) > 0) {
                target.current_hp = (target.current_hp) - (hmahit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hmahit)+ " additional Physical damage from [Hit Magic Arrow].<br>")
              }
              else if ((target.current_hp - hmahit) < 1) {
                PrintCentered ("The [Hit Magic Arrow] property on your weapon has killed "+target.alias+"!")
                set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hma) - (physres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Physical damage from [Hit Magic Arrow].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
    if ((obj.HitPhysicalArea) > 0) {
      chance = GetRandomInt(1,49)
      if ((chance) < (obj.HitPhysicalArea)) {
        if (target.current_hp > (obj.HitPhysicalArea)) {
          if (obj.HitPhysicalArea> 0) {
            obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
            weapdam = obj.dam
            hpadam = (obj.HitPhysicalArea)/100
            hpa = (weapdam) * (hpadam)
            physres = (target.physical)/100
            if ((hpa) - (physres) > 0) {
              obj.dam = (weapon.AosMinDam)+(weapon.AosMaxDam)/2
              weapdam = obj.dam
              hpadam = (obj.HitPhysicalArea)/100
              hpa = (weapdam) * (hpadam)
              physres = (target.physical)/100
              hpahit = Round((hpa) - (physres))
              if ((target.current_hp - hpahit) > 0) {
                target.current_hp = (target.current_hp) - (hpahit)
                PrintCentered ("<br>The " +target.alias+ " was not able to resist " +(hpahit)+ " additional Physical damage from [Hit Physical Area].<br>")
              }
              else if ((target.current_hp - hpahit) < 1) {
                PrintCentered ("The [Hit Physical Area] property on your weapon has killed "+target.alias+"!")
                set (target, "status", "Passed beyond the Veil.")
                set (target, "alive", false)
                set (target, "current_hp", 0)
                Gen_Loot (target)
                list remove (game.pov.parent.mlist, target.name)
              }
              else {
                PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
              }
            }
            else if ((hpa) - (physres) < 1) {
              PrintCentered ("<br>The " +target.alias+ " resisted Physical damage from [Hit Physical Area].<br>")
            }
            else {
              PrintCentered ("<br>Something has gone wrong. Luckily, your enemies take no damage for this round. Well, lucky for them anyway.<br>")
            }
          }
        }
      }
    }
  ]]></function>
  <function name="combat_leeches" parameters="object, target"><![CDATA[
    // dbglog ("######## Running combat_leeches...")
    // dbglog ("object.name:")
    // dbglog (object.name)
    // dbglog ("target.name:")
    // dbglog (target.name)
    weapon = object
    // dbglog ("weapon.name:")
    // dbglog (weapon.name)
    obj = weapon
    // dbglog ("obj.name:")
    // dbglog (obj.name)
    // dbglog ("Does 'obj' have a 'HitLeechHits' attribute?")
    if (HasAttribute(obj, "HitLeechHits")) {
      // dbglog ("Yes. It does.")
      // dbglog("obj.HitLeechHits is:")
      // dbglog (obj.HitLeechHits)
    }
    else {
      // dbglog ("No. It does not. This script is about to exit due to error.")
    }
    if (ToInt(ToString(obj.HitLeechHits)) > 0) {
      if (RandomChance(40)) {
        if ((target.current_hp) < (ToInt(ToString(obj.HitLeechHits)))) {
          game.pov.health = (game.pov.health)+(target.current_hp)
          PrintCentered ("You have leeched all of the life out of "+target.alias+"!")
          set (target, "status", "Passed beyond the Veil.")
          set (target, "alive", false)
          set (target, "current_hp", 0)
          if (target.lootable > 0) {
            Gen_Loot (target)
          }
          list remove (game.pov.parent.mlist, target.name)
        }
        else {
          target.current_hp = (target.current_hp)-(obj.HitLeechHits)
          game.pov.health = (game.pov.health)+(obj.HitLeechHits)
          PrintCentered ("The Leech Hits property on your weapon leeched "+(obj.HitLeechHits)+" life from "+target.alias+"!")
        }
      }
    }
    if (ToInt(ToString(obj.HitLeechMana)) > 0) {
      if (RandomChance(40)) {
        if ((target.current_mp) < ToInt(ToString(obj.HitLeechMana))) {
          game.pov.mp = (game.pov.mp)+(target.current_mp)
          PrintCentered ("You have leeched all of the mana out of "+target.alias+"!")
          set (target, "current_mp", 0)
        }
        else {
          target.current_mp = (target.current_mp)-(obj.HitLeechMana)
          game.pov.mp = (game.pov.mp)+(obj.HitLeechMana)
          PrintCentered ("The Leech Mana property on your weapon leeched "+(obj.HitLeechMana)+" mana from "+target.alias+"!")
        }
      }
    }
    if (ToInt(ToString(obj.HitLeechStam)) > 0) {
      if (RandomChance(40)) {
        if ((target.current_stam) < ToInt(ToString(obj.HitLeechStam))) {
          game.pov.stam = (game.pov.stam)+(target.current_stam)
          PrintCentered ("You have leeched all of the stamina out of "+target.alias+"!")
          set (target, "current_stam", 0)
        }
        else {
          target.current_stam = (target.current_stam)-(obj.HitLeechStam)
          game.pov.stam = (game.pov.stam)+(obj.HitLeechStam)
          PrintCentered ("The Leech Stamina property on your weapon leeched "+(obj.HitLeechStam)+" stamina from "+target.alias+"!")
        }
      }
    }
  ]]></function>
  <function name="physdam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Physical > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      physical = (weapon.Physical)/(weapon.dam)
    }
    return ((physical))
  ]]></function>
  <function name="firedam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Fire > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      fire = (weapon.Fire)/(weapon.dam)
    }
    return ((fire))
  ]]></function>
  <function name="cdam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Cold > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      cold = (weapon.Cold)/(weapon.dam)
    }
    return ((cold))
  ]]></function>
  <function name="poisdam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Poison > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      poison = (weapon.Poison)/(weapon.dam)
    }
    return ((poison))
  ]]></function>
  <function name="enerdam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Energy > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      energy = (weapon.Energy)/(weapon.dam)
    }
    return ((energy))
  ]]></function>
  <function name="chadam" parameters="weapon" type="int"><![CDATA[
    if (weapon.Chaos > 0) {
      wdam = ((weapon.AosMinDam)+(weapon.AosMaxDam))/2
      weapon.dam = (wdam)+(player.dam)
      chaos = (weapon.Chaos)/(weapon.dam)
    }
    return ((chaos))
  ]]></function>
  <function name="hpregen1"><![CDATA[
    if (game.pov.health < game.pov.maxhp) {
      playerhp = ToInt(ToString(player.RegenHits))/2
      PrintCentered ("Max Hit Points value: " +(game.pov.maxhp)+"")
      PrintCentered ("Regen Hits value calculated: " +(playerhp)+"")
      playerdam = ToInt(ToString((player.dam) + (playerhp)))/2
      PrintCentered ("Player Regen Hits value calculated: " +playerdam+"")
      if ((game.pov.health) + (playerdam) <= game.pov.maxhp) {
        playerhp = ToInt(ToString(player.RegenHits))/2
        playerdam = ToInt(ToString((player.dam) + (playerhp)))/2
        game.pov.health = ToInt(ToString((playerdam) + (game.pov.health)))
        PrintCentered ("Player Hit Points increased by: " +playerdam+"")
      }
      else if ((game.pov.health) + (playerdam) > game.pov.maxhp) {
        game.pov.health = (game.pov.maxhp)
      }
    }
  ]]></function>
  <function name="mpregen1"><![CDATA[
    if (game.pov.mp < game.pov.maxmp) {
      playermp = ToInt(ToString(player.RegenMana))/2
      PrintCentered ("Max Mana value: " +(game.pov.maxmp)+"")
      PrintCentered ("Regen Mana value calculated: " +(playermp)+"")
      playerdam = ToInt(ToString((player.SpellDamage) + (playermp)))/2
      PrintCentered ("Player Regen Mana value calculated: " +playerdam+"")
      if ((game.pov.health) + (playerdam) <= game.pov.maxmp) {
        playermp = ToInt(ToString(player.RegenMana))/2
        playerdam = ToInt(ToString((player.dam) + (playermp)))/2
        game.pov.mp = ToInt(ToString((playerdam) + (game.pov.mp)))
        PrintCentered ("Player Mana Points increased by: " +playerdam+"")
      }
      else if ((game.pov.mp) + (playerdam) > game.pov.maxmp) {
        game.pov.mp = (game.pov.maxmp)
      }
    }
  ]]></function>
  <function name="stamregen1"><![CDATA[
    if (game.pov.stam < game.pov.maxstam) {
      playerstam = ToInt(ToString(game.pov.RegenStam))/10
      PrintCentered ("Max Stamina value: " +(game.pov.maxstam)+"")
      PrintCentered ("Regen Stamina value calculated: " +playerstam+"")
      playerdam = ((game.pov.stam) + (playerstam))
      PrintCentered ("Player Regen Stamina value calculated: " +playerdam+"")
      if ((game.pov.stam) + (playerdam) <= game.pov.maxstam) {
        playerstam = ToInt(ToString(game.pov.RegenStam))/10
        playerdam = ((game.pov.stam) + (playerstam))
        game.pov.stam = ToInt(ToString((game.pov.stam) + (playerdam)))
        PrintCentered ("Player Stamina Points increased by: " +playerdam+"")
      }
      else if ((game.pov.stam) + (playerdam) > game.pov.maxstam) {
        game.pov.stam = (game.pov.maxstam)
      }
    }
  ]]></function>
  <function name="Create_Loot" parameters="object" type="object">
    obj = object
    newobj = CloneObject(obj)
    newobj.take = true
    newobj.buy = null
    newobj.listalias2 = obj.alias
    newobj.scenery = false
    return (newobj)
  </function>
  <function name="InitScore" parameters="max, ranks, status">
    game.score_rank_list = Split(ranks, ",")
    game.score_max = max
    game.score_achievements = NewStringDictionary()
    player.score = 0
    if (not status) {
      player.statusattributes = NewStringDictionary()
    }
  </function>
  <function name="IncScore" parameters="str, inc">
    if (not DictionaryContains(game.score_achievements, str)) {
      player.score = player.score + inc
      dictionary add (game.score_achievements, str, ToString(inc))
    }
  </function>
  <function name="GetScore" type="int">
    return (player.score)
  </function>
  <function name="PrintScore"><![CDATA[
    if (player.score > 1) {
      msg ("<table id='score1'><tr><td>You have scored " + player.score + " points. Earning you the rank of: " + GetRank() + "</tr></td></table>")
    }
    else {
      msg ("<table id='score0'><tr><td>You have scored " + player.score + " points. Earning you the rank of: " + GetRank() + "</tr></td></table>")
    }
  ]]></function>
  <function name="PrintFullScore"><![CDATA[
    if (game.score_achievements = null) {
      if (player.score > 1) {
        msg ("<div id='score'><table id='sleft'><tr><td><p>You have scored " + player.score + " points.</p><p>Earning you the rank of: " + GetRank() + "</tr></td></table><table id='sright'><tr><td><p>You have not done anything worth writing about yet.</td></tr></table></div><br>")
      }
      else {
        msg ("<div id='score'><table id='sleft'><tr><td><p>You have scored " + player.score + " points.</p><p>Earning you the rank of: " + GetRank() + "</tr></td></table><table id='sright'><tr><td><p>You have not done anything worth writing about yet.</td></tr></table></div><br>")
      }
    }
    else {
      achieve = NewStringList()
      foreach (ach, game.score_achievements) {
        list add (achieve, "<tr><td>- " + ach + " <span>(" + DictionaryItem(game.score_achievements, ach) + ")</span></td></tr>")
      }
      if (player.score > 0) {
        msg ("<div id='score'><table id='sleft'><tr><td><p>You have scored " + player.score + " points.</p><p>Earning you the rank of: " + GetRank() + "</tr></td></table><table id='sright'>" +achieve+ "</table></div><br>")
      }
      else {
        msg ("<div id='score'><table id='sleft'><tr><td><p>You have scored " + player.score + " points.</p><p>Earning you the rank of: " + GetRank() + "</tr></td></table></div><br>")
      }
    }
  ]]></function>
  <function name="GetRank" type="string"><![CDATA[
    if (player.score >= game.score_max) {
      return (StringListItem(game.score_rank_list, ListCount(game.score_rank_list) - 1))
    }
    else if (0 >= player.score) {
      return (StringListItem(game.score_rank_list, 0))
    }
    else {
      n = (ListCount(game.score_rank_list) - 2) * (player.score - 1) / (game.score_max - 1) + 1
      n = ToInt(ToString(Round(n)))
      return (StringListItem(game.score_rank_list, n))
    }
  ]]></function>
  <function name="QuestReport" parameters="state">
    if (GetObject("quests") = null) {
      create ("quests")
    }
    flag = true
    foreach (o, FilterByAttribute(GetDirectChildren(quests), "state", state)) {
      msg (QuestSummary(o))
      flag = false
    }
    if (flag) {
      msg (Spaces(4) + "None")
    }
    firsttime {
      msg (" ")
      msg ("[Type SUCCESSFUL QUESTS or SQ to see a list of successfully completed quests]")
      msg ("[Type FAILED QUESTS or FQ for a list of failed quests]")
    }
    msg (" ")
  </function>
  <function name="Quest" parameters="obj, s, state"><![CDATA[
    if (GetObject("quests") = null) {
      create ("quests")
    }
    obj.parent = quests
    if (not HasAttribute(obj, "history")) {
      obj.history = NewStringList()
    }
    if (not obj.status = s) {
      if (state = "Success") {
        msg ("Quest completed: {i:" + obj.questName + "}<br>")
        obj.state = "Completed"
      }
      else if (state = "Failed") {
        msg ("Quest failed: {i:" + obj.questName + "}")
        obj.state = "Failed"
      }
      else if (state = "Start") {
        msg ("Quest started: {i:" + obj.questName + "}")
        obj.state = "Active"
      }
      else {
        msg ("Quest updated: {i:" + obj.questName + "}")
        obj.state = "Active"
      }
    }
    if (HasString(obj, "status")) {
      list add (obj.history, "{s:" + obj.status + "}")
    }
    obj.status = s
  ]]></function>
  <function name="QuestSummary" parameters="obj" type="string">
    return (Spaces(4) + "{i:" + obj.questName + " -}" + Spaces(1) + obj.status)
  </function>
  <function name="QuestNext" parameters="obj, s">
    Quest (obj, s, "Next")
  </function>
  <function name="QuestEnd" parameters="obj, s">
    Quest (obj, s, "Success")
  </function>
  <function name="QuestFail" parameters="obj, s">
    Quest (obj, s, "Failed")
  </function>
  <function name="QuestStart" parameters="obj, s">
    Quest (obj, s, "Start")
  </function>
  <function name="QuestState" parameters="quest" type="string">
    if (GetObject("quests") = null) {
      create ("quests")
    }
    if (not quest.parent = quests) {
      return ("Inactive")
    }
    else {
      return (quest.state)
    }
  </function>
  <function name="showHint" parameters="object"><![CDATA[
    if (HasAttribute(object, "hintlist")) {
      game.this = object
      optNo = 0
      choices = NewStringList()
      game.hintmenulist = object.hintlist
      foreach (h, object.hintlist) {
        optNo = optNo + 1
        opt = optNo + ": " + h
        list add (choices, "Hint " + optNo)
      }
      if ((ListCount(choices)) > 1) {
        hint = "Hints"
      }
      else {
        hint = "Hint"
      }
      ShowHintMenu ("<br>" + hint + " for " + GetDisplayName(game.this) + ":", choices, true) {
        r = Split(result, " ")
        thehint = ListItem(r, 1)
        thehint = ToInt(thehint)
        thehint = thehint -1
        msg (ListItem(game.this.hintlist, thehint))
        if (thehint +1 < (ListCount(game.this.hintlist))) {
          // msg ("RERUN MENU")
          // msg (game.this)
          HandleSingleCommand ("hint " + game.this.alias + "")
        }
      }
    }
    else {
      msg ("There are no hints set up for this item.")
    }
  ]]></function>
  <function name="addHint" parameters="object, string">
    if (not HasAttribute(object, "hintlist")) {
      object.hintlist = NewStringList()
    }
    hn = (ListCount(object.hintlist)) + 1
    string = "Hint " + hn + ": " + string
    list add (object.hintlist, string)
  </function>
  <function name="HandleHintClick" parameters="s"><![CDATA[
    // msg (game.this)
    // msg (s)
    game.hintOptNo = s
    s = ToInt(s) - 1
    ClearMenu
    msg (game.caption)
    msg (ListItem(game.this.hintlist, s))
    if (ListCount(game.this.hintlist) > s + 1) {
      do (game.this, "hint")
    }
    JS.scrollToEnd ()
  ]]></function>
  <function name="ShowHintMenu" parameters="caption, options, allowCancel, callback"><![CDATA[
    outputsection = StartNewOutputSection()
    msg (caption)
    count = 0
    game.menuoptionskeys = NewStringList()
    foreach (option, options) {
      list add (game.menuoptionskeys, option)
      count = count + 1
      if (TypeOf(options) = "stringlist") {
        optionText = option
      }
      else {
        optionText = StringDictionaryItem(options, option)
      }
      msg ("<button class=\"cmdlink\" style=\"background:#296231;color:#fac4ff;padding:4px;margin:6px\" onclick=\"ASLEvent('ShowMenuResponse','" + option + "')\">" + optionText + "</button>")
    }
    game.menuopt = option
    EndOutputSection (outputsection)
    game.menuoptions = options
    game.menuallowcancel = allowCancel
    game.menucallback = callback
    game.menuoutputsection = outputsection
  ]]></function>
  <function name="ScopeVisibleLivingEnemiesForRoom" parameters="room" type="objectlist"><![CDATA[
    // dbglog ("[ScopeVisibleLivingEnemiesForRoom]: running...")
    // dbglog ("[ScopeVisibleLivingEnemiesForRoom]: room:")
    // dbglog (room.name)
    list = FilterByAttribute (ScopeVisibleForRoom(room), "mob", 1)
    foreach (i, list) {
      if (i.current_hp <1) {
        ListRemove (list, i)
      }
    }
    // dbglog ("[ScopeVisibleLivingEnemiesForRoom]: list:")
    // dbglog (ToString(list))
    return (list)
  ]]></function>
  <function name="Respawn" parameters="object">
    if (RandomChance(100)) {
      room = object
      if (not game.pov.parent = room) {
        if (GetBoolean(room, "spawn")) {
          if (GetInt(room, "cycle") = 0) {
            rnd = GetRandomInt(1,4)
            switch (rnd) {
              case ("1") {
                CloneObjectAndMove (mongbat1, room)
              }
              case ("2") {
                CloneObjectAndMove (ettin1, room)
              }
              case ("3") {
                CloneObjectAndMove (ogre1, room)
              }
              case ("4") {
                CloneObjectAndMove (orc1, room)
              }
              default {
                CloneObjectAndMove (mongbat1, room)
              }
            }
          }
          else if (GetInt(room, "cycle") = 1) {
            rnd = GetRandomInt(1,4)
            switch (rnd) {
              case ("1") {
                CloneObjectAndMove (mongbat1, room)
                CloneObjectAndMove (mongbat3, room)
              }
              case ("2") {
                CloneObjectAndMove (ettin1, room)
                CloneObjectAndMove (ettin3, room)
              }
              case ("3") {
                CloneObjectAndMove (ogre1, room)
                CloneObjectAndMove (ogre3, room)
              }
              case ("4") {
                CloneObjectAndMove (orc1, room)
                CloneObjectAndMove (orc3, room)
              }
              default {
                CloneObjectAndMove (mongbat1, room)
                CloneObjectAndMove (mongbat3, room)
              }
            }
          }
          else if (GetInt(room, "cycle") = 2) {
            rnd = GetRandomInt(1,4)
            switch (rnd) {
              case ("1") {
                CloneObjectAndMove (mongbat1, room)
                CloneObjectAndMove (mongbat5, room)
              }
              case ("2") {
                CloneObjectAndMove (ettin1, room)
                CloneObjectAndMove (ettin5, room)
              }
              case ("3") {
                CloneObjectAndMove (ogre1, room)
                CloneObjectAndMove (ogre5, room)
              }
              case ("4") {
                CloneObjectAndMove (orc1, room)
                CloneObjectAndMove (orc5, room)
              }
              default {
                CloneObjectAndMove (mongbat1, room)
                CloneObjectAndMove (mongbat5, room)
              }
            }
          }
          else {
            CloneObjectAndMove (mongbat1, room)
            CloneObjectAndMove (mongbat4, room)
          }
        }
      }
    }
    IncreaseObjectCounter (room, "cycle")
    switch ((GetRandomInt (0, 5))) {
      case (1,2,3) {
        if (GetInt(room, "cycle") = 0) {
          CloneObjectAndMove (mongbat1, room)
          IncreaseObjectCounter (room, "cycle")
        }
        else if (GetInt(room, "cycle") = 1) {
          CloneObjectAndMove (mongbat1, room)
          CloneObjectAndMove (mongbat3, room)
          IncreaseObjectCounter (room, "cycle")
        }
        else if (GetInt(room, "cycle") = 2) {
          CloneObjectAndMove (mongbat1, room)
          CloneObjectAndMove (mongbat5, room)
          IncreaseObjectCounter (room, "cycle")
        }
        else {
          CloneObjectAndMove (mongbat1, room)
          CloneObjectAndMove (mongbat4, room)
          IncreaseObjectCounter (room, "cycle")
        }
      }
      case (4) {
        CloneObjectAndMove (mongbat4, room)
        IncreaseObjectCounter (room, "cycle")
      }
      case (5) {
        CloneObjectAndMove (mongbat5, room)
        IncreaseObjectCounter (room, "cycle")
      }
      default {
        CloneObjectAndMove (mongbat1, room)
        IncreaseObjectCounter (room, "cycle")
      }
    }
  </function>
  <function name="NPC_Mage_Add">
    // TO MAKE EVERYTHING EASILY CONVERTIBLE TO FUNCTIONS IN THE FUTURE,
    // I SHALL START SCRIPTS WITH THIS NEXT LINE HENCEFORTH:
    // FROM HERE ON, THE SCRIPT CAN REMAIN AS IS IF COPIED OVER TO A NEW FUNCTION
    // Create temp_obj att on game because Ask won't recognize a script variable
    // temp_file.obj = object
    Ask ("Would you like to offer them a nickname?") {
      object = CloneObject (Mage)
      if ((result)) {
        msg ("Type in a new nickname:")
        get input {
          nick = (result)
          set (object, "alias", nick)
          msg ("They agree to the nickname.")
        }
      }
      SetNPCAsMage (object)
      ShowNPCStatusDiv (object)
    }
  </function>
  <function name="NPC_Fighter_Add">
    // TO MAKE EVERYTHING EASILY CONVERTIBLE TO FUNCTIONS IN THE FUTURE,
    // I SHALL START SCRIPTS WITH THIS NEXT LINE HENCEFORTH:
    // FROM HERE ON, THE SCRIPT CAN REMAIN AS IS IF COPIED OVER TO A NEW FUNCTION
    // Create temp_obj att on game because Ask won't recognize a script variable
    // temp_file.obj = object
    Ask ("Would you like to offer them a nickname?") {
      object = CloneObject (Fighter)
      if ((result)) {
        msg ("Type in a new nickname:")
        get input {
          nick = (result)
          set (object, "alias", nick)
          msg ("They agree to the nickname.")
        }
      }
      SetNPCAsFighter (object)
      ShowNPCStatusDiv (object)
    }
  </function>
  <function name="NPC_Archer_Add">
    Ask ("Would you like to offer them a nickname?") {
      object = CloneObject (Archer)
      if ((result)) {
        msg ("Type in a new nickname:")
        get input {
          nick = (result)
          set (object, "alias", nick)
          msg ("They agree to the nickname.")
        }
      }
      SetNPCAsArcher (object)
      ShowNPCStatusDiv (object)
    }
  </function>
  <function name="NPC_Rogue_Add">
    Ask ("Would you like to offer them a nickname?") {
      object = CloneObject (Rogue)
      if ((result)) {
        msg ("Type in a new nickname:")
        get input {
          nick = (result)
          set (object, "alias", nick)
          msg ("They agree to the nickname.")
        }
      }
      SetNPCAsRogue (object)
      ShowNPCStatusDiv (object)
    }
  </function>
  <function name="SetNPCAsFighter" parameters="object"><![CDATA[
    set (object, "class", "Fighter")
    set (object, "energy", GetRandomInt(40,60))
    set (object, "poison", GetRandomInt(40,60))
    set (object, "cold", GetRandomInt(20,40))
    set (object, "physical", GetRandomInt(65,75))
    set (object, "fire", GetRandomInt(50,60))
    set (object, "str", GetRandomInt(30,35))
    set (object, "dex", GetRandomInt(35,45))
    set (object, "int", GetRandomInt(50,70))
    set (object, "weapon", longsword2)
    object.stam = ((object.dex) * (object.str)) / 10
    object.stam = ToInt(ToString(object.stam))
    object.mp = ((object.int) * 3) / 2
    object.mp = ToInt(ToString(object.mp))
    object.maxstam = (object.stam)
    object.maxmp = (object.mp)
    set (object, "max_dam", (GetRandomInt(1,3) + (object.str)))
    set (object, "dam", (object.dam + object.max_dam))
    set (object, "Pluck", GetRandomInt(75,90))
    weapon = object.weapon
    set (object, "SpellDamage", (((object.int) * 1)  / 10) + (object.SpellDamage + weapon.SpellDamage))
    set (object, "Health", GetRandomInt(100,100))
    set (object, "npc", 2)
    object.Health = ToInt(ToString(object.Health))
    object.WeaponDamage = ((object.str+weapon.AosMinDam+weapon.AosMaxDam)/3)
    object.suffix = "the rookie Fighter"
    player.npc1 = true
    PrintCentered ("Ah, okay. Meet your new fighter, " + object.name + "!<br />")
    JS.eval ("$('#health-" + object.name + "').html('" + object.health + "');")
    JS.eval ("$('#weapon-" + object.name + "').html('" + weapon.alias + "');")
    JS.eval ("$('#mp-" + object.name + "').html('" + object.mp + "');")
    JS.eval ("$('#ener-" + object.name + "').html('" + object.energy + "');")
    JS.eval ("$('#poi-" + object.name + "').html('" + object.poison + "');")
    JS.eval ("$('#cold-" + object.name + "').html('" + object.cold + "');")
    JS.eval ("$('#fire-" + object.name + "').html('" + object.fire + "');")
    JS.eval ("$('#phys-" + object.name + "').html('" + object.physical + "');")
    JS.eval ("$('#dex-" + object.name + "').html('" + object.dex + "');")
    JS.eval ("$('#int-" + object.name + "').html('" + object.int + "');")
    JS.eval ("$('#str-" + object.name + "').html('" + object.str + "');")
    object.changedhealth => {
      JS.eval ("$('#health-" + object.name + "').html('" + object.health + "/" + object.maxhealth + "');")
      JS.eval ("$('#hits-indicator-" + object.name + "').css('padding-right', '" + (200 * object.health / object.maxhealth) + "px');")
    }
    object.changedweapon => {
      JS.eval ("$('#weapon-" + object.name + "').html('" + weapon.alias + "');")
    }
    object.changedenergy => {
      JS.eval ("$('#ener-" + object.name + "').html('" + object.energy + "');")
    }
    object.changedmp => {
      JS.eval ("$('#mp-" + object.name + "').html('" + object.mp + "');")
    }
    object.changedpoison => {
      JS.eval ("$('#poi-" + object.name + "').html('" + object.poison + "');")
    }
    object.changedcold => {
      JS.eval ("$('#cold-" + object.name + "').html('" + object.cold + "');")
    }
    object.changedfire => {
      JS.eval ("$('#fire-" + object.name + "').html('" + object.fire + "');")
    }
    object.changedphysical => {
      JS.eval ("$('#phys-" + object.name + "').html('" + object.physical + "');")
    }
    object.changeddex => {
      JS.eval ("$('#dex-" + object.name + "').html('" + object.dex + "');")
    }
    object.changedint => {
      JS.eval ("$('#int-" + object.name + "').html('" + object.int + "');")
    }
    object.changedstr => {
      JS.eval ("$('#str-" + object.name + "').html('" + object.str + "');")
    }
    MakeObjectVisible (object)
    MoveObjectHere (object)
    EnableTurnScript (npc_attack)
  ]]></function>
  <function name="SetNPCAsMage" parameters="object"><![CDATA[
    set (object, "class", "Mage")
    set (object, "energy", GetRandomInt(40,60))
    set (object, "poison", GetRandomInt(40,60))
    set (object, "cold", GetRandomInt(20,40))
    set (object, "physical", GetRandomInt(10,20))
    set (object, "fire", GetRandomInt(40,60))
    set (object, "str", GetRandomInt(5,10))
    set (object, "dex", GetRandomInt(25,30))
    set (object, "int", GetRandomInt(80,100))
    set (object, "weapon", spellbook2)
    object.stam = ((object.dex) * (object.str)) / 10
    object.stam = ToInt(ToString(object.stam))
    object.mp = ((object.int) * 3) / 2
    object.mp = ToInt(ToString(object.mp))
    object.maxstam = (object.stam)
    object.maxmp = (object.mp)
    object.parent = (game.pov.parent)
    set (object, "max_dam", (GetRandomInt(1,3) + (object.str)))
    set (object, "dam", (object.dam + object.max_dam))
    set (object, "Pluck", GetRandomInt(75,90))
    weapon = object.weapon
    set (object, "SpellDamage", (((object.int) * 4)  / 10) + (object.SpellDamage + weapon.SpellDamage))
    set (object, "Health", GetRandomInt(100,100))
    set (object, "npc", 2)
    object.Health = ToInt(ToString(object.Health))
    object.WeaponDamage = ((object.str+weapon.AosMinDam+weapon.AosMaxDam)/3)
    object.suffix = "the initiate Mage"
    player.npc2 = true
    PrintCentered ("Ah, okay. Meet your new mage, " + object.name + "!<br />")
    JS.eval ("$('#health-" + object.name + "').html('" + object.health + "');")
    JS.eval ("$('#weapon-" + object.name + "').html('" + weapon.alias + "');")
    JS.eval ("$('#mp-" + object.name + "').html('" + object.mp + "');")
    JS.eval ("$('#ener-" + object.name + "').html('" + object.energy + "');")
    JS.eval ("$('#poi-" + object.name + "').html('" + object.poison + "');")
    JS.eval ("$('#cold-" + object.name + "').html('" + object.cold + "');")
    JS.eval ("$('#fire-" + object.name + "').html('" + object.fire + "');")
    JS.eval ("$('#phys-" + object.name + "').html('" + object.physical + "');")
    JS.eval ("$('#dex-" + object.name + "').html('" + object.dex + "');")
    JS.eval ("$('#int-" + object.name + "').html('" + object.int + "');")
    JS.eval ("$('#str-" + object.name + "').html('" + object.str + "');")
    object.changedhealth => {
      JS.eval ("$('#health-" + object.name + "').html('" + object.health + "/" + object.maxhealth + "');")
      JS.eval ("$('#hits-indicator-" + object.name + "').css('padding-right', '" + (200 * object.health / this.maxhealth) + "px');")
    }
    object.changedweapon => {
      JS.eval ("$('#weapon-" + object.name + "').html('" + weapon.alias + "');")
    }
    object.changedenergy => {
      JS.eval ("$('#ener-" + object.name + "').html('" + object.energy + "');")
    }
    object.changedmp => {
      JS.eval ("$('#mp-" + object.name + "').html('" + object.mp + "');")
    }
    object.changedpoison => {
      JS.eval ("$('#poi-" + object.name + "').html('" + object.poison + "');")
    }
    object.changedcold => {
      JS.eval ("$('#cold-" + object.name + "').html('" + object.cold + "');")
    }
    object.changedfire => {
      JS.eval ("$('#fire-" + object.name + "').html('" + object.fire + "');")
    }
    object.changedphysical => {
      JS.eval ("$('#phys-" + object.name + "').html('" + object.physical + "');")
    }
    object.changeddex => {
      JS.eval ("$('#dex-" + object.name + "').html('" + object.dex + "');")
    }
    object.changedint => {
      JS.eval ("$('#int-" + object.name + "').html('" + object.int + "');")
    }
    object.changedstr => {
      JS.eval ("$('#str-" + object.name + "').html('" + object.str + "');")
    }
    MakeObjectVisible (object)
    MoveObjectHere (object)
    EnableTurnScript (npc_attack)
  ]]></function>
  <function name="SetNPCAsArcher" parameters="object"><![CDATA[
    set (object, "class", "Archer")
    set (object, "energy", GetRandomInt(55,60))
    set (object, "poison", GetRandomInt(30,55))
    set (object, "cold", GetRandomInt(55,60))
    set (object, "physical", GetRandomInt(60,65))
    set (object, "fire", GetRandomInt(40,60))
    set (object, "str", GetRandomInt(15,25))
    set (object, "dex", GetRandomInt(70,85))
    set (object, "int", GetRandomInt(30,40))
    set (object, "weapon", bow2)
    object.stam = ((object.dex) * (object.str)) / 10
    object.stam = ToInt(ToString(object.stam))
    object.mp = ((object.int) * 3) / 2
    object.mp = ToInt(ToString(object.mp))
    object.maxstam = (object.stam)
    object.maxmp = (object.mp)
    object.parent = (game.pov.parent)
    set (object, "max_dam", (GetRandomInt(1,3) + (object.str)))
    set (object, "dam", (object.dam + object.max_dam))
    set (object, "Pluck", GetRandomInt(75,90))
    weapon = object.weapon
    set (object, "SpellDamage", (((object.int) * 2)  / 10) + (object.SpellDamage + weapon.SpellDamage))
    set (object, "Health", GetRandomInt(100,100))
    set (object, "npc", 2)
    object.Health = ToInt(ToString(object.Health))
    object.WeaponDamage = ((object.str+weapon.AosMinDam+weapon.AosMaxDam)/3)
    object.suffix = "the apprentice Archer"
    player.npc3 = true
    PrintCentered ("Ah, okay. Meet your new archer, " + object.name + "!<br>")
    JS.eval ("$('#health-" + object.name + "').html('" + object.health + "');")
    JS.eval ("$('#weapon-" + object.name + "').html('" + object.weapon.alias + "');")
    JS.eval ("$('#mp-" + object.name + "').html('" + object.mp + "');")
    JS.eval ("$('#ener-" + object.name + "').html('" + object.energy + "');")
    JS.eval ("$('#poi-" + object.name + "').html('" + object.poison + "');")
    JS.eval ("$('#cold-" + object.name + "').html('" + object.cold + "');")
    JS.eval ("$('#fire-" + object.name + "').html('" + object.fire + "');")
    JS.eval ("$('#phys-" + object.name + "').html('" + object.physical + "');")
    JS.eval ("$('#dex-" + object.name + "').html('" + object.dex + "');")
    JS.eval ("$('#int-" + object.name + "').html('" + object.int + "');")
    JS.eval ("$('#str-" + object.name + "').html('" + object.str + "');")
    object.changedhealth => {
      JS.eval ("$('#health-" + object.name + "').html('" + object.health + "/" + object.maxhealth + "');")
      JS.eval ("$('#hits-indicator').css('padding-right', '" + (200 * object.health / object.maxhealth) + "px');")
    }
    object.changedweapon => {
      JS.eval ("$('#weapon-" + object.name + "').html('" + weapon.alias + "');")
    }
    object.changedenergy => {
      JS.eval ("$('#ener-" + object.name + "').html('" + object.energy + "');")
    }
    object.changedmp => {
      JS.eval ("$('#mp-" + object.name + "').html('" + object.mp + "');")
    }
    object.changedpoison => {
      JS.eval ("$('#poi-" + object.name + "').html('" + object.poison + "');")
    }
    object.changedcold => {
      JS.eval ("$('#cold-" + object.name + "').html('" + object.cold + "');")
    }
    object.changedfire => {
      JS.eval ("$('#fire-" + object.name + "').html('" + object.fire + "');")
    }
    object.changedphysical => {
      JS.eval ("$('#phys-" + object.name + "').html('" + object.physical + "');")
    }
    object.changeddex => {
      JS.eval ("$('#dex-" + object.name + "').html('" + object.dex + "');")
    }
    object.changedint => {
      JS.eval ("$('#int-" + object.name + "').html('" + object.int + "');")
    }
    object.changedstr => {
      JS.eval ("$('#str-" + object.name + "').html('" + object.str + "');")
    }
    MakeObjectVisible (object)
    MoveObjectHere (object)
    EnableTurnScript (npc_attack)
  ]]></function>
  <function name="SetNPCAsRogue" parameters="object"><![CDATA[
    set (object, "class", "Rogue")
    set (object, "energy", GetRandomInt(45,60))
    set (object, "poison", GetRandomInt(35,50))
    set (object, "cold", GetRandomInt(55,65))
    set (object, "physical", GetRandomInt(65,75))
    set (object, "fire", GetRandomInt(15,25))
    set (object, "str", GetRandomInt(20,30))
    set (object, "dex", GetRandomInt(70,85))
    set (object, "int", GetRandomInt(30,40))
    set (object, "weapon", warfork2)
    object.stam = ((object.dex) * (object.str)) / 10
    object.stam = ToInt(ToString(object.stam))
    object.mp = ((object.int) * 3) / 2
    object.mp = ToInt(ToString(object.mp))
    object.maxstam = (object.stam)
    object.maxmp = (object.mp)
    object.parent = (game.pov.parent)
    set (object, "max_dam", (GetRandomInt(1,3) + (object.str)))
    set (object, "dam", (object.dam + object.max_dam))
    set (object, "Pluck", GetRandomInt(75,90))
    weapon = object.weapon
    set (object, "SpellDamage", (((object.int) * 2)  / 10) + (object.SpellDamage + weapon.SpellDamage))
    set (object, "Health", GetRandomInt(100,100))
    set (object, "npc", 2)
    object.Health = ToInt(ToString(object.Health))
    object.WeaponDamage = ((object.str+weapon.AosMinDam+weapon.AosMaxDam)/3)
    object.suffix = "the infamous Rogue"
    player.npc3 = true
    PrintCentered ("Ah, okay. Meet your new rogue, " + object.name + "!<br>")
    JS.eval ("$('#health-" + object.name + "').html('" + object.health + "');")
    JS.eval ("$('#weapon-" + object.name + "').html('" + object.weapon.alias + "');")
    JS.eval ("$('#mp-" + object.name + "').html('" + object.mp + "');")
    JS.eval ("$('#ener-" + object.name + "').html('" + object.energy + "');")
    JS.eval ("$('#poi-" + object.name + "').html('" + object.poison + "');")
    JS.eval ("$('#cold-" + object.name + "').html('" + object.cold + "');")
    JS.eval ("$('#fire-" + object.name + "').html('" + object.fire + "');")
    JS.eval ("$('#phys-" + object.name + "').html('" + object.physical + "');")
    JS.eval ("$('#dex-" + object.name + "').html('" + object.dex + "');")
    JS.eval ("$('#int-" + object.name + "').html('" + object.int + "');")
    JS.eval ("$('#str-" + object.name + "').html('" + object.str + "');")
    object.changedhealth => {
      JS.eval ("$('#health-" + object.name + "').html('" + object.health + "/" + object.maxhealth + "');")
      JS.eval ("$('#hits-indicator').css('padding-right', '" + (200 * object.health / object.maxhealth) + "px');")
    }
    object.changedweapon => {
      JS.eval ("$('#weapon-" + object.name + "').html('" + weapon.alias + "');")
    }
    object.changedenergy => {
      JS.eval ("$('#ener-" + object.name + "').html('" + object.energy + "');")
    }
    object.changedmp => {
      JS.eval ("$('#mp-" + object.name + "').html('" + object.mp + "');")
    }
    object.changedpoison => {
      JS.eval ("$('#poi-" + object.name + "').html('" + object.poison + "');")
    }
    object.changedcold => {
      JS.eval ("$('#cold-" + object.name + "').html('" + object.cold + "');")
    }
    object.changedfire => {
      JS.eval ("$('#fire-" + object.name + "').html('" + object.fire + "');")
    }
    object.changedphysical => {
      JS.eval ("$('#phys-" + object.name + "').html('" + object.physical + "');")
    }
    object.changeddex => {
      JS.eval ("$('#dex-" + object.name + "').html('" + object.dex + "');")
    }
    object.changedint => {
      JS.eval ("$('#int-" + object.name + "').html('" + object.int + "');")
    }
    object.changedstr => {
      JS.eval ("$('#str-" + object.name + "').html('" + object.str + "');")
    }
    MakeObjectVisible (object)
    MoveObjectHere (object)
    EnableTurnScript (npc_attack)
  ]]></function>
  <function name="GetStatDiv" parameters="object" type="string"><![CDATA[
    object.status_div_id = "status_div_" + object.name
    tableOPEN = "<div id='" + object.status_div_id + "' class='npc_status_div npc_status_div_hidden '><hr /><table width='100%' class='npc_status_table'><tbody id='status_npc' class='npc_status_tbody'>"
    nameTR = "<tr><td class='npc_status_npcname' style='text-align:center;'>" + object.name + ":</td></tr>"
    statTR = "<tr><td class='npc_status_statname' style='text-align:right;'>___STATNAME___:</td><td class='npc_status_statvalue_td' style='text-align:left;'><span id='___STATVALUEID___' class='npc_status_statvalue_span' >___VALUE___</span></td></tr>"
    tableCLOSE = "</tbody></table></div>"
    refdict = NewStringDictionary()
    dictionary add (refdict, "Weapon", "weapon-" + object.name + "")
    dictionary add (refdict, "Health", "health-" + object.name + "")
    dictionary add (refdict, "Strength", "str-" + object.name + "")
    dictionary add (refdict, "Intelligence", "int-" + object.name + "")
    dictionary add (refdict, "Dexterity", "dex-" + object.name + "")
    dictionary add (refdict, "Mana", "mp-" + object.name + "")
    statTable = tableOPEN
    statTable = statTable + nameTR
    foreach (stat, refdict) {
      thisTR = Replace(Replace(statTR, "___STATNAME___", stat), "___STATVALUEID___", refdict[stat])
      v = "0"
      if (stat = "Weapon") {
        if (HasAttribute(object, "weapon")) {
          v = object.weapon.name
        }
        else {
          v = "NONE"
        }
      }
      else {
        trueattname = Replace(refdict[stat], "-" + object.name, "")
        if (HasAttribute(object, trueattname)) {
          v = ToString(GetAttribute(object, trueattname))
        }
        else {
          v = "---"
        }
      }
      if (v = "0") {
        // Then it isn't set for real yet. To avoid confusion, use "---".
        v = "---"
      }
      thisTR = Replace(thisTR, "___VALUE___", v)
      statTable = statTable + thisTR
    }
    statTable = statTable + tableCLOSE
    // TODO: This next line is unused, but maybe it will come in handy in the future for some reason
    // object.stat_table_html = statTable
    return (statTable)
  ]]></function>
  <function name="SetUpNPCStatTables"><![CDATA[
    // [=> This function is called from game.inituserinterface
    // dbglog ("[SetUpNPCStatTables]: running...")
    // TODO: Fix the next line to make this an accordion!
    // JS.eval ("$('<h3 id=\"npc-stat-label\" class=\"ui-accordion-header ui-corner-top ui-widget\"><span class=\"ui-icon ui-icon-triangle-1-s\"></span><span class=\"accordion-label-header\">NPC Stats</span></h3><div id=\"npc-stats-accordion\" class=\"ui-accordion-content ui-corner-bottom ui-widget\"></div>').appendTo('#gamePanesRunning');")
    //
    // [=> Create one DIV to rule them all (and in the darkness, bind them)
    JS.eval ("$('<div id=\"npc-stats-holder\" class=\"npc_status_div_hidden\"><b><center>NPC STATS</center></b></div>').appendTo('#gamePanesRunning');")
    // [=> Later during play, when an NPC is added to the group, a script will remove the 'npc_status_div_hidden' class from each element, displaying said element.
    JS.eval ("$(\"<style>.npc_status_div_hidden { display:none !important;}#npc-stats-holder {min-height:42%; max-height:32vh; overflow-y:scroll; background-color:white;color:black;}</style>\").appendTo('head');")
    // [=> Later during play, when an NPC is added to the group, a script will remove the 'npc_status_div_hidden' class from each element, displaying said element.
    // [=> Now do the actual NPC Stuff
    // They all have the same changed scripts to run, so consolidate.
    changed_scripts_to_run = Split("changedhealth,changedweapon,changedstr,changedint,changeddex,changedmp,changedphysical,changedfireh,changedcold,changedpoi,changedenergy", ",")
    NpcInitialSetup (Mage, changed_scripts_to_run)
    NpcInitialSetup (Archer, changed_scripts_to_run)
    NpcInitialSetup (Fighter, changed_scripts_to_run)
    // dbglog ("[SetUpNPCStatTables]: ENDS")
  ]]></function>
  <function name="NpcInitialSetup" parameters="object, changedscriptstorun">
    // JS.eval ("$('body').append(\"" + GetStatDiv(object) + "\");")
    if (not TypeOf (changedscriptstorun) = "stringlist") {
      error ("NpcInitialSetup: changedscriptstorun must be a string list.")
    }
    foreach (cstr, changedscriptstorun) {
      if (HasScript(object, cstr)) {
        do (object, cstr)
      }
    }
    JS.eval ("$(\"" + GetStatDiv (object) + "\").appendTo('#npc-stats-holder')")
    // TODO: Eventually change this to be in an accordion
    // JS.eval ("$(\"" + GetStatDiv(object) + "\").appendTo('#npc-stats-accordion')")
  </function>
  <function name="ShowNPCStatusDiv" parameters="object">
    JS.eval ("$('#" + object.status_div_id + "').removeClass('npc_status_div_hidden')")
    JS.eval ("$('#npc-stats-holder').removeClass('npc_status_div_hidden')")
  </function>
  <function name="HideNPCStatusDiv" parameters="object">
    JS.eval ("$('#" + object.status_div_id + "').addClass('npc_status_div_hidden')")
  </function>
  <function name="NPC_Attacker"><![CDATA[
    // dbglog ("[NPC_Attacker] Running...")
    loc = game.pov.parent
    enemy = enemies()
    rnd = GetRandomInt(1,5)
    // list = ScopeVisibleLivingEnemiesForRoom(loc)
    // dbglog ("[NPC_Attacker]: :::END OF NPC_Attacker:::")
    foreach (npc, AllObjects()) {
      if (GetInt(npc, "npc") = 2) {
        MoveObjectHere (npc)
        weapon = npc.weapon
        weapondam = (npc.WeaponDamage + npc.str)
        spelldam = ((npc.SpellDamage + npc.int)/2)
        pdam = ToInt(ToString((weapondam)+(rnd)))
        if (enemy <> null) {
          if (weapon = spellbook2) {
            if (enemy.current_hp < (spelldam)) {
              PrintCentered ("The " + enemy.alias + " is obliterated by " + npc.alias + "'s destructive spell.<br>")
              Gen_Loot (enemy)
              set (enemy, "status", "Passed beyond the Veil.")
              set (enemy, "alive", False)
              set (enemy, "current_hp", 0)
            }
            else if (enemy.current_hp > (spelldam)) {
              enemy.current_hp = (enemy.current_hp - pdam)
              PrintCentered ("" + npc.alias + " charges the "+weapon.alias+", which activates the magical properties that engulfs the " + enemy.alias + " causing " + pdam + " damage! Plus an additional: " +rnd+" bonus damage!<br>")
              if (enemy.current_hp < 1) {
                PrintCentered ("" + npc.alias + " has killed " + enemy.alias + "!<br>")
                Gen_Loot (enemy)
                set (enemy, "status", "Passed beyond the Veil.")
                set (enemy, "alive", False)
                set (enemy, "current_hp", 0)
              }
              else {
                PrintCentered ("" + enemy.alias + " has only been injured and has " + enemy.current_hp + " health remaining!<br>")
              }
            }
          }
          else if (weapon = bow2) {
            // weapondam = ToInt(ToString((combat_damage(weapon,enemy))))
            if (enemy.current_hp < (weapondam)) {
              PrintCentered ("The " + enemy.alias + " is pierced by " + npc.alias +"'s extremely accurate arrow.<br>")
              Gen_Loot (enemy)
              set (enemy, "status", "Passed beyond the Veil.")
              set (enemy, "alive", False)
              set (enemy, "current_hp", 0)
            }
            else if (enemy.current_hp > (weapondam)) {
              enemy.current_hp = (enemy.current_hp - pdam)
              PrintCentered ("" + npc.alias + " charges the "+weapon.alias+", which activates the magical properties that engulfs the " + enemy.alias + " causing " + pdam + " damage! Plus an additional: " +rnd+" bonus damage!<br>")
              if (enemy.current_hp < 1) {
                PrintCentered ("" + npc.alias + " has killed " + enemy.alias + "!<br>")
                Gen_Loot (enemy)
                set (enemy, "status", "Passed beyond the Veil.")
                set (enemy, "alive", False)
                set (enemy, "current_hp", 0)
              }
              else {
                PrintCentered ("" + enemy.alias + " has only been injured and has " + enemy.current_hp + " health remaining!<br>")
              }
            }
          }
          else {
            if (enemy.current_hp < (weapondam)) {
              PrintCentered ("The " + enemy.alias + " is crushed by " + npc.alias + "'s powerful blow.<br>")
              Gen_Loot (enemy)
              set (enemy, "status", "Passed beyond the Veil.")
              set (enemy, "alive", False)
              set (enemy, "current_hp", 0)
            }
            else if (enemy.current_hp > (weapondam)) {
              enemy.current_hp = (enemy.current_hp - pdam)
              PrintCentered ("" + npc.alias + " charges the "+weapon.alias+", which activates the magical properties that engulfs the " + enemy.alias + " causing " + pdam + " damage! Plus an additional: " +rnd+" bonus damage!<br>")
              if (enemy.current_hp < 1) {
                PrintCentered ("" + npc.alias + " has killed " + enemy.alias + "!<br>")
                Gen_Loot (enemy)
                set (enemy, "status", "Passed beyond the Veil.")
                set (enemy, "alive", False)
                set (enemy, "current_hp", 0)
              }
              else {
                PrintCentered ("" + enemy.alias + " has only been injured and has " + enemy.current_hp + " health remaining!<br>")
              }
            }
          }
        }
      }
    }
  ]]></function>
  <function name="enemies" type="object"><![CDATA[
    // dbglog ("[enemies] running...")
    foreach (enemy, FilterByAttribute(ScopeVisibleLivingEnemiesForRoom(game.pov.parent), "mob", 1)) {
      // dbglog ("[enemies]: Found an enemy. enemy.name:")
      // dbglog (enemy.name)
      // TODO: This will return the 1st enemy it finds and end the function.
      // Do you want this to do that, or return an object list of all enemies?
      if (enemy.current_hp > 0) {
        return (enemy)
      }
    }
    // TODO: Maybe if still running, should return null?
    // dbglog ("[enemies]: Found no living enemy. Returning null.")
    return (null)
    // dbglog ("[enemies]: ENDS")
  ]]></function>
  <function name="targets"><![CDATA[
    // DEPRECATED
    loc = game.pov.parent
    foreach (mob, ScopeVisible()) {
      obj = mob
      if (game.pov.parent = obj.parent) {
        if (GetInt(obj, "mob") = 1) {
          loc = game.pov.parent
          if (GetInt(obj, "current_hp") > 0) {
            target = obj.name
            list add (loc.mlist, target)
            return (loc.mlist)
          }
          else if (GetInt(obj, "current_hp") < 1) {
            target = obj.name
            list remove (loc.mlist, target)
          }
        }
      }
      else {
        return (loc.mlist = null)
      }
    }
  ]]></function>
  <function name="RandomSpawn" parameters="object">
    enemies
    loc = game.pov.parent
    if (not GetBoolean(loc, "spawn")) {
      PrintCentered ("You hear the sound of something growling nearby...")
      switch ((GetRandomInt (0, 5))) {
        case (1,2,3) {
          if (GetInt(loc, "cycle") = 0) {
            CloneObjectAndMove (mongbat5, loc)
          }
          else if (GetInt(loc, "cycle") = 1) {
            CloneObjectAndMove (mongbat1, loc)
          }
          else if (GetInt(loc, "cycle") = 2) {
            CloneObjectAndMove (mongbat3, loc)
          }
          else {
            CloneObjectAndMove (mongbat5, loc)
          }
        }
        case (4) {
          CloneObjectAndMove (mongbat5, loc)
        }
        case (5) {
          CloneObjectAndMove (mongbat4, loc)
        }
        default {
          CloneObjectAndMove (mongbat4, loc)
          IncreaseObjectCounter (loc, "cycle")
        }
      }
      set (loc, "spawn", True)
    }
    else if (GetBoolean(loc, "spawn")) {
      if (enemies() = null) {
        Respawn (loc)
      }
    }
    // DisplayList (loc.mlist, true)
  </function>
  <function name="MakeQuest">
    if (GetBoolean(game, "create_quest_")) {
      loc = game.CarrierLocation
      carrier = game.Carrier
      pqo = playerQuestObject
      questName = game.questName
      quest_alias = game.quest_alias
      quest_weight = game.quest_weight
      quest_reward = game.quest_reward
      questStateInactive = game.questStateInactive
      questStateActive = game.questStateActive
      questStart = game.questStart
      questFinishString = game.questFinishString
      questEndString = game.questEndString
      questNext1 = game.questNext1
      questNext2 = game.questNext2
      questIncScoreString = game.questIncScoreString
      questIncScoreValue = game.questIncScoreValue
      questRscript = game.questRscript
      questObject.alias = quest_alias
      questObject.questName = questName
      questObject.quest_alias = quest_alias
      questObject.weight = quest_weight
      questObject.reward = quest_reward
      questObject.questStateInactive = questStateInactive
      questObject.questStateActive = questStateActive
      questObject.questStart = questStart
      questObject.questFinishString = questFinishString
      questObject.questNext1 = questNext1
      questObject.questNext2 = questNext2
      questObject.questIncScoreString = questIncScoreString
      questObject.questIncScoreValue = questIncScoreValue
      questObject.questRscript = questRscript
      pqo.carrier = carrier
      pqo.loc = loc
      pqo.questName = questName
      pqo.quest_alias = quest_alias
      pqo.quest_weight = quest_weight
      pqo.quest_reward = quest_reward
      pqo.questStateInactive = questStateInactive
      pqo.questStateActive = questStateActive
      pqo.questStart = questStart
      pqo.questFinishString = questFinishString
      pqo.questEndString = questEndString
      pqo.questNext1 = questNext1
      pqo.questNext2 = questNext2
      pqo.questIncScoreString = questIncScoreString
      pqo.questIncScoreValue = questIncScoreValue
      pqo.questRscript = questRscript
      MakeObjectVisible (pqo)
      set (carrier, "carrier", True)
      MakeObjectVisible (questObject)
      carrier.questLoot = questObject
      spawn = CloneObjectAndMove (carrier, loc)
      if (GetBoolean(game, "create_quest_")) {
        CloneObjectAndMove (pqo, player)
      }
      MoveObject (questGiverBig, game.pov.parent)
	  MoveObject (questGiverSmall, game.pov.parent)
    }
  </function>
  <function name="SpawnForRoom" parameters="room"><![CDATA[
    foreach (att, GetAttributeNames(room, false)) {
      if (StartsWith(att, "_spawn_") and GetBoolean (room, att)) {
        class_to_spawn = Split(att, "_")[2]
        name_to_spawn = Split(att, "_")[3]
        if (GetBoolean (room, "room_spawns_" + class_to_spawn)) {
          obj = GetObject(name_to_spawn)
          if (not obj <> null) {
            msg ("{color:red:[SpawnForRoom]: Error running spawning script. " + name_to_spawn + " does not exist.}")
          }
          else {
            if (not AnyVisibleForRoomCloneGetBoolean(game.pov.parent, obj, "alive")) {
              spawn = CloneObjectAndMove (obj, room)
            }
          }
        }
      }
    }
  ]]></function>
  <function name="AddNPCs">
    if (GetBoolean(game, "archer")) {
      set (Recruiter, "archer", True)
      set (Recruiter, "archer_fee", game.archer_fee)
      MakeObjectVisible (Archer)
    }
    if (GetBoolean(game, "fighter")) {
      set (Recruiter, "fighter", True)
      set (Recruiter, "fighter_fee", game.fighter_fee)
      MakeObjectVisible (Fighter)
    }
    if (GetBoolean(game, "mage")) {
      set (Recruiter, "mage", True)
      set (Recruiter, "mage_fee", game.mage_fee)
      MakeObjectVisible (Mage)
    }
    if (GetBoolean(game, "rogue")) {
      set (Recruiter, "rogue", True)
      set (Recruiter, "rogue_fee", game.rogue_fee)
      MakeObjectVisible (Rogue)
    }
    if (GetBoolean(game, "create_npcs_")) {
      CloneObjectAndMove (Recruiter, game.pov.parent)
    }
  </function>
  <function name="GameMap"><![CDATA[
    if (game.map <> null) {
      if (GetBoolean(game, "mapz_yes")) {
        foreach (rm, AllObjects()) {
          if (GetBoolean(rm, "mapz_yes")) {
            rm.main_map = game.map_main
          }
        }
      }
    }
  ]]></function>
  <function name="Cleanup" parameters="room">
    foreach (enemy, FilterByAttribute (ScopeVisibleForRoom(room), "objectType", 3)) {
      if (enemy.current_hp = 0) {
        if (not game.pov.parent = room) {
          RemoveObject (enemy)
        }
      }
    }
    foreach (weapon, FilterByAttribute (ScopeVisibleForRoom(room), "objectType", 2)) {
      if (not Got(weapon)) {
        if (not game.pov.parent = room) {
          RemoveObject (weapon)
        }
      }
    }
  </function>
<!--
********************************************************************************
**
**																				14. TIMERS SECTION
-->
  <timer name="hp_regen1">
    <interval>2</interval>
    <script>
      hpregen1
    </script>
  </timer>
  <timer name="mp_regen1">
    <interval>2</interval>
    <script>
      mpregen1
    </script>
  </timer>
  <timer name="stam_regen1">
    <interval>2</interval>
    <script>
      stamregen1
    </script>
  </timer>
  <timer name="stat_regen1">
    <interval>5</interval>
    <enabled />
    <script><![CDATA[
      if (game.pov.health < player.maxhp) {
        game.pov.health = (game.pov.health) + 1
      }
      if (player.mp < player.maxmp) {
        player.mp = (player.mp) + 1
      }
      if (player.stam < player.maxstam) {
        player.stam = (player.stam) + 1
      }
    ]]></script>
  </timer>
  <timer name="stat_regenhp1">
    <interval>5</interval>
    <enabled />
    <script><![CDATA[
      if (game.pov.health < player.maxhp) {
        game.pov.health = (game.pov.health) + 1
      }
    ]]></script>
  </timer>
  <timer name="stat_regenmp1">
    <interval>5</interval>
    <enabled />
    <script><![CDATA[
      if (player.mp < player.maxmp) {
        player.mp = (player.mp) + 1
      }
    ]]></script>
  </timer>
  <timer name="stat_regenstam1">
    <interval>5</interval>
    <enabled />
    <script><![CDATA[
      if (player.stam < player.maxstam) {
        player.stam = (player.stam) + 1
      }
    ]]></script>
  </timer>
  <timer name="poison_tick1">
    <interval>5</interval>
    <enabled type="boolean">false</enabled>
    <script><![CDATA[
      foreach (object, AllObjects()) {
        if (GetBoolean(object, "poisoned")) {
          if (GetBoolean(object, "alive")) {
            if (RandomChance(85)) {
              sdam = player.PoisonDam
              dam = GetRandomInt (7,10)
              sdam = (player.SpellDamage+dam+sdam)/3
              sdam = ToInt(ToString(sdam))
              in_nox.max_dam = (sdam)
              in_nox.sp_dam = (in_nox.sp_dam + in_nox.max_dam + player.PoisonDam)
              oresist = ((in_nox.sp_dam) * (object.poison)) - (object.poison)
              resisted = (oresist) / 100
              ouchies = (in_nox.sp_dam) - ToInt(ToString(resisted))
              if (GetInt(object, "current_hp") > in_nox.sp_dam) {
                set (object, "status", "Still Poisoned!")
                PrintCentered ("The poor " + object.alias + " screams in agony, as poison courses through it's body doing " + (ouchies) + " damage!")
                set (object, "current_hp", (object.current_hp) - (ouchies))
                if (GetInt(object, "fire") <= 0) {
                  set (object, "fire", ((object.fire) - 0))
                }
                else {
                  set (object, "fire", ((object.fire) - 25))
                }
              }
              else if (GetInt(object, "current_hp") <= in_nox.sp_dam) {
                set (object, "status", "Passed beyond the Veil.")
                PrintCentered ("The " + object.alias + " screams a final time and is silenced forever.")
                IncScore ("Killed " + object.alias + " with poison.", 5)
                set (object, "current_hp", 0)
                set (object, "alive", false)
                Gen_Loot (object)
                // list remove (game.pov.parent.mlist, object.name)
                DisableTimer (poison_tick1)
                ShowRoomDescription
              }
            }
            else {
              set (object, "status", "Alive")
              if (GetInt(object, "fire") <= 74) {
                set (object, "fire", ((object.fire) + 25))
              }
              else {
                set (object, "fire", ((object.fire) + 0))
              }
              PrintCentered ("Your poison is no longer effecting " + object.alias + ".")
              set (object, "not_poisoned", true)
              set (object, "poisoned", false)
              DisableTimer (poison_tick1)
              ShowRoomDescription
            }
          }
          else {
            set (object, "status", "Passed beyond the Veil.")
            set (object, "current_hp", 0)
            set (object, "alive", false)
            Gen_Loot (object)
            // list remove (game.pov.parent.mlist, object.name)
            DisableTimer (poison_tick1)
          }
          in_nox.sp_dam = 1
        }
      }
    ]]></script>
  </timer>
<!--
********************************************************************************
**
**																				END OF FILE
-->
</library>